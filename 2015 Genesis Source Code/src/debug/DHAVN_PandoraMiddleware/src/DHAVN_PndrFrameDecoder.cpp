/*
 ******************************************************************
 *        COPYRIGHT  2011, LG Electronics.
 *	    All Rights Reserved
 *----------------------------------------------------------------*
 * MODULE     :   Pandor Frame Decoder                            *
 * PROGRAMMER :   Snigdha Satapathy                               *
 * DATE       :   07/12/2011                                      *
 * VERSION    :   0.1                                             *
 *--------------------------------------------------------------- *
 * MODULE SUMMARY :    This module will receive the data          *
 *  from transport layer. Check if its Ack, if so then
 *  update packet validator about received ack else will decode the
 *  packet and emit the signal to be listened by interested modules.
 *
 *----------------------------------------------------------------*
 *
 * MODIFICATION RECORDS                                           *
 *  07/12/2011  0.1 Snigdha Satapathy   cpp file created
 ******************************************************************
 */

#include <QDataStream>
#include "DHAVN_PndrFrameDecoder.h"
#ifdef DHAVN_PANDORA_TESTFRAMEWORK
#include <QDebug>
#endif

#include <QDebug>

#include <QTime>

//Static variables initialization
//int CPndrFrameDecoder::m_nInstanceCounter = 0;

//CPndrFrameDecoder* CPndrFrameDecoder::m_pInstance = 0;
//QMap <quint8,EPndrEvent> CPndrFrameDecoder::m_RespIdEventMap;
//QMap <qint8,EPndrError> CPndrFrameDecoder::m_RespErrorMap;

const int c_OneByte = 1;
const int c_charArraySize = 248;
const quint8 c_rateNone = 0;
const quint8 c_ratePositive = 1;
const quint8 c_rateNegative = 2;

/**
 *******************************************************************
 * Get the single instance of decoder class
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
/*
CPndrFrameDecoder* CPndrFrameDecoder::GetInstance()
{
    USE_LOG_UTIL;
    LOG_INIT_V2("Pandora");

    LOG_TRACE<< "CPndrFrameDecoder::GetInstance:Entry" <<LOG_ENDL;

    if(m_pInstance == NULL)
    {
        m_pInstance = new CPndrFrameDecoder();
    }

    //The counter is incremented only if m_pInstance allocation is succesfull.
    if(m_pInstance)
    {
        m_nInstanceCounter++;
        LOG_TRACE<< "Decoder::m_nInstanceCounter = " << m_nInstanceCounter<<LOG_ENDL;

    }
    else
    {
        LOG_INFO << "Decoder Init Failed." << LOG_ENDL;
    }

    LOG_TRACE<< "CPndrFrameDecoder::GetInstance:Exit" <<LOG_ENDL;

    return m_pInstance;
}
*/
/**
 *******************************************************************
 * Releases instance of CPndrFrameDecoder
 *
 * @param    None
 *
 * @return     None
 *
 *******************************************************************
 */
/*
void CPndrFrameDecoder::ReleaseInstance()
{
//    USE_LOG_UTIL;
//    LOG_INIT_V2("Pandora");
    LOG_TRACE<< "CPndrFrameDecoder::ReleaseInstance:Entry" <<LOG_ENDL;

    LOG_TRACE<< "Decoder Instance to be deleted is m_nInstanceCounter = " << m_nInstanceCounter <<LOG_ENDL;

    m_nInstanceCounter--;
    if (!m_nInstanceCounter)
    {
        LOG_TRACE<< "CPndrFrameDecoder::Deleted" <<LOG_ENDL;

        delete m_pInstance;
        m_pInstance = NULL;
    }
  //  LOG_TRACE<< "CPndrFrameDecoder::ReleaseInstance:Exit" <<LOG_ENDL;

}
*/

/**
* Constructor
*/
CPndrFrameDecoder::CPndrFrameDecoder()
{
    initResCmdEventIdMap();
    initResponseErrIdMap();
    LOG_INIT_V2("Pandora");
    //LOG_TRACE<< "CPndrFrameDecoder::CPndrFrameDecoder() created " <<LOG_ENDL;
}



/**
 *******************************************************************
 * Destructor
 *******************************************************************
 */
CPndrFrameDecoder::~CPndrFrameDecoder()
{
    LOG_TRACE<< "CPndrFrameDecoder::~CPndrFrameDecoder()" <<LOG_ENDL;
}

/**
 *******************************************************************
 * Check if received frame is Ack frame
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
bool CPndrFrameDecoder::IsAckFrame(const QByteArray& inFrame)
{

    return (inFrame[eTypeBytePos] == PNDR_FRAME_TYPE_ACK);

//    LOG_TRACE<< "CPndrFrameDecoder::IsAckFrame:Entry" <<LOG_ENDL;

//    bool isAck = false;
//    if(inFrame[eTypeBytePos] == PNDR_FRAME_TYPE_ACK)
//    {
//        isAck = true;
//    }

//    LOG_TRACE<< "CPndrFrameDecoder::IsAckFrame:Exit" <<LOG_ENDL;

//    return isAck;
}

/**
 *******************************************************************
 * Check if received frame is a complete frame
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
bool CPndrFrameDecoder::IsFrameComplete(const QByteArray& inFrame)
{
   // LOG_TRACE<< "CPndrFrameDecoder::IsFrameComplete:Entry" <<LOG_ENDL;
    bool isFrameComplete = false;

    if(PNDR_FRAME_START == inFrame[eStartBytePos]
            && PNDR_FRAME_END == inFrame[inFrame.count()-1])
    {
        isFrameComplete = true;
    }

   // LOG_TRACE<< "DECODER::IsFrameComplete = "<< isFrameComplete <<LOG_ENDL;

    return isFrameComplete;
}

#ifdef DHAVN_PANDORA_TESTFRAMEWORK

void CPndrFrameDecoder::DecodeAndEmit(const QByteArray& inFrame)
{
  LOG_TRACE<< "CPndrFrameDecoder::DecodeAndEmit:Entry" <<LOG_ENDL;
    // find the request command
    switch((uint)inFrame[7])
    {
        //case PNDR_CONNECT:
          case PNDR_SESSION_START:
        {
            //Error Case: User Not logged In
            /*
            EPndrError error = GetErrorIdForResponse(PNDR_STATUS_SEE_DEVICE);
            qDebug() << "errId is " << error;
            emit ErrorReceived(error);
            */

            //Error Case: No Station Selected
            /*
            EPndrError error = GetErrorIdForResponse(PNDR_STATUS_NO_STATION_ACTIVE);
            qDebug() << "errId is " << error;
            emit ErrorReceived(error);
            */

            //Buffering case
            /*
            qDebug()<< "emit PNDR_UPDATE_STATUS" ;
            emit ReplyReceived(EVENT_PLAY, PNDR_STATUS_PLAYING);
            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            quint32 stationToken = 5;
            emit ReplyReceived(EVENT_STATION_ACTIVE, stationToken);
            */

            //Playing Case

            qDebug()<< "emit PNDR_UPDATE_STATUS" ;
            emit ReplyReceived(EVENT_PLAY, PNDR_STATUS_PLAYING);

            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            quint32 stationToken = 5;
            emit ReplyReceived(EVENT_STATION_ACTIVE, stationToken);

            qDebug()<< "emit PNDR_UPDATE_TRACK";
            quint32 trackToken = 20;
            emit ReplyReceived(EVENT_TRACK_UPDATED, trackToken);



            //Incomplete Authentication case
            /*
            qDebug()<< "emit PNDR_UPDATE_STATUS" ;
            emit ReplyReceived(EVENT_PLAY, PNDR_STATUS_PLAYING);
            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            quint32 stationToken = 5;
            emit ReplyReceived(EVENT_STATION_ACTIVE, stationToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK";
            emit ReplyReceived(EVENT_NONE, PNDR_TRACK_NONE);
            qDebug()<< "emit PNDR_UPDATE_TRACK";
            quint32 trackToken = 10;
            emit ReplyReceived(EVENT_NONE, trackToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK_ALBUM_ART";
            quint32 imageLen = 256;
            emit ReplyReceived(EVENT_ALBUM_ART, imageLen);
            */

            //Error Case : Authentication Fails
            /*
            qDebug()<< "emit PNDR_UPDATE_STATUS" ;
            emit ReplyReceived(EVENT_PLAY, PNDR_STATUS_PLAYING);
            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            quint32 stationToken = 5;
            emit ReplyReceived(EVENT_STATION_ACTIVE, stationToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK";
            emit ReplyReceived(EVENT_NONE, PNDR_TRACK_NONE);
            EPndrError error = GetErrorIdForResponse(PNDR_STATUS_SEE_DEVICE);
            qDebug() << "errId is " << error;
            emit ErrorReceived(error);
            */

            //Error Case: No Stations
            /*
            EPndrError error = GetErrorIdForResponse(PNDR_STATUS_NO_STATIONS);
            qDebug() << "errId is " << error;
            emit ErrorReceived(error);
            */


            break;

        }
        case PNDR_EVENT_TRACK_PAUSE:
        {
            qDebug() << "Decoder Paused called ";
            quint16 elapsedTime = 2;
            qDebug()<< "emit PNDR_UPDATE_TRACK_ELAPSED" ;
            emit ReplyReceived(EVENT_SET_ELAPSED_POLLING,elapsedTime);

            qDebug()<< "emit PNDR_UPDATE_STATUS" ;
            emit ReplyReceived(EVENT_PAUSE, PNDR_STATUS_PAUSED);
            break;
        }

        case PNDR_EVENT_TRACK_PLAY:
        {
            qDebug() << "Decoder Play called ";
            qDebug()<< "emit PNDR_UPDATE_STATUS" ;
            emit ReplyReceived(EVENT_PLAY, PNDR_STATUS_PLAYING);

            quint16 elapsedTime = 2;
            qDebug()<< "emit PNDR_UPDATE_TRACK_ELAPSED" ;
            emit ReplyReceived(EVENT_SET_ELAPSED_POLLING,elapsedTime);
            break;
        }               
        case PNDR_EVENT_TRACK_SKIP:
        {
            qDebug() << "Decoder Skip called ";

            qDebug()<< "emit PNDR_UPDATE_TRACK";
            quint32 trackToken = 90;
            emit ReplyReceived(EVENT_TRACK_UPDATED, trackToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK_ALBUM_ART";
            quint32 imageLen = 200;
            emit ReplyReceived(EVENT_ALBUM_ART, imageLen);

            quint8 totalSeg = 9;
            QByteArray inData1("ffd8ffe000104a46494600010100000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc000110800e000e003012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00cfd32fc58785d6e98175467ca8f7908feb55ff00e12e91503b69c76952e18ca3a019f4f4aacd86f02376f9d8fe529ff0ac89479905a96fb84796fe98652bfcc8ae185084f9e4f74cf7b0b878d5a726fa1d07fc265347079f269cbe5773e7f23f4a487c6b3ce50c7a68dacfb0133ff17a7ddf7ae5e621ecc2cf26c1064bc3d379e8067f4ff22a2d3205377188256f29a452d1b0ff00564738cfd01fd2b596128a8b9245bc347db28af86ddf5bf7f43b28bc5b7b22b1fecf45218a9569f9041231f77da9c3c517800cd8403b67ed07ff0089ac1b77564925180b23b4838ec4f1fa73f8d5845ddcf3d3d2ae382a2d6a8f5a8e5946504e57b9ae7c4d785b9b5800ff00aec73ffa0d29f12de04e2da21ff6d8f4ff00be6b21d36f239ab5a7476ad790b6a12f936424512be393960028f7278fd7b53fa8d0ec555cbf0b4a0e72bd9799a2de20bf8f6892c624dca186e918654f423e5e94bff090deb9cfd9edf1e9e61ff0a678b5c4be38d595176c700861451c05023538ff00c78d57bdb0b9d352d0dc8543748d2469df008073f98fce92c1d06b631c2e170b529c2725672d95cb675fbf604f9108cf3c4a7fc2957c417fb8ee820da7b073fe159793c8a4cf1cf5a7f51a1d8edfecbc3f9fde6bff00c2417a01062888c7f7c9fe94c3afdfe7848bf326b301e08a0371fd28fa950ec1fd9786edf89a675ebd2846c88b7d4d245afea0170560ebe84ff5acc2739a4f6a3ea747f94a595e1bb7e26b9d7efce0edb639ff0065bff8aa70d7eec9cf950aff00ba4d63835b3a4e833ea51bdccd2c767a7c4332ddce42a28fa9ea68784a1fca655b0383a3173a9a2f51afe24bec8222831ee4d443c49a8ffcf1b7383d771fe5ff00d7a5f1449a479fa469fa24ad2dbf946fa7b82083267291f500807e638ee306b2b6b0270334960e83fb26184c3617150738c5a57ee687fc24fa817398edc7e2d4e5f125ee7e6b780ffbb211fd2b1cafcc074352321031c9e28fa951fe53a3fb2b0fdbf1351b5fbe718582119fef484ff4a626bd7e725a2424fa4871fcab3f90080319f41484fca69fd4a8f61ff64e1fb7e268c9e23ba890b9b78c05e4b1989e3bff000d41278ba647d925a29652033094e01c1e3eefa822b3ae0ffa3b9604aa8c90073ef5977524369732fda95ca893cc8d54f0e0938cfaf073f81ac9e128f328d8f331f83a7497eef4f367463c5ec7627d808790304dd3601607a0e3af15045e31b89023fd842a3b01b8bb1033dbeef07fc6b21923960b38a39fce61701d081ca8ec0fbf3fe7153322ac576b1ae53ed0a7a77de7353f55a5ccd25d0e78613ddbb7d3f434594b7c3f9871c093ff004631ac9cb5c43158c2a8eef102dbc9000f53fe7f9d6f5940f75e099614c6e6f380ff00bf8d5cd5fa1d3f4e951ae13ed136d5280e4aa0078cfbf4a29d5e4e74b76cc70d57d8d2949ed627bbd3ede4d2f74b3a4b70a40dd19e19ba0c807aff00934fb0d3a1feca636aa4ccd95977b724f7507a0cfea2a4d4747b7b3115dd9c784c8574049ebc03f99c7e355658eeec74d6d4a2999312853111f2b28c8c9ef9278ac154724945ff005d8aa38bc34a92c44b477b58b31ed68b2b90a7e52bd3691db15ab61692de5c436d08cc92b0551f5ace5c18a4bb8b6bc1236e6da798ce00208fa8fd7a5759e0b859b51b9ba45cb59da49327fbd8c0fe75ea53a8a50e647bef14a1879545d11ce17dfa8de4301125b41218525e9e632f0c7e99e9f4a934e45d43c456568ab982dae13cc27f8e7ce31f441c7d49f6acf866361a45af9233793285807fb64659cfb2e73f5c7bd745e0db08e2d6f4cb60c36a4a1cb31eb8f9893f9559cf26ea52e59bbf2abbf5b68be450f106a1e5f8975db945df3b6a0f140ad8c33801467d86dc9fa62b57c4b733dc278612ea5335ca69d2349230c1725906");
            QByteArray inData2("7ff1dac1b936da9789f52d46d0bb597da6536cce7258b312eff42781ec05761aae8d3dcde9bc8e2695349d0a163020f9e572646da3d3ee8cd4766cf3a3254e346b55d12dbd2dfab397edcd1fe7ad749a96bda7def813ed3a958da596ab13ac16d15af49589190a3ae00273d71f8d53d7b53d2a2bbd020b2b38ee2e45a86bdb785bcb55ced2a59b9209f9b8e4f239f5ae63d2866d17652834ef6fd57de37c3ba5c1ac6b115a4f729046c09cb100b1eca3d4fb7d6a1d4f44d434594437d0e1b1c4880ec7fa7f81e6ba4d47c316d79e2fbdd3ececf75a5b584774f006e59cefc2027a64a8fd6b06cb57d6eff4c8bc152399f56b99909331ddf628c7ccdb89c9ce0600273d7b6054f36a72cb377ed55483bc6caebb6bf9fe865e30692bb0d13508b4fd5753f0feb3a65bc1a6c3bc1bc9be5760bcef6cf1b4ff00091c8c8eb9cd7190dc4576cf35b6ff00b3b48fe516e094dc4293f5183f8d352b9e9613318d79ca16b5b55e6bb920fbc339fc6b635ef37c53e2683458e6d9a0597969042bc2484a06695bd700fe87df30f892cd348d5ac74a806644b517377293d59c90a8076c6d27f2a6130e9be17d46f2779965bb46b1b258903399186588048c00b9cffbc7bf54f538b1b529e269c710b5516d24fabd93fbccc1711ea37f7ba9c69b21b8936dbae31b604f92318edf281f9d5fd3ede1babe8219e74822770ad239c05153ea97fa6d8782f44b4b7b489b56f399bc88860bc4011976e768cede7bed2060671bd77a2daea7a9f86acedad92d45fd93cf72884b636ec2704ffbc464fb74a130a198d2a14550b38daeafd2fdccad7fc2979a45dcb32a799645c94923e8aa4f00fd3819ef58b7125b5ac16e64b806e6e1f6c56e83736d19cbb7f75463bf5e6b4bfb7f52f0adb6a9a1cd6c7ccbb324765a717dc2dd492031ea42e327d0f18039c49ab7875adfc4f0da5a5b31924b0872fb7efbe5f7313f803edc524decc8c2e635a5cb4a6edfdef2b5fefee63363a62a12416603f3ae9fc1baac763e239f4bd5adad2086e8f9101b8c89a57ce0718c043838ce3b73d05606bb689a5eb3776103acef14de5a0560492464027d40ebf4355ce77d1cce955ab2a6b44968fb942498a6c8e3dbbdc9c16385503a93ec3fa8a4bd6b3b9d20c4b756f713a1022080657b70339c75e7d07b556d52dcc10626b889e67003448a4617396e73d381f955bbcd116c2c2d2e620ac635db3f032c5bf8b3e9918fa1fad7055aca4d59fa1e46373052c4ac3cfe17f81674fb5b0589ee2c62dad96d892c84f96de9f5e7afbd5388a7d9de139f344e3cc07bb67afe38ff002315249a44f6fa39be865912e76f9ae99e36f5c7d40fea3de9969e5dfaa5dc2c37bec32479e723fc3fa54d1ac97336f46187c651abcd4e9fd9baf546e693badbc2c1a456f904cc401ce37b1ae5ae5238b50904925f46656c320000e7900f3e98ebdabb159047e1d2e4290b0b939e9c13584f611ea125f5e5f3fd9223119132c3ef8c707df041c7f85746130f1ab52a393b58f2713569d18f2495f51b05a8f9a6b8bbb95b6b5902b877ddb9c1c8401739edcfff005f11dcd94915adc5d4979706c89054db9c2956ce38c8e4f3c0fd3352db5e5c68d6ba54c6d564091b3a89d49432313cb0f607dbad26997660b48aeefa1090ab4cc91b640cfcb8033ea4b63f1aca953529a527a5c8aca9c29ba918a7e452d27ec30995edcde3e028955c285009c02467d4819f7ae83c3de21b8f0bdf5d3c16b1dd003cb11bc8506de1979c1e9c0e9fe3583ac5bf93e2189d73f31d92320da1fe6182464f5c03f5f5ade8c68e2e58dd83f686030143f23a741f8d695ed86a975792923d2c0d78d6c2b4e3a6cd231f7cd75a84ba85d8856e24f95638136c70a76441d87f33cd4f2b17b778d2678cba142d19c1c118207d4122b4251e138504f713c68aea0aef91c120fa0ebfa5394f854c0264911e26e0346646e7d38e9f8d4fd795be067752c7d2a70f631a7a76332011c30a4518c22a8503d854b65717fa749753586ab770dcdd1ccd317de64fa86c838ede9569a4f0c2498227538cfdc9ff000ed4ff00b6785ca10c18e7b98a53fcc50f1cbf919557174eaa519d2bd8cb4b406e9af2ea79eeef1bacf70e59bf0f4153436f0c2f2491ae1e46dcc7b9356fcff09927e51f84327f853a26f0c1dde5acb841b98ac72f0a3b9e38ed496397f231d3c6c69c528d2b245657d4124bb99759d456eae88f3ae239cabb81d178e0019e076a6585b8d306eb27921973bbcd573bcb7aeeeb9ad141e1d907c8972aa17716c4cab8fa9ace975df08aa95373392339292b8fd734e38b4f683328e330b4f5f656be81a82deeb37025d6354bbd4021cac533e231ff00011819a923c46ca401b571c7b0a6db5ff842f24544be915d8f0249a503afd6b49ec7420e03cf22963c037120cfeb49e3631d1c59a61f1d429c1c68d3d3c85f15f882c356d4bedd61a76a7fda2f0a453248a8b0e173c87c93fc47b761d2b2235bcba9e2b9d4a6577854adbc318c47003d768ee4f7279abe47869e39577ceeb09dac51a660a7d0914d07c2fb48df38ff00bff496363fcace7c3d5853b2e57251dbcbf02b8b7856e1ee02fef5d4296f614abf6c174d77fda97cb7023f2a291262a618ff00ba98e838a98bf86b0c04f77f8b5c508de1c9031f3ae14f6c99e9fd763fcaceb9e2e9d45ef51bff00c12a5bd94503c92ee9249e539926958b3b9f763c9a0dc5ec37d35ec5a9dea5e4918844de66e291ff007067b56a450680e1dc5c3623fbe2492418fa826a1173e1779fc96bab50e09fbe4aa8");
            QByteArray inData3("23af278a5f5e8bd1419954c6e1f914254b45b18d6f07953bdcf9d2c976e72f732b96909f5cfe5fa52d8dac305f44b1e72aacfb8f2598e0124f73c9fceb7e69340b7555760c1c650a2b36efa15a842696923c76864fb529c9470e0aaf7fbdef8a8a98b53838f2b4386269c9c611a7631a7b3b79aedc8bc4dd23636142d9238c55d8e3bb3b9ee6fdd6d23237908416e41000f4effe4e24b3d223bad2b51ba9a48d1a470b03e306370c7907dc9fd2af477d7da4cf65736fa6c777225b33159012a1d87cd903bf240ff78d6d5b0ea9c61695efe9a1f3ca543115aa5a3669ef7dca1249750a345e7dbc16a83ca5f300f9801ee7d3ebfe3911d94114bf6d8aed1bcbf9b1182c0e3af7e3d2ad241717d73649730fd9e16c1db312005123613ddb69c55fd7ed24d3759dc90b4515cc2119d48da58e7838f6c7ff00af3574b057a0ea45ebd8ca12c2c314a8b8eeb7bbdfa17662a3c2531278f22407ff001eaa1626d2fef237bf730d8a9f343053b864000e7b671d7b707a9045a91449a15b5b0e7ed32f96c01fe1c92dff008e83f9d5d7d46cdf4b8ed56d5a59d2566565c00a376cd83d7200183eb9ed5c556b38c654d7567557a0aa57751af84a57125b8bd927d320b8362a773e1b2d1a646f6ef8cb71cff74f4cd67dabff00694efe6112334654dc39c2a2af5239f5da481d7773c022b6bc37ae5a68b6172d3db891d9510803864d9bf18ff799beb9ef838cdb2b74d3b575b89ec992da49fed11c3c9f972ca540ef83b07d5735cf176728d9dd7e2270d13b68ca3716efe646198bac1201d8606f1c819fba79e3b123b1e2af88afe2d3312c80c8f2a855873856c127e6f51cf4add92e63d5f5291e2b3f2eda4fdd9743c0041071e837631eea7d2bce7c55712dc5fc224e1a38541ff7b9cfea0d75d29d4c438aa9d11bc66b074aa461bdd14afaee4d4af5ee660aa5800157a000638a92c751b8d39a436e1195c00c8eb9538391c7e154637caf3d6a4ce4fafe35ea7245c796da1e4aab3e7e74f53b1d2f506d4a32d1db9dcb81710a380197b633d3a63fc6a691d16dc48b206e18ba60831e09e0fafe15ca59457918fb640244488e4c80e07d3debb2b7dba8e992b43be613b6e558b00c7290a0eecf51c7b75fad79f5e828495f667d1e03327ecdf3f4441664dd024958f0ac5cb6485c7ae29d77a8d9d8dbed91963770adf3c84b9039c150300138ebe959f3cd71a0daccb7685d9f1c2be0481bd48ec36f4ae66eae1afefe6b991705ce42f603d2952c3294db8ec3c4e6f7a3151776d0e3a95fc865cddcb89721c6f3822ab30238e3eb4ad8e8a314d058f1db3eb5e8c62a2ac8f9e949cb7622c458e14735a42dae6ea4335ccaeee46324f6a7595b0c0661c9ad88a1cd7552a116b9a46f428b989a6ea7369c88928b963b865e2931c2fddc8ee4738ae9840da8405e23bee72d237072f1e0b6f663f2fb607a7e78f069ef2f4526ac8d3eee11b2ea2dd6ca309281878bd0e4751ec6bcbc651827789f4785a7568453e9fd6e5592e4acdb31f2e4293e87fc8fe557ed2478e60638e099f636f59776d8d7180c7df938c1ed548dbcf75aa7da6f55fc812e2e3c94d80b023eef18c9dbe9dc7ad3358beb87536b2262e248a38dc22041122e700e072d83c9ae68d1849c5437fd452cc2728cd79fe9b14f55d5a358bcab1bbf3e49642f34c53e6ce31c13f8f3585f650ca48e456a3d9c689955e71d6a8331b7720723d2bd88e1a34a363e731929ca77913e99aacba533aba34d01e7cbddb4ab0390c0f63f4aedb46b98f539a4bf49b71d9b3730f9f25896dc7b9e473e98f4ae0fcd8dd4e460fa5741e13001bb8c49f24a510a9cf1927247a6066b8b19878a839459d181c5ca32e596a91b9a75c3c11cb1bdced0aacfbba88d4f2180ee79ce4faa8ef9135afef4fd9269088f28596499d4ab3739241ce14155f4e727a712db69b7d71a3dc6a9f6688594d70a8f91f32ef38c76c81b87d1bb706b6347d3edb58bab082c115afa476bcbbb86cec85589c2e0753820633fa671e456abcd76dffc00a6e1195edb7cf5f33247d9df709e1691595adcb91f3a05f9d5b07ae53248efe9d2aadeea2d75a50b76669312a2c3230c1e1c6473d720e41ee0d6cdd5a4f6dabea5a7a342f324d08663f2ab6e6c124fba900fa0c8fac1e20d29349bf8d96ea3ba8a5d932caa0125d3e639c7fb391f88c7a0d70d88f6353dd7ba39ead38d58ddad9dc74000b5d39ce0e246503dce7ffaf5159cf2dbdba5d436c0c28de549215e0bb2f7f4c06c063c64e0d3e6223f0bf9dcabc397461d886e3f0f5f6cd51d3f52956c6eaca2648e1bfc2cccdd220c4e4e7dfe600fb81d41a75a9c9f3492bab9d7552756516ecfa79f913693653ea9a9259db5ba9711f9cc5ced054c680024648c15e3df9ec6a6d66f6791ed2cee15d3ec28b082836b8cba90bc77c46791d720d3addae34eb8682da648af2543246031184c9fddbfa30ea0d1a3e9525d4733dfde451cf10fb5ccd210c1a46e0291d700647d49ee2b0e6bb73e88cbd9f4ebd8d3b9b47b4164ed2412fdb9959950f3194cb1c7aaf18fe75e45e2950dac332f0b229917e8ccc47e86bb9b5b85b68e4bc2cfba53f67b28ddb2c73f79b3dc03819ee07bd717e2c8962d6444830a90228e7d2baf031946a5a43c4c23eca4e2f45639edbb47622a5823692548c7de66007e34a056ae816c92eab134d187863396cb6dc7a1cd7b095cf3123a7d4e18a1d26df4b87e5c6d2fb467e5cf24fd4d56d3e286d5668b79449dd624f7621871f81fe55d2456b05da34926143ae03ff787619ff3d6b9");
            QByteArray inData4("bd77479e36f356e249648dbf7793f74d4e229b9c795ec6f09249aeaf41b7ba76745974c209bd862498467ef677313fa35723736d35a24467468cba92030c1c56b6bd3dd278825b8372c2770183a1c10318c7e958d3bcd712b4b34cf2c87ab39cd7361e1351bdf47a95592a7154e4ad28e9e4424e3ae2a6b58fcc979aae739e7ad68587cbce2baa0aeec611d59b16c9823fa56fe9d606e1c2aa9624f4ac3b5f9987d6bd37c01a7adcea31871c03939a31d89f63465517447d36023085395492d91d4787bc150c56e92de724f3b3fc6af6bffd8ba6e897eadf67f356228222464330e323d39cfd39aeb55400062b9ef107846cf5d9e39e40ab20c066dbcb01d01f5afce7ebb531188e7ad276ec79b571b56acf9a4fe47893c171736b04ea59615576600f1b89279f7e569a6d61dd75333812c921db93f787b7d3f4c57a26b5a24369af5968f6ccbe4ceaaeea7a8c1febfd0d4fe23f05e9714125e5b2f972a8c90a319f5af7f0f99421523e6196f351aaf99692773c7a74c64600ac6b94ca903923ad7457f188e4751eb5872a6379fe95f6345f3c6ccdb34a4a2ccbe327238ae83c3040339c646707fef8715cfb1dac474c574de148ddadaef6e3cc578dd03772093f91e95e662f4a6cf3307073abcabb33bdb4f1348fa0db682b660451cb1e5b3d3e6054fb9391ee79cf434e9345bbd334dd3e6b4b808d3dba3a329db93b46e56c771d41f4c83d335806ea7952d961187b7c1b7c8c640c6ddde8ddb3ea083f7856ae8de4ea3745753ba922b38db1d4aec8fef2a8f425801ff6cc8af1254f96ed6c7a1ccf9d4a0ad2f24430c91489765aeb6c0b1c43cc95092332302cc3ae49cb11c7159d3c48f669289d98e1d594f38211c919c76c7e248f4a75e074b8bb28e4f9b39f9f18cac631923b9c966c0ebb0f6ad0d5b5186fc69d6d6b670c51c3004f95baa161962dee78f7de7deb5845b9ab75339737b3725b75d4b2b034fe1b31a8f999580ffbe8d73c6d9a3bf44482e16c83e491b776d38dca003f5ef8c62ba441bbc3120c9ff5320fe75ca4f696177717b716518861b38d5d55547cc40ef9ec4a9af4f0aaacaad48c367dcbc63a3152955e8cb979a9adadbdb5bdae6389e25b8de54162493819ed8c7f85456d70daadb5e0bc76cdac6b22499c12b9394623a838fad497bf64d46ce64b274692cd7cd454047eed9431519ebb1891ff00eba862b351a4cf0bce515597cf78b932bf5dbfeeae7f13514f0ee72f6515ef5ccaae2a8d3a09bdeff31a6de79f5082492de50622ab903e5e181e3a6140071ffd7ae73c68c46bc768ff00966bf8d6e59fd925d2af8ca0ade478113200a0e0e0ee03db9fc2b23c6a1575a57da4930ae703dcd5b525895192b595b434ad4e10c15e9bba6d339e5e838e6bb4f0259c3737171e62efdb838238ef5c629c91e9d715e9ff000eecb669d2dd719964207d07ff005f35e8d35a9e39d22d9ef3247146aac3902451b73ce3f5f4accd734d74852dcc7145b95628c06fbfea47d3deb76e93ecf2fda71955192ccdc21e3b7e5f9541aa5d5eddc53244215444c962d92490718ff3fe35ac92634ec7966a9a7dbcd757124fe6a379ab106033b7a0e9fd6a83e976692ed37ac17ed1e51cc64e3dba726bae9e6530a06de91ee2ce76e49c124061c9c1c8fd7d7358a6c66337daa4b9b2c1956e195467072322b99527156469394aa49cdeecc8fecbb301e57bd0d1c530570aa73b7f11d7afe556edac6150cb044d26c936f98dd3e9c55b93c9ba6dbe4a7d95d96463b76fde6ebf5c62b574c4b46819d2e1e180caaad1ede38038fafbd38be5d4ba71d6ecb50f87e5dafb2450eb8241180735daf80a616b7a524055f040cd67d94f0c6862507746c0313d5864d695bb24770268d42b29f94e6bcdc749ca94a0f668fa1c24e3528ca9f73d1bede33d6a4176081c8ae4175359173d0f7ab715f663eb5f190c37ef3959cd3c0b5d0ccd7ede57f1ad85ea670536923b633fe22afebb798d32724ff0114b35d2142c7048e95c8f88b55cdb9851b93c9fa57a14b0b2ab56292d8eec35094e51e6da3f91c2df9dd2b119ac6b820063cf4ad3ba7cb93fceb1eee4c2b76cd7dfe1a2a9d3d4e0cceaf34dbe864bf12038cf3d2bb2f095cbce9706561f2aa2823f1ae377857c9ec738f5aec7c1ca3c8b928aeb9c0cb77eb5e4e35fee9bb9c1963ff6a89b91c5690c11892792175077e51829cfbe38ec3d0e39f6a9acdc092e65898468911da07928c4fb9241fd2acda4306a09189e56291da9373fbc6dacc4b72474002e381c5675f4335c347223092e1dfecf273d641c6efa11cfd294e8be48569a566bfab9ad1a987a58ca945b6edaebd2fd8d5d33568ffb15e3b908516458c6d4246f0372b8c64a9e4e719cf354a4786e6183e69fed3348924816360060f087d86739ef8cfa5598f4247b558a3ba78e2b67c34807df91b827f5007e22a3d3c5bb58ea2b7b7131bcb67516e7ce203e1c0395fa1fd29470d3a545d68a5697e0650961f1359c22dde3adba3ff863527731f83ae5978221939fceb3d5ecec5b7346aa708b1b01d791bb3eb9191f4dd5a45777852e173d6093f91ae4b55862d3679ed22bd5ba864442b229cf4e76fe04f4adf03522a5383766dfe46799616a55a8e71d974f52c4172ebaacf35ac68b70c80a2a8c0e495e47d187e42b5ad21b6fec755946216924cb67054056543f985aa73d869da35dd8b595eadcc925b937383c23e33b7f0c53743d721d241b6be7491194346ec9e601d38c60e30475ada9d484f1351c5daeb43cfc460ebc29ab2ba8d9bf994f5785ad");
            QByteArray inData5("8223290ff2800f6cf6ac9f189ceb6a0f6857f99ae912dec2ef4ed43519a6985e79aad67090482acff376e38c1ae5fc62c4eb838e3c95c7e66b2c4e2235b151e5e89a3d2861aa61f02e351eada7f818c08201c8fcabd0fc3be208b4af09a36cded1672a0e3ab1af360c738c8aed3c17a72ea567a8c72e481b0afd7e6ae885d3d0e265c5f1beadac5c1b3b782d555b83e60cae3df35af27f6b5aa35d4f0595f6f40b22c6082147b74fff005579fea307f65eb249475895ba2f0187d6b47fe1228e00afa7dd4bcfde867ea3e86a94ada32353a3696d35256961884738182acb8231ed5cfdea3c40a3465f82a483807ad5cb3bd7d4e559234293e71b97bd767ff08ab4fa6ef600cf8c95c7069ca5a1a29a5a1e5575f688cc64c9bb680a31d4014eb5d526851e32436f60c4b0cf20f5ff003eb5d0eada62dacff7416c03e98c8ae52ef31cee00039e958cbba368bd2e76765aab5fdcf9ae02336010bd38ff00f557556b77295e14702bcaf4bbb9526015d4127b9aee2cae2e8c20921d47b818ae2ad172563d3c04da91b175aab5bccac1719e0ae6acc5e238c2e0ee06b98bcb992fae7cb60b1ba73d3a8c81fd6b4a4d0bfd04c96d3334a06483c06ae5a786a72b37b9f4cead2b7bc8b975e22631958f233dcd733797cd216258926a94b72c7bf3deaa3cdc1c9fd6bd6c3e0e307a1c388c746316a0ac24d29e4e6b1aee52cec33c55d9ee17a66a8dc46ae0943923ad77555eef2a3e631151d4653627d7ff00ad5da7844b1b5b83927017bfd6b8a20e0e45769e0d6cdb5c29c7635e3e2ff82fe45e59fef31f9fe468693a94768b668ce98764964240dd8046771ee33c60d5963369ba97950ee4fb54118c7f7481807ea029fd2a96a7a6dbda59693716d2a3092dbfd25436e31b9e3181d3b1fc693488cb5b3df4d202e5d963576cb1183c819edcf6fe2ae8c554855c373f5d15ba6871d5c254a55e4d3f3bf7bff91d0db5d5a8d02dedbcd0a5d7cf915b9e0fcc393e8483f8560ea337da636bb16ca97219496538ee38c77a352b1934c82c5e4b8f323b9b68e68803bb60c7dd3ee38ab5a7e956f7da4de6a735e289adde358e173cc9b9b04a8ce78fe95dbed29c283a97ba6924bb5918e1f0357dbd9bb5b5b9b0b3791e1b9241b72b1b75f5c9ae66eeedede697eceb05c5b4457739882fde38181d7ad6edd12be0f9980c9d98c75ef55d2c2ce38d50dac4f0968fcfdec73924aaedfc79af3309858549ce73e8edf79eae3731961a4e115ab77f92dccebf89a4874fc1b753740ecd8b829bb2983e9dbf4a5b8fb67f685c5a59430de240e54c8c8a148eddc75f6358ed017ba9e089c9488078cb376dcbdeba3d3a192cade65b7914cdccae64e7385c903ebb401f5cf6ade865f18ca5ed7e1899e3b35e5829d0f8a76b5fcb70b296eaef4cbcbaf3628decd903c0d090482db4e0eeedf4ae47c6a0aeb8a39c790bd7ea6ba4d6e3934ebc173133f9379222c8a3819c8fe78cfe15ce78e19bfb706dc7fa95e0fd4d734f0dec314a2bccda58d58cc07b45bdd5fc99cf46acee15412c4e00033935ec3e17d28691a4a427fd749f3ca47f78f6ae13c15a67da2f3fb42e4620b73f2823ef3fff005bfc2bd52cc2cc7cc53c7606bd0a6ba9e66c64ea9a22cd633ba5947752b295019b18278cf03ad7116fe0cd4353b9559201046bfeb1dbab57b159a847919df081738e0739aadb55eec4dbc9191c05ebec4818a527aea896acec64e95e1fb6d1228e1b7b65621b3bdce704f15d2dcdedc411c83fd14889c248158fcb9357bfb3edda32cc93f3cf61ce41e2b36fadadbcabaf927c4adbdb04673d78aca724de80ce67c49656cf1b4cd09f3197921bdbd2bc9afa255b87c29eb8e4e6bd4b5a9f7c3b0f61819eb5e6f7703b5d3208c93bbd28b6874417ba53b3b6927b848e15cbb67192076cf5cd76d622da0f26396194965e0f9b91bbf3c562c302d92985543cf9059c01d3b81f91ad7731ef8172fd7383dbfc39cd4b827b9b526e0ee5dd6c45158c9796f01597006e693381907a67daa28758bc480c2b7b62ae9009590a37ddc67af4e9e956cc28f6cb0bc6d2c6c76955ebd2993e8f62b0caef693ef587c8043afdde9fdeac5d249dced58b9729c6dccec6e6724aa904b90a720f3da9b1de4ada4cd1246ac246dccc57246318e73c77ad69b49b5f35dfecd72a5d4a92197a118e39f6a8d74bb6b0b6982b4a1b6fca5d4f07ea38ed5d3cf7b2473ca7296ece5f196c9e689011c8e3e94a48cd31ce78193c52bbb9e7b2226bacf0a37936d7521c3054c9cd72673c103f4aeafc3859b4ad419a50408b006dfbbc1ae5c5ff0009fc8eccb7fde62fd7f235eeedee22b94b6b5b3b6999e25902796708ac338393ee3daaac2c492f2c3690b21656091ed7042b647b8ffeb56e6946630bdd7da10c93c43cbddc911c6ae429faed03e9e9595ae5935b6a1142b762469a72e536e36839cf3d3a715bcf054d50b2f8d6afd18e5997b7c44e8c9fbaf48faafd09ee61b9b586c372d8bc97b6eb322f97c283d013c7a7eb5a767a2dcdf787e6d717fb3552d6511ba792448a72071ce3bd6369d67737cfa7c71dc037261dabe77dd50ab9033f418ad0bd66b30ff67ba658a509e7c1ced6ce3dfd79ab9e5f1f6165f1ad5abf4610cdaf5f91bf71e89dbaf5fbcbdb43786a6466c0313f3e9d6b977d419ac24927553756ee0291918181f99ce7afe15d7db6c3a0bf998d86360d927a739ae46ee0d285d6f9aea6f31db3b593ff00ad5cb83c5aa352716af766d89c04712dc9bb34cad05a4f6b0b5c4cbf34f1064c8e08de80103f3a");
            QByteArray inData6("b40ddc176f6b7c863b98864039563c60e477e08fcfdeb425782e54092ee57f2a3545c2005543023181cf354f5636b797265d4af6f5ae89f999e1f9bf11b6af0f984fda3e6574f75637c66574a746cb4b6cefe64b733ddeb902c91dbe6d2cee62f3241cee62c00e9c01c9ae6fc6657fb74863d2251f5eb5d6594a61d385ac17570b632c88481100aec082b938e3915c7f8d33fdbee0903f74b8fd6b378975f15ccfccc6ae0a183c1b843ba3bbb15b1d3acadecd5d76aa0ce3f88e3afe35aa6fe3b2b5f37385ec3d6bc822d6a6d8892b93e580a197a903d6b52cf53d42fd4c316e9941c60fde19ff00f557a31a896c79b68b3d9b40be8f53472707030c3d2a749a38efda1e84720e2b9af0949358da996fb11965c3fca59b20f1d3be315d06af7162ab6b70975006c118120c90549f5f6a89c8ca57b97f54d5859da876dee701551792c6b961e2769e592078da294672a6b5667b59907fa75b121415cc80e78e7a1ed5cedc369cb7d14f137da9c31e705140f439e7afff00aeb25b8a290d36935ffef4fc90e4ee94f41f5ac6d4fc8b0568a01e64eff233ae48fae3ea71f81add6ba6b89fca8d0cdb5f7c217840013903d09e7f215a37169a7e9b24970c276603ccdca436dc13903dcf1dbfa553958d633b1e530adfdb5c2dc48cc8c9d01fe2c7f2adfd13518b55b81b9764c98dca0f5e8323dab4759cde5d7d95a1508c3f7727751cf03fc2b9dd12da4d37c531c18dd825481d18633fd01a49b3452b23bdb187fd2950b0da1b393f4ac6f15eb975a7111c363249086ccd21e07d07f8f4ed5d5db5901224b26725b2013ec6b3b5f3110a920c997280119078271f9034e688534d989a7dd477f6915cc792ae73cf51ed5523d4e1bd9efed0290d103cb0fbc0707f234df0ca88f454520e16561d7fdaa74f0a8d4999540dd19c9a6ba16a5a338067c9c8e2828d8ddb0fe35662506e6462a0b2b70a300558925f3081803157c9eef336656d0c9725460ff2aeabc3843689a98c9c98bf2e0d62dc451b5bb4846187435d07849226b3bd476de813e71c80060fff005eb8316ff74dfa1db96aff00694bd7f226925bd84c16b22344442c5640482e84647e99faff0038ed66f3e7b67027624ee667c71f29fceaf6a6d6cec8978752531ae2246607087d339e39fd69c87cbb6b5cc17c966ec4c4d22a94660a7382392719e2b6963e6e834e3abd2f63a69e574a388e64f45d2fd4d1d1e462b1adc8f2a536eaf0c918c1917a13cf7c6471ef514d67777f25f3db43fe876c55a6914fddce3033f5c564dc0588c314d16a4e638c795865c84ea08e781cfeb5a9a54574da4dd4962751fecd500dd6d64db8ff006bb9ad658e97b0ba8be67a5fc8e686554a38b73ba696d1eccd5fbbe17b825b8fb3c9d3e86b1cd85d4d2cf75ab6df32e6358e29319ea303a74c6147d48ad699b6f846e59793e43ff5aab26ab6573a1db5e3dca8fb261258f69dc71b1be51dfa0fccd678182e79c92bbbff00c3986695aa2bd38ecff4d8c296e2ea075b6ba7522de1da814e428dea719fc4fe75d0b7db6f61bed6b508819270142e013b40249e3a00393f4ae456437535c9525b72e777d5d78aeaad759babd73a7083c92d19129673c21f95b1c7bfe86bba14e952ad374f59744658bc462aa6122a6bddfb4fd0c1b7d56e6d1469a1cadb4f346e548ee1c11fceb0bc6acafaec9c748901cf5ef5bba84514daca35bef3045703736dc00dbc703e95cf78c4ff00c4fe6f50883f4ae1c4c29ac5fb9d99d8aa55a980e6a9dd7dda9cff0000f19aedfc230ac5626e227dd2bb6e60474c1200fe7f9d70ddbafe55a7a53df097fd0e465651d73d335a45a4eece3a576ec96a7b0683aa2de49716e8ca9285180c4658e7918fc0544ef71a8388cc692ab215de147ca06300f271edf5ae53c290eb50ebf1188a10e7f7a58f0c3a9fc6bb4d5b489ecb50fed4b76023990a3aaaf20e09e9d08ea6894eec2ac5a6573653468d71702458170928dc0374181cf51902a81bfb6bc9640caac525f93cac0743ce463a11dbf1f7add9b37d1ecb8b879dde3cc2dc6148eb91f87e35caae9a22d523993e5762cb201c64f5cd28ee4c12b1d55bc90476b3dbdbc08ac012a5c02c1b8c8f6fd6ac40cf312d2039725cae72013e9f956559c04053236e6049c9eb5bd65079aeaa00eb44910cb906876b70be6c90a961ce4e7be7ff00af5c85ee9f0d97c44b18914b2b479e4ffbc3fa576e2e9adb508ed8b8da7231b7d8f7f5e2b89d46e3cff897645738f2f038ff007ea15ee55ec8e9a7722451ce03678e3b1ae3b5fd62d6d2e635ba9554e4140dc91efd38aebee812fc1c6186067eb5ca6b5a65adc23acf12132719ef9ec41ade57b684c352b42d08b61e4851196dc0a63073dea282486e2ee5884a1a58c7cca0f22a8786a361a5f92589f2e62a0fd1ab56df4b86df5bf3e34daf2a9ce3bf193fca85d0bee70370a6def25557070c79008fe7cd363cb9cf7ab7a843fe9d73fdef31b1f99a850048fcc62000286dec3be854be72bb22cf41938ef5d0784f3fd9f7f81c043f8f07fc2b979a532bb48d919e80f6ae9bc264ae9da93678540707e86b8b17fc2676e5dfef0be7f91d4a695790c91ddcf399dcc3b0aaf1b1546783e81413f414cd4aceeb4996d74b79d9ad0bb4f12120953b4820e3d8f6a81bc44edf694841645057e6c8c6e42a0fea6b3e19fed1a8c197324aa1f273918d8715eae262bd84a1cb68a4acfcfa9c181ad5de294e72d5ee6ebe833a690d76d3b5c4a228b600bf37a6d1f98fcab12d2f2e74fb3b8885cb24171b92654380c0f009");
            QByteArray inData7("f5c7f9eb5d5e97adc579a7ba20027b58d18891805619233c64f419c7d2b8bd4aeada79244b02cf165557e8b8c9fc707f3ada5c9283a728fba95d7a9cf87c46215673bbe66f5f43b348ccbe189630465e191473f5ae3ef6c27967b88ede248ad65607cb791723e873e98aebce57c29395383e4c9df07bd72b1e9b16a4d7571147b445c46883827af535e1e0e9d59d79aa6edb9f45899d1a7094ab6aae8b5f635511f90857cb8b0e5a4520b6e53c63a0e2adea5aa5f5debb2eb11d947e64d1ec68fce403a0e41cfb55289ed0980db42212b081718fe26f3064fe440abd258e9fab5feaf3c5f25a40498045c0c9cedebf414612155d6f75d9a37c7ca8ac3b7555d3d3f1456b36b8feca6b196d5f7cd751dc4970eea3054927807be4d721e2a4f33c433827f853f90aebed67d28e81147b1175417d1b0902f262ce08cfd706b93f13ff00c8c7719f441fa0aca0a4abbe6dc8cc397eacb976bafc8c1fb2f7de7f2ad2d287913aa3cc522761bcede955c2e3b0f6abda65b2de6a16d6c480259563cfa64e2bb6e7870938bba3d77c37a34312473452b00327ee75c8fad741776724c91af9ec02127183cfebef5a9696f6f14288b1a05550063b62ab6a1731c1136dc74f4a95b8a6db7a9ce5fd9c0364919f2e443c10319fad72d2c5e45d34c25c00ecedd7bfe35ada95fbbb10bc8ae7ef9dbecb2330ed5b25a1708687436ae420c92491e95bda5cab6a1a698e00e99ae417548e250782474aa775ae4d2e42be07d68e5b8bd9dcea6ff51173a90923958beec05fae7fc6aac3a4adf6bb06a624910c31ec0a00209c1e7afbd60e9f334b207e7775c824715d8e9ea4380ab943f3039c7e749ab1338d89af21336d3c8c1cfcbffebac6d534f37063c970227de7a73d47afbd744e76b82141046739e9c545750e588c7e354e4cc9687090589d337a2bb9dd219390bd49cfad59b430a6a2d752310c79c10be98a9f5592352240ebb412091d320e0feb59a5f29bb8db819a96d97744b3685a3cb33ccf73365ce70aea71fa5645de81612c8c2392e9630700175e7ebc569ab331ed9ed4d2ec5d938dc0138c50db0473d368169141230f389552465fff00ad567c291836ba9471a804a2a80c7a9c355ab97636edc8c32e3a7ad54f0bbecb6d4cb67ee820fe06b8b16dba4fe47a1962ff00695f3fc8b3a8dadc3b97b7b5688bc7b260f3236e6eec391839cfad58b0b58e0b6b48e3d3e44b88cbf9b70d32ed61b480368e94ebcfb05ccf12dbc30b0689211c630e11771ed925b3cfb5208a082d12d65b768f528649048597198cc6703f0c7eb5bd7a55a3858b93ba3af0f568cf1734959afc435082e52efced3a1312b5b2c1280e9b588500b00718c919f5c93562ce3b5b7d1a6b2fec8792f1c8f2eebce50231c646ddd83dff003a97fb2f42bf29221611c76f12cae415dd3b6777247638151469a45be877b697b632a6a4afbad2664203267907b74cd556a5885868ca4f4230f5f0af1538535692b7ccd2bb7dbe0f9d875d847eb59936ab6c9651c480a5e431c7b71c1c9e1bebf2e2b5190dc785a51100edb4f039e8791fa1ae36f56d63be74b7943461be439ea3d4fa1aacbe71e6a906edadfee39730c33ab2e75d3f526b697ceb9ba92404a94dcd8eff003ae7f1aea05c59dc0fecfb3823f9ced2c9c02db5b69247f758a9e7bd65dbd8589b683ec1335cdcb44de7a85c046caed03d73834babe9ff006770f6765782278d0b031938931cf4edd6b6a58ca556ace0dd94ba938ccbe4a9426a5ac7a177c5f369326a9671e9ab0e629903344a02801b041fc6bcf7c5dbbfe125b9f5017ff4115db5bd827fc23d2c725acffda2f750b26e81bee06cb7cd8c7bfe15c778aad6e4f88ee8f91260edc1da79f9457256af1ab88bae8ac6b2c3fb0c27b3bdf54ff03084d20ee0e3d6a7b7bd961b9f3231865208e718228fb34e07fa8907bed3512c53ef3985bd31b0d5732ee70729edfe0df1e45a8958af556370b824bf5aedae67d2ae17e69d32471f30af986237918fdddbcc33dc29a9d2ff005618c35cfe46a6ebb97a2d91f4235968b825a64ce7d456378923d13fb2268ede58fcc652060d78a3dfeac40dcd7183ec69f1cb7ed9dde7313db06ad35d595196a6d3de90ed9c607bd305fa31c71ff7d5518c3bed0c0a827049e315b11490aa8e45742947b9d1a162c3594b7650e0328c9eb83efce3a715d45a78ced414516aa03e143ef3d71dce2b998e58d4643aede78cf5f51f8d6af89af209bc390416f2abca2652638cf4014f5e7e959ca51ee6352db58e99fc44d1db798968b2320dd81275fa7158537c4153902c0ee19182fdeb122b99ed9dace570e22e04abc875edcfad53be852e98c8b8129ea73c37d6aa508c9734590e0ad748a5a86b521d124b3318cc933307ce3683827f97eb4eff008493769aeab1a6ef2f04eee41c7a552bab1b8960902c4c768dd8033d2b2becb70031fb3cd81c1f90d73f32ee4c525ba3a5b2f11b2dbc4a61466550a79e73501d7ee175233bc6a54294d8a319071fd40ac7b7495461a0931d73b4d1286127dc72739c60d34fccb69722d3525fed3bd52e44ee327241e7f2cf4addf0c39361ab37f17959e3b706b9c6de7ac4f8f4d86ba4f0846f2c3a8aac6c09403f9d618992f66ce9cbd7fb42f9fe4769e1bd34ddc88d118652f6d1c40a8dde4b92a431f4fbadcfd4552f13dcdbde78b64fb23090468e8ceb8da58237f2ce3f0acfd5ee574595974f69e35bab54f354232fef7690cbc8e7924e7a7352e9d656b169161e5cc64bd91e412c4148d88170a4f1ebfcc576622bc5");
            QByteArray inData8("52734efcc969dac6582c1bfad3e77a476f3b92da6bd6b2c7f679918448a635555cec26364c1ffbebad5df14eb3a5ea7a5430d9c824baf30718208c0e49faff009e95ce6ad359dbccb25a950b2db44651b0e5650bf303f89356b41b4d262f0bdec973748351f93ecf129e796cb13ed8cd6b3c4c1537596ae4ad6e9a19d2cb97d61c5bd23adfd7fe1c92c3c48749d28a35a895566970de663abb76c7bfad688f143148e5f22df6c98da4ca793ff7cd63f87747fedad54c770e22b1b669669a42a48c0663d075ff00f5d477fa2cfa35f9b3731be9d7322f953be4ac7bb04138e47073d3fad79ae9d0751a92d59db4abd28bb4d696dfcce85bc4ed0c914725943b9cfcabe71ffe269efe27b88e10e6c606cb10556eb241f71b7bd558bc23afa5fdbab410ddc8eb20c46cbba355c6093c2f3bb8ad8b8f0ddc6a5e1fd3ec6c1d24bdb256372802ab618297c313b5be70dc9fef557d4e84939455d79337a988c2c6496d77b14a0f13cb3433cc2c573091bbf7b9001ce4f4edc7e75662d7c481fce82d200aa5819a720311ced1f27535c88f32094ba7ee658db688db3f28e7e520f273dfd49cfa5763a2e871595d79bab335a10aa21b6962dc5e360de62e3f1519eb8ebd4d73d1c3d29c9ae536aaa8e1e9f355ebaad7f32baf89dd64117d920121190a67e48f6f96a33e2678e758cd8c024704a8339e70327f86926f01eb0750b183ca82256591e1b99e5e30bc843b7f8b6fafbfbe1b6be0ed413c452b5d598bdb58678126ba8493195246f519ea00ce71d39cd6ff0054c3ed6fc41d6c25acbf37fd5c7cbe2b28485b58a45c02196538e99eea0fe95563f1ba3dc3402c57cc5ede7704ff00df35a7e32d2a5bcb992f6da48e671248b3cb6e9f2c50e47965b03b0dc09f6193c0ac6bbf05ff00c496d25b28a433331f2254058cede831d7dbe9f5ac2ad0c3d3928ca2eece2ab8dc3ae4e457bee6a5bf89e59a376fb0c60860aaa663cfb83b31c719fa8a44f134d296d9696ec01dad8b82707fef8ad6b0f0f96f0b436376248b588cb27d8811cca640430248fe0f97d307af158b67e0dd7efef6fe2b4b08a09a17114e669429dc4646003820fa8f5add60a82d5afc4eda15f0324dbe8c47f15cfe5c8d15bda90870ca242d83f90a822f165d99019ade0083962a48217b9ef5a3e0db36b51234f09d34ec78e296556d86412206dad8e7e50e38ec4d64788740bbd19cb1b7922d3e79dcc331195650e7cb5cfd003cfa0f7a8ab85a30836a25539e1aad5f651b5ddba97aefc4b771a2cd6f042f6f28cc5297393ea081d083c62abaf89352f21a5682d701739cb02064f6e7d0f7aaba2e997fa935c5adadb4b3db2812cc63eb0939008f5cfa0e7827d6bb2f12e8b35fd9bcfa208ef1ad0b2c51a2ecf2e0daa15307058e4311f5ed9a9c3e169ce1cce24d5961f0f5951abbfa9cc1f125f8b7fb4992c4458ceed8c7ff0066ab106bf78f0cb2caf6602c7e622f96e0bf2001d4e3a8e4f1f9d2cbe08d5e0d16dafa29ad6f44d247b2d210a490e33cf0307a0fc73db9ea34ef0cad969dab596ad7115b4d79f205187f323087680c3eee2424e7fd9adfea941e9157f426ae27071a7cdb6ddfe6ce1aebc637f02822dad9893c285624e07d6962f15dfcc8afe559b29e876b0c8fceb7f4ff00006a9a7eba0dfa23ccd162dd94feef6e3e639f5f6aaba6f82ae2dbc410df3c2d1e8a262f2bb6d1e5b293c05272cbb801d31dab9a34e83aae9f27cce5faee1fdb4972fbb6d0a93ebd710c52c81ec9e053b77a44cc0f38ce320d569f5fbb49e1526d5de620a8109e9ebf7ab7f5cd06fe792e751d2ed05ddbcb0a79f32ec5533018918a672074278ee4d4175e00d634e9ad2682fec6f81502555db1f929b724ee3c633c75e735d3f56a31d2495cec8d7c1b845aebeba6a537d52f8a644964b23e71118df7151dfae31ce2a482f25553e67d9639e66c27ca70ec0723aff5adcd57453268ba2d85b2c6351824324b19da18b49d416076f4c77ecb5c3ead6f771ea9243770c96f25b801236eabdf767241c9c608c8fd6b0c4d08423f0d8bc3bc362af1a3f15df5e86b3ea1a8293be3b1c0ebbb753eeb5596cae521924b29b3808f131dadc7638ad3f0b5bcf7f7165abdd5b6cb3b798f9d2951e5960a7691ea376381d3f9d6d6bc3d35deab1dbc0913c774d1319db2b0c723282df30e80b67038eb81d2b5a785a538a6e3626757091a8e0b74bbf5b94db5e98ca206b6b7327de09e71e9f4db54d3c4e6691e3974e849e76969090c01c123e5e9c55ad5bc33a8e8f7b1a31b59def0605c5b312131c30391db8fd2ae7887c22f069b6be4797f6a8a30c9b4f4ff0065bd0907f5fad615561a9c925aaf5393118bc34671e44daebe9fe671ba7ea33e93771dec1295093c81c0ee3793f8ff009f5ab8350bcd53523adca639a68e6dd1c538ca100f20ff009ed4cb3d0e4d434c958dc411a99a42048d8230e6b460d1de0b45885d5898e34c1632919fd2ba1ce82a8dcb7150a1867539aa3d2df892c3afdedf4ff6b16b631c48773c432cb3381c16f98e31cf423a9fc76ef351d3f4a12a5adb34f25e0313493bbb8f28a23654641c65978ebef58567a04d696a56192cc460925bcd3ffc4d68dd585e5dbdb79b75600c16c90460487945ce3b7bfe947d66825cb1765e4744a9e1a6e9b93d56efb1cfacf269f7c972cf8b98dd6447c6edc7f848e391c0c7e5ed5d96957b67e2582e1ee6d8595dc7711ee6b3c82c6662ac483b8755e7dff5c39347b82a23377640ab651cc9f3203f7b6fa673fd6aee9f6d73a534ed6d7d671492db35b8");
            QByteArray inData9("c487e5c90430f75c71f5ac28d7853936e418a74b110e595b4fc495bc58969a886bfd3c35840d2213664f98cea0c692124f276f7e3a93d6ab58ebd79a9dcdb5bb016ba635dc2f046f2798d1364067dd9ef93c1c8f6154e4d1525b73686facbee81b7ccfd69a9a5f9700b75d4b4f5455db8ce7fa8adbeb386bdfa9ac69e113f8b4b7e26cea3ab2e80351b7b492e5a496592033abf96d6c236539da33b812dc9c8c85e82ab7daacb4ed26d27b760cf1c7e5a16f9925520fca5411f7b2d9e41ef91ce6bdc5bcd7932cf75aed84b22c4b11661ced5e003f373dce7d4d545d16dd59047afd984472eb1b005549eb8f9ab9ebd78d592973fae87973c2c2318aa32b775d8eada68a2d32cfc4d95fb66ef3934e2dfbb1b6411e738cf04a9db9aa63c5c91c45e68a482ec4ab1c50588d91f9001200273cef27ae719e075159e6366d356c8ebfa7790929900f2c64671919dff77201c7a8cd529b4886e268a493c4161989b78010609f7f9fdab7789c3cd72d4f797cce9a3470f4a2da7ef5cebacf52b6f1134d2dee9ef692c1662591ec653be40aeaa1421185033c919e958be31d61b5388c115825bc168c6c6591676919d2293e4c838014b2839e4e71cfac762d369b77f6ab3f1358453aa3c79083a30c107e7fa1fa8155e1b38215dafaee9f246721d597ef83d41f9fbd6757150941c62ff035a74f0d4f10ea47656b79f9322f0f6a577a5c525c46b03593c8199278b7891d73865e841527ae7f3addd4af934b2eba737997123bc703dc80ea23508c9328c6092c4609cf7c679acd92ded646c45ae58ac6a36c68146157b01f354306996f1b92fafdb3eec0e40f940e8a3e6e00f4f734a862e14e1cae4cd2bc70b5ebc6b54dfaf97a7ea5c5f123daad9ae8762da7dc4213ce9a495641c0f9805ebc9ef9fcb9ae96268fc4b682e269a0d33fd256d316b0f05986fddc9e09c9e7fc2b8a8b47b38ae669a3d6ecf7bf5dca0fe5f355d8d2586cef2da2f1259c505e2aa4e88a06f00f4cefc8e091c750706b58e368c35a7a7c8cb11470b568f2ef2bf5ec6adbf8b57c4174e24b710db29cbd9acae3ed18185766e0b01818181d7906a4d335c8759d5eeb4ebd863b8896391dae981f35517e768d0823f8b047a73ed5cdc9a6a068648b5eb05922e0322e38c74fbf52e956dfd917d05d5aebd66b34121951b60e49c820fcfd08245727b587b47272766712c3daa4bdfbc6da7a9afa9ebb79a65e5d699a67931436e14dbc8f16651e622bb866393939c13e80563b7892e6f2f15edb4eb0b58c37fa4c64f9c9374215973c004646318a7c968269659a6d7ace492572f239419763c93f7aabc3a45a43e6326b56a37b6e6e075ffbeaba562b0eb7dfd19ea528e0e31827f3b1d53dc42b610ebd2db896e668e39cdb927ece033f95c2f52703382702b8ad72eee6e2f8b5c857250240b126d5d99c2a28f62718f53f9eeb4b27f63dbe96fae599b3b799a48c0519c9cf5f9ba0cb63ebed55d6d6d427ef753b491d0e626603e43c827ef7bd6388c542a2569333c23a386e69c3e26dff00c3fa93e8b2798b63a65f49fea2de461320c32aaab3b2819c30ce719156754d79ec6ece9d65079d6b6688259277c49711c83cc78c9fbabf7b19038e39159f0db25adfdbddc5addb24d6f2091480393c820fcdd3048a41a70904f23ead04ad348d23b9404b31e49386ade38ca4a0a0de84fb1c23c43a8f6b6fd7fabea4779e2a9ee521974fd3d2cb4fb567262f3bcc77c900927f015bba978821fec837491a2ab81248ca7266931804ff0087d6b9eb3d320b487c91abd96dc9eabc9cf5cfcf4d5d1edde18ed9f5eb4fb3c6c5d3e51f2e7fe05db9ae4afec2725c9a2eba7438f1587a72945d396ff11fffd9");
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,0,totalSeg,inData1);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,1,totalSeg,inData2);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,2,totalSeg,inData3);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,3,totalSeg,inData4);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,4,totalSeg,inData5);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,5,totalSeg,inData6);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,6,totalSeg,inData7);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,7,totalSeg,inData8);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,8,totalSeg,inData9);

            //Error Case: Skip limit reached
            /*
            EPndrError error = GetErrorIdForResponse(PNDR_NOTICE_SKIP_LIMIT_REACHED,false);
            emit ErrorReceived(error);
            */

            break;
        }

        //{ modified by yongkyun.lee 2014-08-25 for : Branding Image
        case  PNDR_UPDATE_BRANDING_IMAGE :
        {
            break;
        }      
        case  PNDR_RETURN_BRANDING_IMAGE_SEGMENT :
        {
            break;
        }    
        PNDR_GET_BRANDING_IMAGE
        {
            break;
        }    
        //} modified by yongkyun.lee 2014-08-25 
       
        case PNDR_GET_TRACK_INFO:
        {
            qDebug()<< "emit PNDR_RETURN_TRACK_INFO";
            TSPartTrackInfo inPartTrackInfoObj;
            inPartTrackInfoObj.bAllowBookmark = true;
            inPartTrackInfoObj.bAllowExplain = true;
            inPartTrackInfoObj.bAllowRating =  true;
            inPartTrackInfoObj.bAllowSkip  = true;
            inPartTrackInfoObj.nAlbumArtLength = 200;
            inPartTrackInfoObj.nDuration = 5;
            inPartTrackInfoObj.nElapsed = 1;
            inPartTrackInfoObj.nRating = 0;
            inPartTrackInfoObj.nTrackToken = 20;
            emit ReplyReceived(EVENT_PART_TRACK_INFO,inPartTrackInfoObj);
            break;
        }
        case PNDR_GET_TRACK_TITLE:
        {
         qDebug()<< "emit PNDR_RETURN_TRACK_TITLE";

            QString title("You say it best");
            emit ReplyReceived(EVENT_TITLE,title);
            break;
        }
        case PNDR_GET_TRACK_ALBUM:
        {
            qDebug()<< "emit PNDR_RETURN_TRACK_ALBUM";

            QString album("Notting Hill");
            emit ReplyReceived(EVENT_ALBUM,album);
            break;
        }
        case PNDR_GET_TRACK_ARTIST:
        {
            qDebug()<< "emit PNDR_RETURN_TRACK_ARTIST";

            QString artist("Ronan Keating");
            emit ReplyReceived(EVENT_ARTIST,artist);
            break;
        }
        case PNDR_GET_TRACK_ALBUM_ART:
        {
            qDebug()<< "emit PNDR_RETURN_TRACK_ALBUM_ART_SEGMENT";
            quint32 trackToken = 20;
            quint8 totalSeg = 6;
            QByteArray inData1("ffd8ffe000104a46494600010100000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc000110800e000e003012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00961f0c687310cba5a750af83d33d31fe7afd6992e8ba140ac1b4d801fcc11f8d6bda4d1ab2aedc33654e4f07d33f5e9fafa567f93f6ebe6decca832493fe7f3af985394a09f31f634f0f4fda3e68e88cd6d3bc3e1432e9d6e48c86f973f4a44d2f4573f2e996c7db656c816d2fee16d63e4fc9d7209e9f5ae6754f10dbe9eed0c08259d588383f2afe3551f6951da9b6cb97d5a8c5ba91b17db48d2b9c6996dff7c0a8ce97a503c6976dff007c0ae713c597c1b2d1c2cb9e983fcf35bf69ad58ddc08ef32c4edc14661906b49d1c4415d9386c5e0ab3e58a57f3438e99a68c7fc4b6dbdbf76290697a7107fe25f6d8f68c56905428181dc31907d69a17031c573fb59f73d054a95b48a30358d2b4f6b1c47696d0b06077ec033c74ae3a4b48e263bede3c7d2bb7f12ae3483eceb5c4ef25707247bd7ad8272941bb9f2f9cc211ae925d09ecf4e86e4384823c8f51d686b28626cb59c4474e066ad5a37d9a07923cef600669ad3318d616396cfdec56bcd2e6f23cd504a3764567a0dcea8f27d874b3284fbca8b922a9cf67f6695926b2546538219306bd0bc1334ba5db5fde43969942aaeee9cd51f141bcbbd216eae230419ffd6051c9209a4b10f9f94c5ef6388db1065c5b478c8ed5b16f140d8cd9c27ea2a8ae72a302b6206008c815b49b32aa917ed60b418ff41b73ff0000adbb68ec40e74eb53ff6c8564412003b55f82590382b1330f6158ca5cbd4e3742751fbaae684171a3ee75974fb142adfc508e95a70b68aea00b2d39bfed9ad73eb2ea2d212235504e795157adacf50b9623cb0dfeec5c7e7593af15f68e886598a9eaa1f7e86e25be947eee99607fed90a9d6cb4bc7fc822c4ff00db21c567c1e1cd40b12c0a0f738fe55a569e1c69e3ddf6bde80e0ec6ddfd697d664f64ce986532dea4d2f4d48268f478ce3fb3ec50839c2c6066abbdc68ca73fd9568e4f7f207f5ade8fc316d18390cfc7738fe5504da5fd9f1b61411938385e7159ba955ea76432ec2f5937f81996a749b9fbba4d983d76f942ad0b7b0eda3d91ff00b622b85bcb99acb578c46ec80a153cfa1a9d353b8ddccedff7d56b0e771bdcf23194151aee11d8ebe4fec343ce9d648c38c2a6707df8c562f8bacb4f6f0b5ecf0e996f1b04056455c15e454f02c034cba95a25798f961096e589ebf962b9df145c37f66dcc693c9e5ed194de76f6ed4e8ce52959b3d0c665f4f0d4e33837ab4bf037a4c8761c647a511b157562031cff00177a92511ac8768e31dce69995c64ae6be7632773eea3ac7533b5fd66db49b5df6ab21bb9384071b53dffc2bcdc9dd939cf35d1eb534379ac4b1331c03b17fd9c71fcf3f9d60491ac6cdb492a1b0323ad7d1e0a2a104bab3e473194aa557ae8b42303dea78902a9666ebd063ad4f6ba64f75bbca4242e3713d05579236899a238383d45763d7438145c7de674fe17d41999eca47dc02ee8f3dbd4574a4020e7a579f68f2b43ac5a301925c2fe6707f9d7a01da0e3d6bc5c7d350a975d4facc9abcaad06a5d0c7f1081fd947246378ae2244db2951d2bd0754b37beb330c6006241cb703159507836796456694b631c2271f99adb095e14e0d3671e6d4275aaa71edfe660382b669b7b9150312d7008c7515d4dddb6936173e4ddb1924072c13e60bf5c7f2a4b2d43457ba788c2b6831f2c850723fa568abbde31670fd5528da73489b449c47a7dedb4876acca0838fe21d2a4d52f92e3c331692872e27120383d318c7eb5d9d87842de68d6563bd5972a77673f975ad5b6d06dedf88d115871b96303f5ac255797de96866b0f453bddb3c92c7c2b79744154908f50840fceb760f08ca9b4cf24712e7ac920506bd167848956d2ddb0fb77c92119d8bd3f33dbf3a8a76b2d26ce6bc550cea305db9776f4cf5a89e25b57b9d30853d1463");
            QByteArray inData2("76ce46cf4ab082558cce24958ed58e30093f89e00ae95b47b4b681a4939555dcf924e00e4fa5528b4f8e5d0ef351d4029b99d0c8198729c7cb8fd3f4ad2b2bb45f0dc535fb0f2da3dae5b9dc3240faf158549b6b4ee754d72af73a3b69fa15f46bab2bf494db41b0c6403b906707a1ef505c6a3797d77243a7cde5c36ecaad200097627181edfe1566f56d344d0e67b24d9e701b4927249e9d7d0669ba2daada5bdbabf022437531f4660428fc1413f953a72d5cba03e5e5757e4aff0088fd6eee5babd8b47b690af9a774cc0fdd5f4fcb9fcab4743b68acf4ecc7848e672e809ea0fddfcc62b9ed1d64be9aeef1f89af2530a7aaaf57fc9702b46e89bcf16da58a710d980e40e80e01ffe24539ddc395b26a53b7ee62eca2aefe5fd58d6fb52da6b11c734c1239d36a275cb83fe06aedec3ba165ae65e44bdf1b461987976c00fab7ffac8fcabab765953e5231c83ed83822bae85dd2499c7529fb3947bb576788f8c51ecf53690a9f96623f0619ac1fed6c1e54d769f11adf6492b6cfbc8af91eb9c7f4af35c13d2baf0e94a2d338b1f4d3a8a5dd1e811eada7792a1e48189519fdfe3b7423d8fd2b9bd7b544b87b98a2c321200753907815dae95f0fb498f4eb6fed36b892ee650d2f9526d1082b90071d477cd709e27d09fc3dac5c69ed2191570d1b8fe2423209ff3d69d1a30849b4ee6d8cc4d4ad4a319c2cbd4f45914960719c8ec2a22a7a018fad4adbb233d2917ab0f7fe82be4e336a47d846fcb63cc6fcbc7aa5cb27de133631f5fff00555bd1b4d8eeae545d5cc500898e7cd700e7a0183e983fa55dd634b7b4d563b98864cb3ee5560319ce6b1352b4bc4bc779a33963b8e06073f4afa8a735520945db43e4eb53953a92728df53b9925b0b2d35a0b69a12abdf78e4fa935c0dc3069ddb20e5b3c55eb8d364b5d020b994b869643853d00ac9cf7ad70d04af2bdcc31755bb45c6c5dd38e354b43cf12aff3af456078e78cd79f68ca64d5ed50776e6bd158715c19935ce8f67234fd94cb1650de5c01e4ac7e5f4c851906a6f133cba07875e74958cf2b08d5b3f749ce4fe42b47c360f932a8e46ffcfbff005a9fc63a3beb1e199a1857334644b181dc8edf9669508a693b1cf8894949c4f120cd3ca9192cdb9ba03cb126ba05f055e2a2b4ee2224640c67af6ab5a17856e62d5d0de155311595541c8619fe87ad74f7f1ea37125dacd348b1b478883328e7be30011d3d6b4ad5a4bdda6c587c3a96b515ce8fc177266d022b7910a4b69885c6edd9c01820fa62b42f2fbec937950c466b8724a46a71c7724f61553c250471f876165c6f6e5dbfbc7a67f203f2a7d8bfda351bf9fab2cde48f6551d07e249ac715cae9a7257b18a82529764653ea5aa5beb3342da7a19ee917cb025e3e5cf7fcea9ea0934f7967a40cccd1fef67da71b989c9fe7fad6b5fcca75817cdff1ef611b6e6c7de73c6d1fa560e8cb7d7bac4d3195a0f390c92300371527f87d3ffad5845e9768f4e8db97daa49597e3ff000c5eb9b896fb548f4dd455ace024148d0e449e80b76e47f93536b605c5f69ba4c4a1632c1d9474c741fa03f9d56f110dfac699046499971df9fbc319fc8d3eeae23b5f1909ae49da220222149c9208e07d73497bd668718a4a325fcaddbcfb89e299775d585a2a338ddbcc63f8b2703f91fceb43510f69e1dbc924602e26197c7ab61703d80e3f0aa97d0dec5acd96a2d6f24caab8748f929c9c0fc8fe9562e42ead0b432c6c8d28c47ca8118c839e48c9240ce33d07bd54612b25d0c6538a8d35d16ff78ff0ddb7d8b4d4bbba7cb14ca28fe052738f727fc0554d16e55353d66f243ba50db1133c9258e00fc80abb676cf6f6890dedf8610e046b0ae3a7424b77f4ff001155aeaff40d0af86a5332c6ecb8569df209ee700727d7eb57182fb4f533752f2a97d6fd7e7732f459bcebcb856dcd7b24a8f1e07f10249cfa0f5aef962fb35ba4632428c65ba9fafbd72ba6f8974bd52e2e25d31a1f387fac290ec3cfd466ae3dd492fde766fa9cd57d62349720558bc44fda45597de737e340b346c0619bc99148efc74fe75e4c0e3dbdebd77c4217ecc8db4125f69c71c106bc8e688c533a7528c57f5aeac054e7b9c998d3b4627aae95e3dd127d3a27d525960bd8a3556091961215180463d7deb80f14ebc7c41ac5c5e152a8408e356ebb578e7dfbfe3592a85988cf6cd23463ca7248c8c601ce4fd3ff00af5db18c53ba3cf9d49ca293d8f59c3673c74a6ece0f20f39a14b00bdf8a5dc48c7435f14934cfba8ec5792c45e4d6f2b118b72c4ae3ef065c54b2696b3be18a903d539fe75148f2244e62621860f5eb839c55a5b9f3211243b5b7ae579c039ad5caaab34f430a94d7337dce63c60d21d3a28bece004c166073b46715c29ebc576be29b99d617492e6205801e5a272466b8a279afa8cbeea8a4cf97ccff8c6f785a069353136d6c468486c719e9fd4d76c4fd2b9cf094dfe8124581c36e073f87f4ae841c915e6e3a4e555dfa1f45945350c32b753a1f0ab17966527e55c11f539ff000aebd506029ae13c3723c5a9150c30c0fcbef907f966bb992e61861791980d8a5880466b6c26b148f2f1fee55936713adafd8fc4314519dac54c8873f285c80cb8ea39c1cd4b3817503872990bc1719fcaa0d4254d4ee2d7568d46554a380727692723df07fad53d7580b09562f999d70306a71749d2a897465e07131af4df74769e1b8fecfa1dbab3ab315cf1efc8fd2a8df8bdd2aeee27b480cb0cec241b137147e872323ae339ae6341bc9db4bb52eecaea");
            QByteArray inData3("9e50607070a4807f202ba3171218551e567007f136726ba316a1429c79b5b9e7e16b3c456a914b62b18af35c6885fb0b6b38fe665236b487fddc92054971652a491cf677eab708be59262daa57b0c7b572fe2bd5355b1bfd3e3b7bb923b4ba7f299618d4c9bbb60b71ce7da9fe14d5279b49bc1a8dc3bcd6b3bac8d27de503d48e0f7ae26e5ecb9e29599dd1a8bda726d6e9d0d8b6b589ee269a5bcfb45e91869118031fd3d38fa5676a3afd869fa8ad83c77d75780160a8a4b63193862476f435c8e931ea56babaeb7a759bc9677533c72c11f5db9c8382060631cfaf719ae93c41a39d5352d3aebcf16e9123acac25d8e011c018fc7fc9a76e49a527a1329cea2728af7969f2f23420beb6bdd00ea7a4db46652acc9f69049041e41ebe95cfe91e31d4aef52d30dc4d179176ce8f188191548e8031ea4f1d2afe93b748d21b4e92ed6555056368222a541cf3cf53cd655b41a2e94d14889248616dd11b89f843dc85e9fa528ca1ef27af61fb1a8f95ad3b8ef149813c596eb7970ef673c24c91c9336d8c8e3e503a1c0e3deb5355b61ae7821534f864dc113c849301c6d207e78159d2f8b6d56eda5cc3bf6edde89b9be99f4aa7278c8b676094e7be401551a7564a3cb1d50b969479b9e6accd9d16c350d375ab8bcbf68a45b9890bceee159703ee6d1c6738e7a6056ecbacd941f7a604e3a0af379f5d92e4e4e17dc9cd46b751483325d3ae7fbbc55cf073a8f9a6671c651a4b9617675babeb515ec0b1c642aee0db9ce3a1ae0ef0a35f4e430605b3953914ebe16ac80c2f23499e4b1ed5506d038aedc3e1d525a1c989c5fb656b589a20371fa5238cdbb9f978c75233f877fca988e1493d6a4668dace4dc9fbcdc36b07fcc63f2e6ba92d6e72392b1ea000118edc0a6838cfd68e762e4761c54524d1c113492baa20fe263815f1f185dd8fbd8b4a3a9cb78af5870c74f85b6ffcf520f5cf41fd6b6742999bc3d69718dc5014703d01207e98ae2f5d92de6d5e596d89647c127dfbe2b57c23aabdbde1b07f9a19b2403fc2d8af72be17fd91722d56a7cdd3c5b78d7ccf47a23475ed634e64645883c8463a723f3ae218ee7270064f41dabb9f1442a2d0f970ab33600c0e95c549049105674dbbc6467d2ba32fe4f65ee9cd9a29fb4b312295e17578e46471d0a9c115dae81ac0d42131cc47da23033fed0f5ae1cf45a9ecaea4b1bc8e78faa9e47a8ee2b6c5508d587999e5f8d961eaabbf77a9e8f1ea09a7df412b12177723ae7208feb5d02ebf6d246ca07ca47e7ec457177d24777a7473a32e180642477fff005d416f206064b9bf8a051c01c579d8571a7ef4b747a599d29d695a9eccdcd3e46b57d8f266399cb81d3631e48fa53f52bfb085fec92ce8ae7d1b38fafa5614dabe9b6f18093bccc0ff0008feb58efacdaa33341600b9e77b9e6bbead6fac46ca2ec79586c2cb0b3e694d27f79e836d751a01186448d142819c918aba753810705881e82bcc7fe121bb3c281181e833fcea196fae2ec106ee56c755048ae1af86ab5a49cdd91db86a986a29f2ddb676dad4da45fbc5fda48acb112543ca547d7008cd538fc4da669f1986cfcb8933f7608b009ae318451c6e58e58f41ef5079bb4f0aa31eb5a53c045c6cdb7622a661cb2bc60ae7573f8ae4964631c52be7bb3e3f4154a6d6352998ed58e30781c67f9d62c57aea07dd35762ba59871c11d8d6f1c2d38ec8e3a98ec44bad9790c96e6f65cf9972f8f4538fe559f3a6d61ce6ae1639cf1556e0f22baa314b6471fb49c9fbcc83d69e323f2a551cf4a7820706b4b8f948bb7ff005a8271526e1e9fa53d581e94ae1ca41cf06807352b7271d2901c1a6a5707123e7ad3f2044e0a924e3077600f5e3bd389ce714e281ad9dcb0cab018cf273ffeaf5a2e2b1d3ea1e2f558963b287e70a0191ffa0ae66e350babe90bdccad21ed93d2a291486351f63dab9686169525ee23bf118cad555a4f402dc559d367fb3ea56f3f4092296fa679aa98e2955b69ae9714e2e3dce48cda929763d3760bfd44daee1b3ef06cf515ccf8974f91f5af2e14fdd22050ddaadf863535936c521cc8a36ab77c54fe29d422b7b310839b993a7fb23d6bc7a509d1aea08f7ab4a15f0ee6d9c46c26508bc927031dce698c793df1522842ac183ef206cc118ce7bfe151fe75ecefb9f3f72686e6711fd9fcd6f24f3b33c66889419d013d58669902e641566054fb447d73bc7f3aca564dd8d54a525ab34eee08e3f336a80066b139addbdfbd30f73fceb04f5f7ace8ea99ad7b2511c15b19c1c54d0b796aed8e40a40c76800f4a4c131b1f71fd6adeba3328e9a8d58e4b8902a8cb37615d0e99e139ae62f32e728be82b6fc39a4450592caca0cce0124d7491e5536a81e95e7d7c634dc607a784c1464b9ea6a70f71e16863076b3835cf5d594d652648380786af46be9e18246491c64f61cd739addba4f66658f248e4629e1f1336d29f534c560a938b74fa1cd23ee151ca3711ed53451930349fdd6c546c327d2bd2ba3c3e5f788b3b781d4d2af763cd33277139a9b2a62ff00680e29bba1a576445c91838c7d290315231c56adbf876fee6d45c840233d3279354aeece6b560ae3f2a95520dd932dd2a897334300270d9e0d2b211cd428d838ed56c60ae09a1dd30493431232c7191d2a411016770c594302b81dcf27a7d28840df8cf419a56722d265ca804af0473dfa1ed4b99b60e0ad7239d70c1ba102ab15c0ab7feb0be4f3c7f2a8fcbcae7daa612b68cdaa439b62ae48a4e73d295c10719a4eb5d099c96b162cee65b3b849a2");
            QByteArray inData4("2372b0383de8b8b896f2e5a69dcb3bf53508e9d688dc2480b0dc07507bd4f2abf3587cf2b72df41587ca01f4e29a396cf407d29c4fca39ed4dea724f5aa247c1feb56b4b4ab192ff0051548d914a7ce4bb60601acfb61bae10574da259c90dd5c1dca03dbbae73d338ac66d73599ac6fc971d79a73879332c5863c1ddd73d3f9d643693321601e2257ae093fd2bb9d03c356176268ee656605770d99e3e6edea381deb323d0255d45d04c5a3491b00a81c648eb5a53a318ad18a7566d26d1c59528ecbd71c548bcdbb64700ad5ad4220b7ae884613e5eb4db58b7f9a87a118ace725b9a528b7a1d5e9baa456b66ad2c980141000cd59b6d78ea7706d6df7a16525199700e2b93b77b9583f743253e5638ce3d0d745e1d8a41770cd28277311b98632707f2af32ad28a4e4f73d4c3559e915b190ff6eb5b9959955e76e0b3e718f6c56c585ac86c0b4e3e66e718ed5ba91db89d9250a727e5cd33507448f098031dab1759ca2925667a30c328c9bbdce3e2d3a37371668c54a966c7f7b3d2b0384dfb9377ca460f63eb5d6dbdc79770e300ee3d7d05736027f6a6d940dbbcf0dc7e75e8d19377b9e262e108f2f2efb19a0609ad2d234e9350bc48d1588e327dab562f0f86d5e20706d982be3d463fa915d1ea56cf65605b4f814301c856dbff00eba2b62d7c11dd8a860e5f1cb645fb8536960b1600c2e38ae1f547dccc719a8edaef55b9baf2a191d8b0e63c923f5e9546fe7b849e58262010791e9ed58d0a128cecddd9bd5c44654f45a1407deab3918ce3145a5a899f9381ebed5d2da69da61b668a56959dc70557a7bd7654a8a2cf32364b539c4215b3c539a43f647504a8246ec13f37a77c71f4ef57351d363b38cb45319016c0565209aa01655b49432606e5ce49c8ebdba7e74e1696a8729e9643206cca4671915609db1e3a60551dd89491d8d5a3207849ef8c5138d9dcd694bdd688670a5837b74a806475a90e383cd46c0e71fae2b58e9a184acf50f5cfad389d899560770f9863a73d391d78a45e7231de95dbaaa0214e3209effe734c8109c003be3ad251e87da8a604d6bfebd3f1fe55bde15fdf6a3309c19116dddb6923dbb1eb5cf407f7aa7eb5bde1dd4974cd4642d079bf6889a0c6ec63711cfe959cb46d9a455d5ae7a4f86af6c2d2ce69898229dbe458c911703919c649ebfa62b1e4f2eefc504ca2d1949058db80109239233f4fe75952eb96d089a1fb0c650302a031cae3d39f61d6a1b5f195a5b5cc17034c3e646c4e44bd46081d6a69cd3ee29d195d27a2398d4976ea976bd9667007d09a9b4eeadfeed3350bb17da95ddd88f609e67942939dbb989c67f1a5b16e59bda954f84d682b4ec6ae9b39b4bb666c1473d31e95b3aa5ccb7168ab6b28871f36715cec8e3c8c93839c83ef8a5372f3db6d57da4f19ae1953bbe63be35795381a76925bd8e6e67b9135d0270fc9c55afed5176acdd3033cf15896f78107916765e649d1a46fe752ea12c9020f39937018c0344a8a6ee6f4f10e31d18925e2c376b2f5556048ac89a44b9d40cbc22b36ee7d2852d7571b40f971daabb108d86e31ea2bb29412d3a9e5e2a6e6efd0eaf4cbd6935048cba3a0882a32fa67383fad74a976822659307b5705a19c4b34ca7ee007f5adeb89fcf8498f258fa579f88a29d43d5c155fdcea6fe866cfedf2f951a070396c5705e20880f105e8638f9f23deb4ef07d934e1198489f21bcc8e5e41fc715ca3ccf24aef231662792dd4d6f85a3252724ce7c6d48f2f2d89e36dab8c8e9fdeabf69633ddf314c880776931591b969d1cef1ffab9197e86bba506d68793cccd7d5e47b7822b76681f1923cb90b106aa5b4e874f9e360c58e392c303afb5537983b9776dcc7a926a55b9c5bbc4b2001c8ca051ce3dfb528d3b46c0a56dc80fdf39a72b90ac01e2a36ff58685239cfa76ad1ab82761cdd31de9072294f514dedf8d3427b8a39cfd690fe94a318273de819ce281015e145252b1f94629a0628024b75dd2a8ebd7f9569d9c446a16c73ff2d074fad50b319ba41d3aff00235ad6a9bb51b652fb40901fae39c56155d99bd28732b220be598ddcee3ee963cfb66a92af1c575d73a745711bae4ab499db213c03d874ae584325bcb2c52a157524107b1ac68d5528b3ab13869d269cba909031c1e6ad586d128471f2b75a8660b14c769c8c29fcc034b102db40232580ada4af139a3a4b43464895f7c43a23605549a3685dbcb2481c1abf25b9b652c4ef2c01cfbd3ededdaeae9625c7cc47e5dff4ae753b1d4a1cc9b7b999fda93a44628f08a47381d6a9b3c931f998b1f4ab6d66de6491c8a52553c8c55ad3f4f632af07ad6bcd08ae6463184ea348b7a5586c8f737de2335724d0bcfd3ee226e6524cb09c72be83f1e7f4ab91ddd869bb5afa4dbbc80100c923d7d856e5baabcf248adb83723e95c152b4e2f98f4654e9b5ecd1c6f87ad592c2e256043336dc11e9ff00eba6b5c3e97745b1ba12738f4aee3ec91386fdd6173db8ac8bff000cbdd1023951509e73924528d7539372ea0a1c90518ee8e6b55d4f4fbf8b215bcdc71dab99382783c574f7fe0cd4ad959e1d970b9e8870df91ae69a392090a48851d782ac30457a586e451b41dcf2f13527395e6ac373ce31cd00f1ef416c0ec79a54233c815d17398673d7b55881bf73226e20641e1b19ff1a42833da9f18c44e03103209f9b19fc3bd2e6ec3b771c631f659a423e6591141fa86ff000a854601f4adbd46248f414947964cb71f791701b00ffb23d6b1930548f61534e5cd7f535ab4f91a5e420e4753c7");
            QByteArray inData5("ad37b9cf4a7104639e05373c55988a318a38dd4abc03c520ebeb4c00fdc5fa520e7fa538e303e9484e0f4a009ad0e2e63fc47e86b62d6da66d4ad9801b44808c1f7ac4833bc15ec09eb5a3a4c921d56d46f247983bd73558ddb66d09591d2c17226df8c860c411f4fcbf9d55d5ad8cf6c2f140deb85971dc7407fa7e554adae7cabe9549c2bb9ebd8e6b677aaf329ca48a564fa1f5efc7e15c0d3849347d0c1ac4507197438e915b209e72a2ad5969d737e8e96d0b3b2e39e807e269d636c6ef54b58234322b14dca39e3bd7a6882dedadb75bc691c670768000fa715bd6c4ba69248f06305768e4e2f0ede7d9238de78f7670072707d3354f55b5fb299608436f54037e4e7391f966bb68c0738565e24dd91ee33fd6b3e7d39aeb58f28e36170f213d081c803f102b9635db97bc747234ac99cda5d45ac490ee8fc9bf8d7e7ce009477c7bf7addb2d3c09404c166fd38abcbe1eb3ba81582ec746dc197afd2a8ead74348325bdac864be9576838ff0056bebfef1ed49cfda69137a353d9a7ce8e5aff004ebbd5b529a4870c8ac638c818040e38addd0350934d8fec5a9a347b38498afca47a13dab7f42b18e2d22d7727cdb72c7deb49ada36470cb94230411d68a95d497235a0a149a973a7ab2b44c24dec183471aefc8e87fcff5a9d8882cbcc93e638cfd49f4a625ac16762d6f6d0ac6bb86540ee4ff008555d66e1becd15ac2c43c9c0c76ed9fcb35828a6f436e6b6e53b9d45628c261a6b991b0a887009f6f415cd78934cb8b8b1fb7ce115e2c00abfddfa9eb5d1e9da63444dccf8560b8404e4a8ff1aa5a8a0d41a589e5db6f1292dcf26b6a53f673f745521ed20ee79d2c7bc1e338151f45271daa64631caebd339520d35d0a654f43fad7b49ea78fcbeedc62be548ef9ab314c7c89230c70482573c7e1552288b4bb49c03c66ae8b70b1b39624ab0c71c739cf3f95276bea25768d7d62712f87f4f1bb3991c9fdd85e87dab057383eb5a77b73e768b651b0198e5917ab1ecbea7f95660e87e94a92693bf766d889734935d97e42b138c5306738ebeb4f0bde82a31eb5a1cfa863ad37079f4a77ad140831c0fa52738c6314e192071da908e79a60496e0f9ea33d7238ad3d2a109abdb1c74905665bf3709d6b6b4d53fdad6d9ecfd6b9eab36a6b42acc374937aee3fceb6f4e9daeedd6d4c2c5c8c3311f2afbd634a30d36300e4f4fad4da7c3713c8d1a5c794b8cbbe7802b9a51e68dcefa75a54a4add4eabc3da3c1a4ccb3bcf1cb3e08caf400e38e7fcf35b372c5ede65456284fcb81d8d72f6569a144e717f712b13c7ce07f2ae86d65852022de39258fd7249af3ab37cd7bdceea786a7357b585b755dd78e324f9bb31ef8157618b33473139c46727dc7159cb2c688f185285dbcc20fae2b562655b57504607350fb984e0e12e56430e25d3e4424c7bd7823f87ad64d869b148cf752a12dce0b77ab10cfff0012f9f3e802e7f1ad0b389238a38b23a0ef5716e2b425456acbd6d6c52088630157818a924c450bb30c01f31a9da48d71f38ebd05676a53095020750b9cb64f5acd6acb4efb1034ac611bb82cdb8d64b2cd7b78ce0308f68d8f8e0d47addef93a77991365beef5e3935c9ff006d0242c9717271de272a07d00feb5d34a94a4ae8ce725196a76cf03c51f971b07723962dfcaa95c5aadbd93db02a6e272031cf6cd54d3bc4505f45f669ee0ef1c2c8e0063f5ed9acfd55a7d3df2f1f9a49e2447237af718e70694694b9b959b7b48a5cc739ac42b06ab731af40739f5c806ab302d1672318c8fad4da8ddadfdf3cd1c3e5290176e738c0c75fc2aba3feec8c82057b114f955f73c7724e5248218bcc9913b96db5ad36926dec6599e41b9480071f8f7cfa76fc7d72158abee0dc839073deb41dde5b7919a6078c956ea68936a4874f9795dd14a497746917f7599bf3c7f8546bd0d2b9fde1f4a14641ad52b18b77000e3a9a14719268e9c8e28ce08e6992001c9f5a00ee68ce45277a007f000a6914a7ee8f4a3231ef40125b604e8707ad6cd8b6753b7e7f8eb16138913b73d6b4a19c417b1bb30c03d7ad73d55766b0d88a67cbc9ee4f4a8d0c8913ac6c406033ef5197cb3107a9a9edc79f2245920b1ec3a0ee6925689b36a4f536f48d460b34862b6b0325cb804b9e493df1edc574f6d7d74ecdf68d90a8e98704fe95c9451a6d8c249e44dbdf6bb1c6148e3f98fccd42d6f79b485be52fdc29e3f3ae2a94633773b29625d3563a9b9983ccce922c8bdc8ed56adef5cab23be432e2b80b6bb9a290ee93041c1dd5bd63a80720b327b92718ace7877147446b42b6e6cb4e20b53b8740091dfa9357ac6ecce81d6265c8fe2ed595f6c8b700ac08f5cd4ab3145251bf0ea2b269dad60f651befa1ad2492302779c2f1c555dea58e4e79ee735837d77aa072626531ff00740c1a86de5d465930d1b03dc9e9f9d0a83b5ee57b68c3ddb1635cbfb6468e09c1917ef6d51ce7a66b316e36736c415ea239ed8007f11d3f4ad88ed2059fce9b2ee46090c7152496f691b0946d8b6f3bb815d14da8ae547254e69c9c8c49eef49bb8bcab9b35b39c725a3503f10476aa73de432431dafdb1e4556dc1dd71b7f1ef52ea8d02b6c81a17b763ec761f4f607dab12e38900f2d6365ebb4e73efd6ba69c148e694dc48e521e56030327e9518c007a53e57795d9d98b3b1c963de9a7278aed4b4392fa8c0d9fceb5a1024d1e473220642a02b47f31fa1fe79acb23048f7ab48596d98346d8620a3718fe5cd4c95ec38cb96f7227fbcd42f00f3d29594f38c939a62e4");
            QByteArray inData6("835440b9c77a6f5ee4e79a520fe1494021c283d69077fad1de801dd00fa52529c102938eb9a603864608ed4a5893c67f2a96d2cee2f64f2ad6092693fb91ae4fa7f5ad9d235b7d3eca380e96b7061b9fb48727073ba3e3a72308cbff006d0fa52b750bf4303919cd6a697b54310583baed057b0ee7dab66d2e12386156f0ac33040b296924f99970ac09c01c1556faee3ec2ba34b8bcb5861483414845b4c2e5f637ca555a4383c74c657a9e1056356d6b15077673d15b5b5b5bbc8610efd4971b89fc4d47f6d8ad9ca35a1391cc9181f8d74171a8ce2e2c9ec344c5cc53c772c157ef200a4723b1ea4e07def402ac69fe21d65a28564d31a56f39664f306c27698c01cf5fbaa33d4eef739e6505bb36e6671f77a7c1a9299e03e5cb819046037d6b31f4ebcb784b6e5c03c80d5e816fac6a725badb2e9625596110025b99159982e3d4e428079c6c151ddf88757be13467450cd791aae56424904c8e841f50db88ff700faeb0ba56137adcf3949ae2d98e19d7b915a106b12a0c3eefa8aebeeb5bf105f5db5d368f8590a4e14ba8070e194827e6c7ef14707b8ebd2a03aaeb4d731e7450ed710cb6a14c9f2c88f23338e38ddb9c73fec8f7ad5d38c96a851ad386ccc78f56c8cb03834b2eab1c430187d055ad58f88bc45636769fd984269ca143a30dc410106e3eb988f3ffd6ae56f2de7b5b8f26e10a4a0025491d08c8fd08acfeab1e86cf16dc6ccda7d67084af27b0f5aa93caf7e04b3c85a35fe05fe1ff1acb4fbdcf2a3b559f33612c09149d1507a131abcdab1e56154d8adf23f18f4aa12065f90f38a91dcb1257814e256524c9907d16b5845c77225252d8ac0679f4a41c67d29e539c669ac9906b631236239ee3356a375167265f9dc004299fa9ce38edd3ad56c0193532305899481c9041c0cfe78cfeb40ba0a492c7d3a5769e059a1b7fb6a4c638a3778991dc124b2eef940039ebcfd057226de504908ff002fa0ab125ab6dc796fe6e0646781f5f7f6ec31d4f471f322576b43d475db482dacafd45ca20b94758d5a32172436029ea33b816f52ab9e320f8f142848231838ab8b63339f91589a91b49d411417b2b9dadc0631b60fe38a2d740b47ab2828ee3d69769ce2b4bfb1b5000936538e99ca1e3ebe94c6d2ef436d36b306ff0070d4a2d148a023915a9069910b3825b8b3bb7598b1dd06d236e383ec721b20f503b60d4634abe240fb24dc838f90d5af235c1147107bcf2d47c8a246c2820838f4e091f89a1ec05c82ceded0fda2ca0d76df0db1a55014f3b8edc8c73c0fae0f038ab8f22f98f079fe2674c264efeaa79395c7181d3a827f5a2a9e2464086e6ff6673b4cec067a938cd20d3b5911c9fbd9029501b338e5402a075e40048fa1a949f46093b97a6b0f2ade3961b2f12aaca040431037ed0a318c6703380318ed5712f6511bc7243acb218e49242d295126792704e3ee1527ae4fb565a5af882641fe9971f291f7aef6e0939eedea39f43d6a16d3359129fdf1c8ca8617231c0da4673e800fa0a9719365e88e8ca5e6d8112d754320d91465ee86ddcae1580f9871955c0c8c103d4535647bc0db2d75191f0dbffd3339528c4ed1bb93c2b71d40f435cc3695aba9d85db80063cf0781d075ed40d2354562320123b4ebf4f5aa50bf415d1d5edb8695a68f4ed50dbcbe5aa23dd9c2967c64e186431623ebdf926a937fa5dcc3f60d22f70ab1dcc81af18b98831076fcdd4e481c6724f4270319340d55d77196dc0e0fcd7d12ff0036a1fc357e141373600e40ff008ff84f7e3f8e972c56c2d5eccdb89eda3b4f3ee7c3da90f302c6b2a4d2af27712065f9c8c1ff0080f4e6a07b533b892d745d450b874569256084993728c96eb85653cf38ce33596de1bbd8f3beeb4f381ff41084ff00ecf4e4d02ef047da6c4e4ffcff0045d7fefafd69bb582eefb9bd71a72ce2dd5340ba864984a557edac77e082adcb76008f7c9f4aa76fa6d8dcce40f0edc4ec650aa1aeb190189c1f9b9f94aaf07f841cf5acb7f0dddb6596f74dc83f77edf164fbfdeaadfd8373e6f97f69b10c0f5fb64640fc4350979fe22d7a96755d18c3a6a5f5b6952d9c0a496779d5b7ab9ca1033d40214e0755e808358392473fad6b8f0fcfe615fb558741ff002f91e3f9fd68fec2994b06bbb2e3affa521feb4f4ee0998b8e29475e95abfd8afb726f2d73dc79b9fe429a348e33f6cb71c679ddf974a7a0d5fb14121df228ce063934496e002ca7e4cd69a69cab1f37911cf5c2bfff00134efece89d0b35f438500040b267dff0087b542e6b97eedb546279383d3f2ef4d119273822b656cd1654617b1a853c10b2023e876d4b7b65135899e2b985e55243a28752d9c7cc410067b120f3c71d49d2e667fffd9");

            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,0,totalSeg,inData1);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,1,totalSeg,inData2);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,2,totalSeg,inData3);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,3,totalSeg,inData4);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,4,totalSeg,inData5);
            emit ReplyReceived(EVENT_GET_ALBUM_ART, trackToken,5,totalSeg,inData6);

            break;
        }
        case PNDR_EVENT_TRACK_RATE_POSITIVE:
        {
            quint8 rate = 1;
            emit ReplyReceived(EVENT_RATE_POS, rate);

            //Error case:
            /*
            EPndrError error = GetErrorIdForResponse(PNDR_NOTICE_ERROR_TRACK_RATING,false);
            emit ErrorReceived(error);
            quint8 rate0 = 0;
            emit ReplyReceived(EVENT_RATE_POS, rate0);
            */

            break;
        }

        case PNDR_EVENT_TRACK_RATE_NEGATIVE:
        {

            quint8 rate = 2;
            qDebug()<< "emit PNDR_EVENT_TRACK_RATE_NEGATIVE";
            emit ReplyReceived(EVENT_RATE_NEG, rate);
            qDebug()<< "emit PNDR_UPDATE_TRACK";
            quint32 trackToken = 21;
            emit ReplyReceived(EVENT_TRACK_UPDATED, trackToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK_ALBUM_ART";
            quint32 imageLen = 100;
            emit ReplyReceived(EVENT_ALBUM_ART, imageLen);


            //Error case:
           // EPndrError error = GetErrorIdForResponse(inData,isStatus);
            //emit ErrorReceived(error);

            break;
        }
        case PNDR_EVENT_TRACK_EXPLAIN:
        {
            /*
            quint32 trackExplainLength = 354;
            emit ReplyReceived(EVENT_EXPLAIN, trackExplainLength);
            */

            //Error: RPC

            EPndrError error = GetErrorIdForResponse((pndr_status_code)0x08,false);
            qDebug() << "errId is " << error;
            emit ErrorReceived(error);

            break;
        }
        case PNDR_GET_TRACK_EXPLAIN:
        {
            qDebug()<< "emit PNDR_RETURN_TRACK_EXPLAIN_SEGMENT";
            quint32 trackToken = 20;
            quint8 segIndex1 = 0;
            quint8 segIndex2 = 1;
            quint8 totalSeg = 2;
            QByteArray inData1("ExplainFile");
            QByteArray inData2("_Track20");
            emit ReplyReceived(EVENT_GET_EXPLAIN, trackToken,segIndex1,totalSeg,inData1);
            emit ReplyReceived(EVENT_GET_EXPLAIN, trackToken,segIndex2,totalSeg,inData2);
            break;
        }
        case PNDR_EVENT_STATION_SELECT:
        {

            qDebug()<< "emit PNDR_UPDATE_TRACK";
            emit ReplyReceived(EVENT_TRACK_UPDATED, PNDR_TRACK_NONE);
            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            quint32 stationToken = 50;
            emit ReplyReceived(EVENT_STATION_ACTIVE, stationToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK";
            quint32 trackToken = 12;
            emit ReplyReceived(EVENT_TRACK_UPDATED, trackToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK_ALBUM_ART";
            quint32 imageLen = 256;
            emit ReplyReceived(EVENT_ALBUM_ART, imageLen);

            break;
        }
        case PNDR_EVENT_STATIONS_SORT:
        {
            quint8 sortType = PNDR_SORT_BY_NAME;
            emit ReplyReceived(EVENT_SORT, sortType);
            break;
        }
        case PNDR_GET_STATION_COUNT:
        {
            quint8 stationCount  = 5;
            emit ReplyReceived(EVENT_STATION_COUNT, stationCount);

            break;
        }
        case PNDR_GET_ALL_STATION_TOKENS:
        {
            quint8 startIndex = 0;
            QList<quint32> stationTokenArray;
            quint32 t1 = 51, t2 = 52, t3 = 53, t4 = 54,t5 =55;
            stationTokenArray.append(t1);
            stationTokenArray.append(t2);
            stationTokenArray.append(t3);
            stationTokenArray.append(t4);
            stationTokenArray.append(t5);
            emit ReplyReceived(EVENT_STATION_TOKENS, startIndex,stationTokenArray);
            break;
        }
        case PNDR_GET_STATION_INFO:
        {
            QList<TSStationInfo> stationInfoArray;
            TSStationInfo s1,s2,s3;
            s1.nStationToken = 51;
            s2.nStationToken = 52;
            s3.nStationToken = 53;
            s1.StationLabel = "Station51";
            s2.StationLabel = "Station52";
            s3.StationLabel = "Station53";
            stationInfoArray.append(s1);
            stationInfoArray.append(s2);
            stationInfoArray.append(s3);
            emit ReplyReceived(EVENT_STATION_INFO,stationInfoArray);
            break;
        }
        case PNDR_EVENT_TRACK_BOOKMARK_SONG:
        {
            quint8 isBookmarked = true;
            emit ReplyReceived(EVENT_BOOKMARK_SONG,isBookmarked);
            break;
        }
        case PNDR_EVENT_TRACK_BOOKMARK_ARTIST:
        {
            quint8 isBookmarked = false;
            emit ReplyReceived(EVENT_BOOKMARK_ARTIST,isBookmarked);
            break;
        }
        case PNDR_EVENT_SEARCH_AUTO_COMPLETE:
        {
            quint32 searchId = 1;
            QList<quint32> musicTokens;
            quint32 t1 = 11, t2 = 12, t3 = 13;
            musicTokens.append(t1);
            musicTokens.append(t2);
            musicTokens.append(t3);
            emit ReplyReceived(EVENT_SEARCH,searchId,musicTokens);
            break;
        }
        case PNDR_GET_SEARCH_RESULT_INFO:
        {
            quint32 searchId = 1;
            QList<TSSearchInfo> inSearchList;
            TSSearchInfo s1,s2,s3;
            s1.nType = 1;
            s2.nType = 1;
            s3.nType = 1;
            s1.nMusicToken = 21;
            s2.nMusicToken = 22;
            s3.nMusicToken = 23;
            s1.Label = "Station21";
            s2.Label = "Station22";
            s3.Label = "Station23";
            inSearchList.append(s1);
            inSearchList.append(s2);
            inSearchList.append(s3);
            emit ReplyReceived(EVENT_SEARCH_RESULT_INFO,searchId,inSearchList);

            break;
        }
        case PNDR_EVENT_SEARCH_SELECT:
        {

            qDebug()<< "emit PNDR_UPDATE_TRACK";
            emit ReplyReceived(EVENT_TRACK_UPDATED, PNDR_TRACK_NONE);
            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            emit ReplyReceived(EVENT_STATION_ACTIVE, PNDR_STATION_NONE);
            qDebug() << "emit PNDR_UPDATE_STATION_ADDED";
            quint8 index = 2;
            quint32 stationToken =23;
            emit ReplyReceived(EVENT_TRACK_UPDATED, stationToken,index);
            qDebug()<< "emit PNDR_UPDATE_STATION_ACTIVE";
            emit ReplyReceived(EVENT_STATION_ACTIVE, stationToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK";
            quint32 trackToken = 100;
            emit ReplyReceived(EVENT_TRACK_UPDATED, trackToken);
            qDebug()<< "emit PNDR_UPDATE_TRACK_ALBUM_ART";
            quint32 imageLen = 256;
            emit ReplyReceived(EVENT_ALBUM_ART, imageLen);

            //This event shall not come from Pandora
            //This is just to test station delete notification
            emit ReplyReceived(EVENT_STATION_DELETE, stationToken);


            //Error:station Limit Reached
            /*
            EPndrError error = GetErrorIdForResponse(PNDR_NOTICE_STATION_LIMIT_REACHED,false);
            qDebug() << "errId is " << error;
            emit ErrorReceived(error);
            */
            break;
        }
        default:
        {
            qDebug()<< "Req not handled";
        }
    }

    LOG_TRACE<< "CPndrFrameDecoder::DecodeAndEmit:Exit" <<LOG_ENDL;

}

#else

/**
 *******************************************************************
 * Decode the data frame and emit the required signal
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
void CPndrFrameDecoder::DecodeAndEmit(const QByteArray& inFrame)
{
   // LOG_TRACE<< "CPndrFrameDecoder::DecodeAndEmit:Entry" <<LOG_ENDL;

    //Get the payload Length
    quint32 payloadLen = GetPayloadLength(inFrame);

    //Get the payload
    QByteArray payload = inFrame.mid(ePayloadStartBytePos, payloadLen);
    QDataStream payloadDs(payload);
    payloadDs.setByteOrder(QDataStream::BigEndian);

    //Read the payload to get the response Id
    quint8 responseId;
    payloadDs >> responseId;
    //LOG_INFO << "responseId " <<responseId.toHex() << LOG_ENDL;
    QByteArray respID(1, responseId);//esjang test 

    if( responseId != PNDR_UPDATE_TRACK_ELAPSED )// Track elapse
    {
        LOG_HIGH << "[PandoraLink] DECODER::Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;  // added by cheolhwan 2014-03-20.
        LOG_TRACE<< "DECODER::responseId = " <<respID.toHex().left(32) << LOG_ENDL; ///esjang test:
    }
    else
        LOG_LOW << "DECODER::Frame = " << inFrame.toHex().left(24) <<LOG_ENDL;  // added by cheolhwan 2014-03-20.
    //Get RequestId for given response id
    EPndrEvent inRequest = GetEventIdForResponse(responseId);       
    //decode the payload data and
    //Emit the signal for respective controllers with decoded data

    switch(responseId)
    {
//{ modified by yongkyun.lee 2014-08-25 for : Branding Image
        case PNDR_GET_BRANDING_IMAGE:
        {
            LOG_HIGH << "PNDR_GET_BRANDING_IMAGE  "   <<LOG_ENDL;
            emit ReceivedBranding();
            break;
        }
//} modified by yongkyun.lee 2014-08-04 
        case PNDR_UPDATE_STATUS:
        case PNDR_RETURN_STATUS:
        case PNDR_UPDATE_NOTICE:
        {
            LOG_HIGH << "DECODER::Status [Time = "<< (QTime::currentTime()).toString("hh.mm.ss.zzz")<<"] Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;

            //{ added by esjang 2013.05.10 for certification # 11frame drops. session start and returns valid ack
            //LOG_SIGNAL <<"esjang 0510 Received UpdateStatus data!!!!!!!!!!!!!!!!!!!!"<<LOG_ENDL;
            emit ReceivedStatus();
            //} added by esjang 2013.05.10 for certification # 11frame drops. session start and returns valid ack

            quint8 inData;
            payloadDs >> inData;
            //LOG_INFO  << "inData =" <<inData << LOG_ENDL;

            //If the status is play/pause, it maps to a reqid else to error
            if((PNDR_UPDATE_STATUS == responseId || PNDR_RETURN_STATUS == responseId )&&
                    (PNDR_STATUS_PLAYING == inData || PNDR_STATUS_PAUSED == inData))
            {
                inRequest = GetEventIdForResponse(inData);
               // LOG_SIGNAL<<"Signal emitted: ReplyReceived for eventId "<<inRequest<<LOG_ENDL;
                emit ReplyReceived(inRequest, inData);
            }
            else
            {
                bool isStatus  = true;
                if(PNDR_UPDATE_NOTICE == responseId)
                {
                    isStatus = false;
                }
                EPndrError error = GetErrorIdForResponse(inData,isStatus);
                if(E_SUCCESS != error)
                {
                    LOG_CRITICAL << "DECODER::DecodeAndEmit Error = "<<error
                                  <<" Data frame = " <<inFrame.toHex().left(32)<<LOG_ENDL;

                }
                // TODO: Temp change for certification -esjang
                if(E_BOOKMARK_FAILED != error)
                {
                    emit ErrorReceived(error);
                }

            }
            break;
        }

        case PNDR_UPDATE_TRACK_BOOKMARK_SONG:
        case PNDR_UPDATE_TRACK_BOOKMARK_ARTIST:
        {
            LOG_LOW << "DECODER::Bookmark SONG/ARTIST Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
            quint32 trackToken;
            payloadDs >> trackToken;
            quint8 inData;
            payloadDs >> inData;
            //LOG_INFO  << "inData" <<inData << LOG_ENDL;
            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for bookmark"<<LOG_ENDL;
            emit ReplyReceived(inRequest, inData);
            break;
        }
        case PNDR_RETURN_STATION_COUNT:
        case PNDR_UPDATE_STATIONS_ORDER:
        case PNDR_RETURN_STATIONS_ORDER:
        {
            LOG_LOW << "DECODER::St. COUNT/ORDER Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
            quint8 inData;
            payloadDs >> inData;
            //LOG_INFO  << "inData = " <<inData << LOG_ENDL;
            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for update track/stationorder/count"<<LOG_ENDL;
            emit ReplyReceived(inRequest, inData);
            break;
        }
        case PNDR_UPDATE_TRACK_RATING:
        {
            LOG_LOW << "DECODER::UPDATE TRACK RATING  Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
            quint32 trackToken;
            payloadDs >> trackToken;
            quint8 rate;
            payloadDs >> rate;
            inRequest = EVENT_UPDATE_RATE;
            emit ReplyReceived(inRequest, rate);
            
            /*
            if(c_ratePositive == rate)
            {
                inRequest = EVENT_RATE_POS;
                LOG_SIGNAL<<"Signal emitted: ReplyReceived for rate positive "<<LOG_ENDL;
                emit ReplyReceived(inRequest, rate);

            }
            else if (c_rateNegative == rate)
            {
                inRequest = EVENT_RATE_NEG;
                LOG_SIGNAL<<"Signal emitted: ReplyReceived for rate negative"<<LOG_ENDL;
                emit ReplyReceived(inRequest, rate);

            }
            else if (c_rateNegative == rate)
            {
                inRequest = EVENT_RATE_NEG;
                LOG_SIGNAL<<"Signal emitted: ReplyReceived for rate negative"<<LOG_ENDL;
                emit ReplyReceived(inRequest, rate);

            }
            else
            {
                LOG_SIGNAL<<"Signal emitted: ErrorReceived for Rating failed"<<LOG_ENDL;
                emit ErrorReceived(E_TRACK_RATING_FAILED);

            }
            */
            break;
        }

        case PNDR_UPDATE_TRACK_ELAPSED:
        {
            quint32 trackToken;
            payloadDs >> trackToken;
            quint16 inData;
            payloadDs >> inData;
            //LOG_INFO  << "inData = " <<inData << LOG_ENDL;
            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for track elapsed"<<LOG_ENDL;
            emit ReplyReceived(inRequest,inData);

            break;
        }

        case PNDR_RETURN_SEARCH_RESULT_INFO:
        {
            //Read the payload to get the searchId
            quint32 searchId;
            payloadDs >> searchId;
            //LOG_INFO  << "searchId = " <<searchId << LOG_ENDL;

            //Read the payload to get the searchInfo List
            QList<TSSearchInfo> inSearchList;
            int searchInfoTotalLen = payloadLen - sizeof(quint8) -sizeof(quint32);

            //Append the searchInfo objects to the list
            for(int i =0; i < searchInfoTotalLen;)
            {
                TSSearchInfo searchObj;
                payloadDs >> searchObj.nMusicToken >> searchObj.nType;
                searchObj.Label = ReadNullTerminatedString(payloadDs);
                inSearchList.append(searchObj);
                LOG_INFO << searchObj.nMusicToken<<searchObj.nType<<searchObj.Label<< LOG_ENDL;

                i = i + sizeof(searchObj.nMusicToken)+ sizeof(searchObj.nType)
                        + searchObj.Label.length()
                        + c_OneByte; //For Null terminator
            }

            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for search result info"<<LOG_ENDL;
            emit ReplyReceived(inRequest,searchId,inSearchList);


            break;
        }
        case PNDR_UPDATE_STATION_ADDED:
        {
            quint32 stationToken;
            quint8 index;
            payloadDs >> stationToken>> index;
            LOG_HIGH <<"DECODER::St Added Token = " << stationToken << " Index = " << index<<LOG_ENDL;
            //LOG_INFO <<"index= " << index<< LOG_ENDL;
            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for station added"<<LOG_ENDL;
            emit ReplyReceived(inRequest,stationToken,index);

            break;
        }
        case PNDR_UPDATE_TRACK:
        case PNDR_UPDATE_TRACK_ALBUM_ART:
        case PNDR_UPDATE_TRACK_EXPLAIN:
        case PNDR_UPDATE_STATION_ACTIVE:
        case PNDR_UPDATE_STATION_DELETED:
        case PNDR_UPDATE_TRACK_COMPLETED:
        {

            LOG_HIGH << "DECODER::Track Prop Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;

            quint32 inData1;
            payloadDs >> inData1;
           // LOG_INFO <<"inData1= " << inData1<< LOG_ENDL;
           // LOG_SIGNAL<<"DECODER::Track/Album/Explain/Active/Delete station signal emited"<<LOG_ENDL;
            emit ReplyReceived(inRequest,inData1);

            break;
        }        
        case PNDR_RETURN_STATION_ACTIVE:
        {
           LOG_LOW << "DECODER::Active St. Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
           quint32 activeStationToken;
           payloadDs >> activeStationToken;
           emit ReplyReceived(EVENT_STATION_ACTIVE, activeStationToken);

           break;
        }

        case PNDR_RETURN_TRACK_INFO:
        case PNDR_RETURN_TRACK_INFO_EXTENDED:
        {
            //LOG_LOW << "DECODER::Track Info Frame = " << inFrame.toHex().left(24) <<LOG_ENDL;
            TSTrackInfo inTrackInfoObj;
            quint8 permissionFlag;
            quint8 identityFlag;


            payloadDs >> inTrackInfoObj.nTrackToken;
            payloadDs >> inTrackInfoObj.nAlbumArtLength;
            payloadDs >> inTrackInfoObj.nDuration;
            payloadDs >> inTrackInfoObj.nElapsed;
            payloadDs >> inTrackInfoObj.nRating;
            payloadDs >> permissionFlag;
            payloadDs >> identityFlag;
            QString title(ReadNullTerminatedString(payloadDs));
            QString artist(ReadNullTerminatedString(payloadDs));
            QString album(ReadNullTerminatedString(payloadDs));



            //Set the different flags based on the bitmask flag value
            if(permissionFlag & PNDR_TRACK_FLAG_ALLOW_RATING)
                inTrackInfoObj.bAllowRating = true;
            else
                inTrackInfoObj.bAllowRating = false;
            LOG_LOW << "DECODER::Track Info : bAllowRating = " << inTrackInfoObj.bAllowRating <<LOG_ENDL;

            if(permissionFlag & PNDR_TRACK_FLAG_ALLOW_SKIP)
                inTrackInfoObj.bAllowSkip = true;
            else
                inTrackInfoObj.bAllowSkip = false;

            if(permissionFlag & PNDR_TRACK_FLAG_ALLOW_BOOKMARK)
                inTrackInfoObj.bAllowBookmark = true;
            else
                inTrackInfoObj.bAllowBookmark = false;

            if(permissionFlag & PNDR_TRACK_FLAG_ALLOW_EXPLAIN)
                inTrackInfoObj.bAllowExplain = true;
            else
                inTrackInfoObj.bAllowExplain = false;


            //Set the different flags based on the bitmask flag value
            if(identityFlag & PNDR_TRACK_FLAG_IS_AD)
                inTrackInfoObj.bAd = true;
            else
                inTrackInfoObj.bAd = false;

            if(identityFlag & PNDR_TRACK_FLAG_IS_TRACK_BOOKMARKED)
                inTrackInfoObj.bTrackBookmarked = true;
            else
                inTrackInfoObj.bTrackBookmarked = false;

            if(identityFlag & PNDR_TRACK_FLAG_IS_ARTIST_BOOKMARKED)
                inTrackInfoObj.bArtistBookmarked = true;
            else
                inTrackInfoObj.bArtistBookmarked = false;

            inTrackInfoObj.Title = title;
            inTrackInfoObj.Artist = artist;
            inTrackInfoObj.Album = album;

            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for Extended Track info"<<LOG_ENDL;
            emit ReplyReceived(inRequest,inTrackInfoObj);

            break;
        } 
        case PNDR_RETURN_STATION_TOKENS:
        {
            LOG_LOW << "DECODER::St. Tokens Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
            quint8 startIndex;
            payloadDs >> startIndex;
            //LOG_INFO <<"startIndex =" << startIndex<< LOG_ENDL;

            QList<quint32> tokenArray;

            //calculate no of objects
            //payloadLen-cmdIdLen-Data1Len / size of each struct
            int noOfObj = (payloadLen - sizeof(quint8) -sizeof(quint8))/
                    (sizeof(quint32));

            for(int i=1;i<=noOfObj;i++)
            {
                quint32 inDataObj;
                payloadDs >> inDataObj;
                tokenArray.append(inDataObj);
            }

            //LOG_TRACE<<"Signal emitted: ReplyReceived  for stationtokens"<<LOG_ENDL;
            emit ReplyReceived(inRequest,startIndex,tokenArray);

            break;
        }

        case PNDR_UPDATE_SEARCH:
        {
            LOG_LOW << "DECODER::Search Data Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
            quint32 searchId;
            payloadDs >> searchId;
           // LOG_INFO <<"searchId =" << searchId<< LOG_ENDL;

            QList<quint32> musicTokenArray;

            //calculate no of objects
            //payloadLen-cmdIdLen-Data1Len / size of each struct
            int noOfObj = (payloadLen - sizeof(quint8) -sizeof(quint32))/
                    (sizeof(quint32));

            for(int i=1;i<=noOfObj;i++)
            {
                quint32 inDataObj;
                payloadDs >> inDataObj;
                //{ modified by Radha. added the condition for no token.                
                //if(inDataObj > 0) //removed by cheolhwan 2014-03-13. Should request about music token "0".
                {
                    musicTokenArray.append(inDataObj);
                }
                //} modified by Radha. added the condition for no token.
            }

            //LOG_SIGNAL<<"Signal emitted: ReplyReceived  for update search"<<LOG_ENDL;
            emit ReplyReceived(inRequest,searchId,musicTokenArray);

            break;
        }
        case PNDR_RETURN_STATION_INFO:
        {
            LOG_LOW << "DECODER::St. Info Frame = " << inFrame.toHex().left(32) <<LOG_ENDL;
            QList<TSStationInfo> inStation;

            int stationInfoTotalLen  = payloadLen - sizeof(quint8);
            //LOG_INFO << "Total size of station info =" << payloadLen-1<<LOG_ENDL;
            for(int i=0;i< stationInfoTotalLen ;)
            {
                TSStationInfo stationObj;
                payloadDs >> stationObj.nStationToken;
                //Flag to test QuickMix
                quint8 flags;
                payloadDs >> flags;

                if((flags & PNDR_STATION_FLAG_IS_QUICKMIX)
                    == PNDR_STATION_FLAG_IS_QUICKMIX )
                {
                   stationObj.bQuickMix = true;
                }
                else
                {
                   stationObj.bQuickMix = false;
                }

                if((flags & PNDR_STATION_FLAG_IS_SHARED)
                    == PNDR_STATION_FLAG_IS_SHARED )
                {
                   stationObj.bShared = true;

                }
                else
                {
                   stationObj.bShared = false;
                }

                LOG_INFO << "stationObj.nStationToken: " << stationObj.nStationToken << LOG_ENDL;
                stationObj.StationLabel = ReadNullTerminatedString(payloadDs); //read the QString

                if(stationObj.nStationToken > 0 && stationObj.StationLabel.length()>0){
                    inStation.append(stationObj);
                }else{
                    LOG_CRITICAL<<"****Null data,Dont put into list***"<<LOG_ENDL;
                }
                i= i + sizeof(stationObj.nStationToken) +
                        sizeof(flags) +
                        stationObj.StationLabel.length() +
                        c_OneByte; //for NULL terminator
                //LOG_INFO << "Current position i =" << i << LOG_ENDL;
            }

            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for station Info "<<LOG_ENDL;
            emit ReplyReceived(inRequest,inStation);

            break;
        }
        case PNDR_RETURN_TRACK_ALBUM_ART_SEGMENT:
        case PNDR_RETURN_TRACK_EXPLAIN_SEGMENT:
        {
            quint32 trackToken;
            quint8 segIndex;
            quint8 totalSeg;
            QByteArray data(payloadLen-7, 0);
            payloadDs >> trackToken >> segIndex >> totalSeg;
            payloadDs.readRawData(data.data(),payloadLen - 7);

            //LOG_INFO << " album art data : "<< LOG_ENDL ;
            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for album art/explain segment"<<LOG_ENDL;
            if(PNDR_RETURN_TRACK_EXPLAIN_SEGMENT == responseId)
            {
                LOG_SIGNAL << "explain segment data: " << data << LOG_ENDL;
                LOG_SIGNAL << "explain segment inRequest : " << inRequest << " track token : " << trackToken 
                    << " segIndex : " << segIndex << " total seg: " << totalSeg << LOG_ENDL;
            }
            emit ReplyReceived(inRequest,trackToken,segIndex,totalSeg,data);

            break;
        }

        case PNDR_RETURN_STATION_ART_SEGMENT:
        {
            quint32 stationToken;
            quint32 artLength;
            quint8 segIndex;
            quint8 totalSeg;
            QByteArray data(payloadLen-11, 0);
            payloadDs >> stationToken >> artLength >> segIndex >> totalSeg;
            payloadDs.readRawData(data.data(),payloadLen - 11);

            //LOG_INFO << " station art data : "<<data.toHex() << LOG_ENDL ;
            //LOG_SIGNAL<<"Signal emitted: ReplyReceived for station art segment"<<LOG_ENDL;
            emit ReplyReceived(inRequest,stationToken,artLength,segIndex,totalSeg,data);

            break;
        }
        default:
        {
            QByteArray respID(1, responseId);//esjang test 
            //LOG_CRITICAL << "Unknown event with responseId = " << responseId << LOG_ENDL;
            LOG_CRITICAL << "DECODER::Unknown event with responseId = " << respID.toHex().left(32) << LOG_ENDL;
            break;
        }

    }
    //LOG_TRACE<< "CPndrFrameDecoder::DecodeAndEmit:Exit" <<LOG_ENDL;

}

#endif //DHAVN_PANDORA_TESTFRAMEWORK

/**
 *******************************************************************
 * Emit the network error signal since multiple trials have failed
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
void CPndrFrameDecoder::EmitNetworkError()
{
   //LOG_TRACE<< "CPndrFrameDecoder::EmitNetworkError:Entry" <<LOG_ENDL;

    emit ErrorReceived(E_NETWORK_FAILED);

   // LOG_TRACE<< "CPndrFrameDecoder::EmitNetworkError:Exit" <<LOG_ENDL;

}

/**
*******************************************************************
* Remove the escape from given array
*
* @param   None
*
* @return  None
*
*******************************************************************
*/
void CPndrFrameDecoder::RemoveEscape(QByteArray& inFrame)
{
   //LOG_TRACE<< "CPndrFrameDecoder::RemoveEscape:Entry" <<LOG_ENDL;

    int escapedFrameLen = inFrame.count()-1;
    //start with i=1 and go till last but one byte
    //since start and end byte are not to be escaped
    for(int i=1;i<escapedFrameLen;i++)
    {
        if( ((uint)inFrame[i] == PNDR_FRAME_ESCAPE) &&
        ((uint)inFrame[i+1] == PNDR_FRAME_ESCAPE_START))
        {
            inFrame[i]= PNDR_FRAME_START;
            inFrame.remove(i+1,1);
        }
        else if( ((uint)inFrame[i] == PNDR_FRAME_ESCAPE) &&
        ((uint)inFrame[i+1] == PNDR_FRAME_ESCAPE_END))
        {
            inFrame[i]=PNDR_FRAME_END;
            inFrame.remove(i+1,1);
        }
        else if( ((uint)inFrame[i] == PNDR_FRAME_ESCAPE) &&
        ((uint)inFrame[i+1] == PNDR_FRAME_ESCAPE_ESCAPE))
        {
            inFrame[i]=PNDR_FRAME_ESCAPE;
            inFrame.remove(i+1,1);
        }

        escapedFrameLen = inFrame.count()-1 ;

    }

   // LOG_TRACE<< "CPndrFrameDecoder::RemoveEscape:Exit" <<LOG_ENDL;

}

/**
 *******************************************************************
 * Returns the event Id for given Response id
 *
 * @param[in]   inResponseId The given response id
 *
 * @return  EPndrEvent The event Id for given response id
 *
 *******************************************************************
*/
EPndrEvent CPndrFrameDecoder::GetEventIdForResponse(quint8 inResponseId)
{
   // LOG_TRACE<< "CPndrFrameDecoder::GetEventIdForResponse:Entry" <<LOG_ENDL;

    EPndrEvent ret = EVENT_UNKNOWN;
    if(m_RespIdEventMap.contains(inResponseId))
    {
        ret =  m_RespIdEventMap.value(inResponseId);
    }
    else
    {
        LOG_CRITICAL << "DECODER::GetEventIdForResponse  does not contain ResponseId = " << inResponseId <<LOG_ENDL;
    }

    //LOG_CRITICAL << "CPndrFrameDecoder::GetEventIdForResponse : " << ret <<LOG_ENDL;

    return ret;
}

/**
 *******************************************************************
 * Returns the error Id for given Response
 *
 * @param[in]   inResponse The given response
 *
 * @return  EPndrError The error Id for given response
 *
 *******************************************************************
*/
EPndrError CPndrFrameDecoder::GetErrorIdForResponse(qint8 inResponse, bool isStatus)
{
    EPndrError ret = E_UNKNOWN_ERROR;

    if(isStatus)
    {
        if(m_RespStatusErrorMap.contains(inResponse))
        {
            ret =  m_RespStatusErrorMap.value(inResponse);
        }
    }
    else
    {
        if(m_RespNoticeErrorMap.contains(inResponse))
        {
            ret =  m_RespNoticeErrorMap.value(inResponse);
        }
    }

    LOG_CRITICAL << "DECODER::GetErrorIdForResponse Error occured = "
                 << inResponse << " ret = "<<ret<<LOG_ENDL;
    return ret;
}

/**
 *******************************************************************
 * Gets the sequence no.
 *
 * @param   None
 *
 * @return  The seq. no.
 *
 *******************************************************************
*/
quint8 CPndrFrameDecoder::GetSequenceNumber(const QByteArray& inFrame)
{
   // LOG_TRACE<< "CPndrFrameDecoder::GetSequenceNumber:Entry" <<LOG_ENDL;

    //Get the seq no.
    return inFrame[eSeqNoBytePos];
}

//{ added by esjang 2013.05.10 for certification # 11frame drops. session start and returns valid ack
/**
 *******************************************************************
 * Gets the Request ID no on ACK Frame.
 *
 * @param   None
 *
 * @return  The Request ID. no.
 *
 *******************************************************************
*/

quint8 CPndrFrameDecoder::GetRequestIDNumber(const QByteArray& inFrame)
{
   // LOG_TRACE<< "CPndrFrameDecoder::GetSequenceNumber:Entry" <<LOG_ENDL;

    //Get the seq no.
    return inFrame[ePayloadStartBytePos];
}

//} added by esjang 2013.05.10 for certification # 11frame drops. session start and returns valid ack


/**
 *******************************************************************
 * Gets the payload length
 *
 * @param   None
 *
 * @return  The payload length
 *
 *******************************************************************
*/
quint32 CPndrFrameDecoder::GetPayloadLength(const QByteArray& inFrame)
{
    //LOG_TRACE<< "CPndrFrameDecoder::GetPayloadLength:Entry" <<LOG_ENDL;

    //Get the payload Length
    quint32 payloadLen;
    QByteArray lenByteArray = inFrame.mid(ePayloadLenBytePos1, sizeof(payloadLen));
    QDataStream lenDs(lenByteArray);
    //To DO: Check if Endianness causes problem if GetPayloadLength is called outside Decoder
    // Need to pass endianness as param in that case
    lenDs.setByteOrder(QDataStream::BigEndian);
    lenDs >> payloadLen ;
    //LOG_INFO << "DECODER::Payload length = " <<payloadLen << LOG_ENDL;
    //LOG_TRACE<< "CPndrFrameDecoder::GetPayloadLength:Exit" <<LOG_ENDL;
    return payloadLen;
}

/**
 *******************************************************************
 * Gets the CRC
 *
 * @param   None
 *
 * @return  The CRC
 *
 *******************************************************************
*/
quint16 CPndrFrameDecoder::GetCRC(const QByteArray& inFrame)
{
    //LOG_TRACE<< "CPndrFrameDecoder::GetCRC:Entry" <<LOG_ENDL;
    //Get the CRC
    quint16 CRC;
    QByteArray CRCByteArray = inFrame.mid(ePayloadStartBytePos+GetPayloadLength(inFrame), sizeof(CRC));
    QDataStream CRCDs(CRCByteArray);
    CRCDs.setByteOrder(QDataStream::BigEndian);
    CRCDs >> CRC ;
    //LOG_TRACE<< "CPndrFrameDecoder::GetCRC:Exit" <<LOG_ENDL;
    return CRC;
}

/**
 *******************************************************************
 * Map the ResponseId to event Id
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
void CPndrFrameDecoder::initResCmdEventIdMap()
{
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK_BOOKMARK_SONG,EVENT_BOOKMARK_SONG);
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK_BOOKMARK_ARTIST,EVENT_BOOKMARK_ARTIST);
    m_RespIdEventMap.insert(PNDR_RETURN_STATION_COUNT,EVENT_STATION_COUNT);
    m_RespIdEventMap.insert(PNDR_UPDATE_STATIONS_ORDER,EVENT_SORT);
    m_RespIdEventMap.insert(PNDR_RETURN_STATIONS_ORDER,EVENT_SORT_ORDER);
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK_ELAPSED,EVENT_SET_ELAPSED_POLLING);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_TITLE,EVENT_TITLE);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_ARTIST,EVENT_ARTIST);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_ALBUM,EVENT_ALBUM);
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK_ALBUM_ART,EVENT_ALBUM_ART);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_ALBUM_ART_SEGMENT,EVENT_GET_ALBUM_ART);
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK_EXPLAIN,EVENT_EXPLAIN);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_EXPLAIN_SEGMENT,EVENT_GET_EXPLAIN);
    m_RespIdEventMap.insert(PNDR_RETURN_STATION_ART_SEGMENT,EVENT_GET_STATION_ART);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_INFO,EVENT_PART_TRACK_INFO);
    m_RespIdEventMap.insert(PNDR_UPDATE_SEARCH,EVENT_SEARCH);
    m_RespIdEventMap.insert(PNDR_RETURN_STATION_TOKENS,EVENT_STATION_TOKENS);
    m_RespIdEventMap.insert(PNDR_RETURN_STATION_INFO,EVENT_STATION_INFO);
    m_RespIdEventMap.insert(PNDR_UPDATE_STATION_ACTIVE,EVENT_STATION_ACTIVE);
    m_RespIdEventMap.insert(PNDR_STATUS_PLAYING,EVENT_PLAY);
    m_RespIdEventMap.insert(PNDR_STATUS_PAUSED,EVENT_PAUSE);
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK,EVENT_TRACK_UPDATED);
    m_RespIdEventMap.insert(PNDR_UPDATE_STATION_ADDED,EVENT_STATION_ADDED);
    m_RespIdEventMap.insert(PNDR_UPDATE_STATION_DELETED,EVENT_STATION_DELETE);
    m_RespIdEventMap.insert(PNDR_RETURN_SEARCH_RESULT_INFO,EVENT_SEARCH_RESULT_INFO);
    m_RespIdEventMap.insert(PNDR_RETURN_TRACK_INFO_EXTENDED,EVENT_EXTENDED_TRACK_INFO);
    m_RespIdEventMap.insert(PNDR_UPDATE_TRACK_COMPLETED,EVENT_TRACK_COMPLETED);

}

/**
 *******************************************************************
 * Map the Response to Error Id
 *
 * @param   None
 *
 * @return  None
 *
 *******************************************************************
*/
void CPndrFrameDecoder::initResponseErrIdMap()
{
    // All Posible error are inserted to proper mapping table.
    //Request to use as required

    /* These error will come as part of Update/Return status */
    m_RespStatusErrorMap.insert(PNDR_STATUS_INCOMPATIBLE_API_VERSION,E_INVALID_VERSION);
    m_RespStatusErrorMap.insert(PNDR_STATUS_SEE_DEVICE,E_CHECK_PNDR_APP_ON_DEVICE);
    m_RespStatusErrorMap.insert(PNDR_STATUS_NO_STATIONS,E_NO_STATIONS);
    m_RespStatusErrorMap.insert(PNDR_STATUS_NO_STATION_ACTIVE,E_NO_ACTIVE_STATIONS);
    m_RespStatusErrorMap.insert(PNDR_STATUS_INSUFFICIENT_CONNECTIVITY,E_INSUFFICIENT_CONNECTIVITY); // added by esjang 2013.05.03 for certification test #7.9
    m_RespStatusErrorMap.insert(PNDR_STATUS_LICENSING_RESTRICTIONS,E_LICENSING_RESTRICTIONS);
    m_RespStatusErrorMap.insert(PNDR_STATUS_INVALID_LOGIN,E_INVALID_LOGIN);

    /* These error will come as part of Update Notice status */
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_SKIP_LIMIT_REACHED,E_SKIP_LIMIT_REACHED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_STATION_LIMIT_REACHED,E_STATION_LIMIT_REACHED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_TRACK_RATING,E_TRACK_RATING_FAILED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_STATION_DELETE,E_STATION_DELETE_FAILED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_SEARCH_EXTENDED,E_SEARCH_EXTENDED_FAILED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_SEARCH_SELECT,E_SEARCH_SELECT_FAILED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_BOOKMARK,E_BOOKMARK_FAILED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_MAINTENANCE,E_NOTICE_ERROR_MAINTENANCE);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_TRACK_EXPLAIN,E_TRACK_EXPLAIN_FAILED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_SESSION_ALREADY_STARTED,E_SESSION_ALREADY_STARTED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_NO_ACTIVE_SESSION,E_NO_ACTIVE_SESSION);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_APP_URL_NOT_SUPPORTED,E_APP_URL_NOT_SUPPORTED);
    m_RespNoticeErrorMap.insert(PNDR_NOTICE_ERROR_STATION_DOES_NOT_EXIST,E_STATION_DOES_NOT_EXIST);
}


/**
 *******************************************************************
 * Reads a Null terminated String from the QDatastream
 *
 * @param   inDataStream QDataStream already pointing to received data
 *
 * @return  QString the string read
 *
 *******************************************************************
*/
QString CPndrFrameDecoder::ReadNullTerminatedString(QDataStream& inDataStream)
{
    QByteArray data; // will hold your data when done
    data.reserve(c_charArraySize);
    qint8 byte;
    do
    {
        // inDataStream is your QDataStream already pointing to received data
        inDataStream >> byte;
        data.append(byte);
    } while (byte != 0);
    // modified by esjang 2013.03.28 for Pandora certification test #4.4, 4.5, 4.6, 5.3 //QString dataStr(data);
    QString dataStr = QObject::trUtf8(data);
    LOG_TRACE<< "DECODER::ReadNullTerminated String = " << dataStr <<LOG_ENDL;
    return dataStr;
}

//End Of File
