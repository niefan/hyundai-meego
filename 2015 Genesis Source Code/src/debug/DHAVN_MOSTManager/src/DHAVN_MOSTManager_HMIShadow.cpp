/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2015-02-10.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

/**
 * HMC DH Fcat v15.2.10
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

#include "DHAVN_MOSTManager_HMIIBOXtoHUModeChange.h"

#include "DHAVN_MOSTManager_HMIShadow.h"


acs::generated::shadow::HMI::CVersion::CVersion(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CVersion::~CVersion(void)
{
}
void acs::generated::shadow::HMI::CVersion::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_versionFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CVersion::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_versionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CVersion::FunctionInstance(void)
{
	return m_pInstance->m_versionFunction;
}
bool acs::generated::shadow::HMI::CVersion::Get(  )
{
   return m_pInstance->m_versionFunction.Get();
}
bool acs::generated::shadow::HMI::CVersion::MajorValue( uint8_t value )
{
    return m_pInstance->m_versionMajorParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CVersion::MajorValue() const
{
	return m_pInstance->m_versionMajorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CVersion::MajorDataType()
{
    return m_pInstance->m_versionMajorParameter;
}
bool acs::generated::shadow::HMI::CVersion::MinorValue( uint8_t value )
{
    return m_pInstance->m_versionMinorParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CVersion::MinorValue() const
{
	return m_pInstance->m_versionMinorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CVersion::MinorDataType()
{
    return m_pInstance->m_versionMinorParameter;
}
bool acs::generated::shadow::HMI::CVersion::BuildValue( uint8_t value )
{
    return m_pInstance->m_versionBuildParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CVersion::BuildValue() const
{
	return m_pInstance->m_versionBuildParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CVersion::BuildDataType()
{
    return m_pInstance->m_versionBuildParameter;
}



acs::generated::shadow::HMI::CFBlockInfo::CFBlockInfo(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CFBlockInfo::~CFBlockInfo(void)
{
}
void acs::generated::shadow::HMI::CFBlockInfo::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_fBlockInfoFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CFBlockInfo::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_fBlockInfoFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CFBlockInfo::FunctionInstance(void)
{
	return m_pInstance->m_fBlockInfoFunction;
}
bool acs::generated::shadow::HMI::CFBlockInfo::IDValue( uint16_t value )
{
    return m_pInstance->m_fBlockInfoIDParameter.Value( value );
}
uint16_t acs::generated::shadow::HMI::CFBlockInfo::IDValue() const
{
	return m_pInstance->m_fBlockInfoIDParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::HMI::CFBlockInfo::IDDataType()
{
    return m_pInstance->m_fBlockInfoIDParameter;
}
bool acs::generated::shadow::HMI::CFBlockInfo::FunctionMaturityValue( acs::generated::shadow::HMI::CFBlockInfo::TFunctionMaturity value )
{
    return m_pInstance->m_fBlockInfoFunctionMaturityParameter.Value( value );
}
acs::generated::shadow::HMI::CFBlockInfo::TFunctionMaturity acs::generated::shadow::HMI::CFBlockInfo::FunctionMaturityValue() const
{
	return (acs::generated::shadow::HMI::CFBlockInfo::TFunctionMaturity)m_pInstance->m_fBlockInfoFunctionMaturityParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CFBlockInfo::FunctionMaturityDataType()
{
    return m_pInstance->m_fBlockInfoFunctionMaturityParameter;
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockNameValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CFBlockInfo::FBlockNameValue() const
{
	return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CFBlockInfo::FBlockNameDataType()
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::FBlockNameLength() const
{
	return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionValue() const
{
	return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionDataType()
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionLength() const
{
	return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CFBlockInfo::SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionValue() const
{
	return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionDataType()
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionLength() const
{
	return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionValue() const
{
	return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionDataType()
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionLength() const
{
	return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CFBlockInfo::MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorValue() const
{
	return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorDataType()
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorLength() const
{
	return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CFBlockInfo::SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeValue() const
{
	return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeDataType()
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeLength() const
{
	return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CFBlockInfo::FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CFBlockInfo::DescriptionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.Stream( value, length );
}
const uint8_t * acs::generated::shadow::HMI::CFBlockInfo::DescriptionValue() const
{
	return m_pInstance->m_fBlockInfoDescriptionParameter.Stream();
}
::k2l::acs::protocols::most::CMOSTCaseStream& acs::generated::shadow::HMI::CFBlockInfo::DescriptionDataType()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter;
}
uint32_t acs::generated::shadow::HMI::CFBlockInfo::DescriptionStreamLength() const
{
	return m_pInstance->m_fBlockInfoDescriptionParameter.StreamLength();
}
bool acs::generated::shadow::HMI::CFBlockInfo::DescriptionLoadNext()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.LoadNext();
}
bool acs::generated::shadow::HMI::CFBlockInfo::DescriptionSaveNext()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.SaveNext();
}
bool acs::generated::shadow::HMI::CFBlockInfo::Get(  )
{
   return m_pInstance->m_fBlockInfoFunction.Get();
}



acs::generated::shadow::HMI::CSystemLanguage::CSystemLanguage(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemLanguage::~CSystemLanguage(void)
{
}
void acs::generated::shadow::HMI::CSystemLanguage::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemLanguageFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemLanguage::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemLanguageFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CSystemLanguage::FunctionInstance(void)
{
	return m_pInstance->m_systemLanguageFunction;
}
bool acs::generated::shadow::HMI::CSystemLanguage::Get(  )
{
   return m_pInstance->m_systemLanguageFunction.Get();
}
bool acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_systemLanguageParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageValue() const
{
	return m_pInstance->m_systemLanguageParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageDataType()
{
    return m_pInstance->m_systemLanguageParameter;
}
uint32_t acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageLength() const
{
	return m_pInstance->m_systemLanguageParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_systemLanguageParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_systemLanguageParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CSystemLanguage::SystemLanguageString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_systemLanguageParameter.String( ppStringEncoding, ppString, pStringLength );
}



acs::generated::shadow::HMI::CSystemVolumeStatus::CSystemVolumeStatus(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemVolumeStatus::~CSystemVolumeStatus(void)
{
}
void acs::generated::shadow::HMI::CSystemVolumeStatus::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemVolumeStatusFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemVolumeStatusFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CSystemVolumeStatus::FunctionInstance(void)
{
	return m_pInstance->m_systemVolumeStatusFunction;
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::SourceTypeValue( acs::generated::shadow::HMI::CSystemVolumeStatus::TSourceType value )
{
    return m_pInstance->m_systemVolumeStatusSourceTypeParameter.Value( value );
}
acs::generated::shadow::HMI::CSystemVolumeStatus::TSourceType acs::generated::shadow::HMI::CSystemVolumeStatus::SourceTypeValue() const
{
	return (acs::generated::shadow::HMI::CSystemVolumeStatus::TSourceType)m_pInstance->m_systemVolumeStatusSourceTypeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CSystemVolumeStatus::SourceTypeDataType()
{
    return m_pInstance->m_systemVolumeStatusSourceTypeParameter;
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::DefaultVolumeValue( uint8_t value )
{
    return m_pInstance->m_systemVolumeStatusDefaultVolumeParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemVolumeStatus::DefaultVolumeValue() const
{
	return m_pInstance->m_systemVolumeStatusDefaultVolumeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemVolumeStatus::DefaultVolumeDataType()
{
    return m_pInstance->m_systemVolumeStatusDefaultVolumeParameter;
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::CurrentVolumeValue( uint8_t value )
{
    return m_pInstance->m_systemVolumeStatusCurrentVolumeParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemVolumeStatus::CurrentVolumeValue() const
{
	return m_pInstance->m_systemVolumeStatusCurrentVolumeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemVolumeStatus::CurrentVolumeDataType()
{
    return m_pInstance->m_systemVolumeStatusCurrentVolumeParameter;
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::Set(  )
{
   return m_pInstance->m_systemVolumeStatusFunction.Set();
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::SetGet(  )
{
   return m_pInstance->m_systemVolumeStatusFunction.SetGet();
}
bool acs::generated::shadow::HMI::CSystemVolumeStatus::Get(  )
{
   return m_pInstance->m_systemVolumeStatusFunction.Get();
}



acs::generated::shadow::HMI::CSoundStatus::CSoundStatus(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSoundStatus::~CSoundStatus(void)
{
}
void acs::generated::shadow::HMI::CSoundStatus::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_soundStatusFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSoundStatus::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_soundStatusFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CSoundStatus::FunctionInstance(void)
{
	return m_pInstance->m_soundStatusFunction;
}
bool acs::generated::shadow::HMI::CSoundStatus::Get(  )
{
   return m_pInstance->m_soundStatusFunction.Get();
}
bool acs::generated::shadow::HMI::CSoundStatus::BGSoundValue( acs::generated::shadow::HMI::CSoundStatus::TBGSound value )
{
    return m_pInstance->m_soundStatusBGSoundParameter.Value( value );
}
acs::generated::shadow::HMI::CSoundStatus::TBGSound acs::generated::shadow::HMI::CSoundStatus::BGSoundValue() const
{
	return (acs::generated::shadow::HMI::CSoundStatus::TBGSound)m_pInstance->m_soundStatusBGSoundParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CSoundStatus::BGSoundDataType()
{
    return m_pInstance->m_soundStatusBGSoundParameter;
}



acs::generated::shadow::HMI::CSystemTime::CSystemTime(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemTime::~CSystemTime(void)
{
}
void acs::generated::shadow::HMI::CSystemTime::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemTimeFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemTime::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemTimeFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CSystemTime::FunctionInstance(void)
{
	return m_pInstance->m_systemTimeFunction;
}
bool acs::generated::shadow::HMI::CSystemTime::Get(  )
{
   return m_pInstance->m_systemTimeFunction.Get();
}
bool acs::generated::shadow::HMI::CSystemTime::TimeTypeValue( acs::generated::shadow::HMI::CSystemTime::TTimeType value )
{
    return m_pInstance->m_systemTimeTimeTypeParameter.Value( value );
}
acs::generated::shadow::HMI::CSystemTime::TTimeType acs::generated::shadow::HMI::CSystemTime::TimeTypeValue() const
{
	return (acs::generated::shadow::HMI::CSystemTime::TTimeType)m_pInstance->m_systemTimeTimeTypeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CSystemTime::TimeTypeDataType()
{
    return m_pInstance->m_systemTimeTimeTypeParameter;
}
bool acs::generated::shadow::HMI::CSystemTime::CurrentHourValue( uint8_t value )
{
    return m_pInstance->m_systemTimeCurrentHourParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemTime::CurrentHourValue() const
{
	return m_pInstance->m_systemTimeCurrentHourParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemTime::CurrentHourDataType()
{
    return m_pInstance->m_systemTimeCurrentHourParameter;
}
bool acs::generated::shadow::HMI::CSystemTime::CurrentMinValue( uint8_t value )
{
    return m_pInstance->m_systemTimeCurrentMinParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemTime::CurrentMinValue() const
{
	return m_pInstance->m_systemTimeCurrentMinParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemTime::CurrentMinDataType()
{
    return m_pInstance->m_systemTimeCurrentMinParameter;
}
bool acs::generated::shadow::HMI::CSystemTime::CurrentSecValue( uint8_t value )
{
    return m_pInstance->m_systemTimeCurrentSecParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemTime::CurrentSecValue() const
{
	return m_pInstance->m_systemTimeCurrentSecParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemTime::CurrentSecDataType()
{
    return m_pInstance->m_systemTimeCurrentSecParameter;
}
bool acs::generated::shadow::HMI::CSystemTime::TimezoneValue( int16_t value )
{
    return m_pInstance->m_systemTimeTimezoneParameter.Value( value );
}
int16_t acs::generated::shadow::HMI::CSystemTime::TimezoneValue() const
{
	return m_pInstance->m_systemTimeTimezoneParameter.Value();
}
::k2l::acs::protocols::most::CMOSTSignedWord& acs::generated::shadow::HMI::CSystemTime::TimezoneDataType()
{
    return m_pInstance->m_systemTimeTimezoneParameter;
}
bool acs::generated::shadow::HMI::CSystemTime::DSTValue( uint32_t mask, uint32_t value )
{
    return m_pInstance->m_systemTimeDSTParameter.Value( mask, value );
}
uint32_t acs::generated::shadow::HMI::CSystemTime::DSTValue() const
{
	return m_pInstance->m_systemTimeDSTParameter.Value();
}
::k2l::acs::protocols::most::CMOSTBitFieldShadow30& acs::generated::shadow::HMI::CSystemTime::DSTDataType()
{
    return m_pInstance->m_systemTimeDSTParameter;
}



acs::generated::shadow::HMI::CSystemDate::CSystemDate(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemDate::~CSystemDate(void)
{
}
void acs::generated::shadow::HMI::CSystemDate::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemDateFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemDate::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemDateFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CSystemDate::FunctionInstance(void)
{
	return m_pInstance->m_systemDateFunction;
}
bool acs::generated::shadow::HMI::CSystemDate::Get(  )
{
   return m_pInstance->m_systemDateFunction.Get();
}
bool acs::generated::shadow::HMI::CSystemDate::CurrentYearValue( uint16_t value )
{
    return m_pInstance->m_systemDateCurrentYearParameter.Value( value );
}
uint16_t acs::generated::shadow::HMI::CSystemDate::CurrentYearValue() const
{
	return m_pInstance->m_systemDateCurrentYearParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::HMI::CSystemDate::CurrentYearDataType()
{
    return m_pInstance->m_systemDateCurrentYearParameter;
}
bool acs::generated::shadow::HMI::CSystemDate::CurrentMonthValue( uint8_t value )
{
    return m_pInstance->m_systemDateCurrentMonthParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemDate::CurrentMonthValue() const
{
	return m_pInstance->m_systemDateCurrentMonthParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemDate::CurrentMonthDataType()
{
    return m_pInstance->m_systemDateCurrentMonthParameter;
}
bool acs::generated::shadow::HMI::CSystemDate::CurrentDayValue( uint8_t value )
{
    return m_pInstance->m_systemDateCurrentDayParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CSystemDate::CurrentDayValue() const
{
	return m_pInstance->m_systemDateCurrentDayParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CSystemDate::CurrentDayDataType()
{
    return m_pInstance->m_systemDateCurrentDayParameter;
}
bool acs::generated::shadow::HMI::CSystemDate::DateTypeValue( acs::generated::shadow::HMI::CSystemDate::TDateType value )
{
    return m_pInstance->m_systemDateDateTypeParameter.Value( value );
}
acs::generated::shadow::HMI::CSystemDate::TDateType acs::generated::shadow::HMI::CSystemDate::DateTypeValue() const
{
	return (acs::generated::shadow::HMI::CSystemDate::TDateType)m_pInstance->m_systemDateDateTypeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CSystemDate::DateTypeDataType()
{
    return m_pInstance->m_systemDateDateTypeParameter;
}



acs::generated::shadow::HMI::CModeStatus::CModeStatus(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CModeStatus::~CModeStatus(void)
{
}
void acs::generated::shadow::HMI::CModeStatus::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_modeStatusFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CModeStatus::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_modeStatusFunction.RemoveListener( pListener );
}
CModeStatusCustomClass& acs::generated::shadow::HMI::CModeStatus::FunctionInstance(void)
{
	return m_pInstance->m_modeStatusFunction;
}
bool acs::generated::shadow::HMI::CModeStatus::Value( uint8_t index, acs::generated::shadow::HMI::CModeStatus::TData value )
{
    return m_pInstance->m_modeStatusDataParameter[ index ].Value( value );
}
acs::generated::shadow::HMI::CModeStatus::TData acs::generated::shadow::HMI::CModeStatus::Value( uint8_t index ) const
{
    return (acs::generated::shadow::HMI::CModeStatus::TData)m_pInstance->m_modeStatusDataParameter[ index ].Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CModeStatus::DataTypeElement( uint8_t index )
{
    return m_pInstance->m_modeStatusDataParameter[ index ];
}
bool acs::generated::shadow::HMI::CModeStatus::Set( uint8_t index, acs::generated::shadow::HMI::CModeStatus::TData value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_modeStatusFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_modeStatusDataParameter[ index ].Value( value ) &&
      m_pInstance->m_modeStatusFunction.Set( index + 1, 0 );
}
bool acs::generated::shadow::HMI::CModeStatus::SetGet( uint8_t index, acs::generated::shadow::HMI::CModeStatus::TData value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_modeStatusFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_modeStatusDataParameter[ index ].Value( value ) &&
      m_pInstance->m_modeStatusFunction.SetGet( index + 1, 0 );
}
uint32_t acs::generated::shadow::HMI::CModeStatus::Size() const
{
    return m_pInstance->m_modeStatusFunction.Array().Size();
}
bool acs::generated::shadow::HMI::CModeStatus::Size( uint32_t newSize )
{
    return m_pInstance->m_modeStatusFunction.Array().Size( newSize );
}
::k2l::acs::protocols::most::CMOSTArray& acs::generated::shadow::HMI::CModeStatus::DataType( uint8_t index )
{
    return m_pInstance->m_modeStatusFunction.Array();
}
bool acs::generated::shadow::HMI::CModeStatus::Get()
{
    return m_pInstance->m_modeStatusFunction.Get();
}
bool acs::generated::shadow::HMI::CModeStatus::Get( uint8_t index )
{
    if( index >= 255 )
    {      
      m_pInstance->m_modeStatusFunction.FireOnError();
      return false;
    }
    return m_pInstance->m_modeStatusFunction.Get( index + 1 );
}
bool acs::generated::shadow::HMI::CModeStatus::Set()
{
    return m_pInstance->m_modeStatusFunction.Set();
}
bool acs::generated::shadow::HMI::CModeStatus::SetGet()
{
    return m_pInstance->m_modeStatusFunction.SetGet();
}



acs::generated::shadow::HMI::CSystemVisibility::CSystemVisibility(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemVisibility::~CSystemVisibility(void)
{
}
void acs::generated::shadow::HMI::CSystemVisibility::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemVisibilityFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemVisibility::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemVisibilityFunction.RemoveListener( pListener );
}
CSystemVisibilityCustomClass& acs::generated::shadow::HMI::CSystemVisibility::FunctionInstance(void)
{
	return m_pInstance->m_systemVisibilityFunction;
}
bool acs::generated::shadow::HMI::CSystemVisibility::Value( uint8_t index, acs::generated::shadow::HMI::CSystemVisibility::TData value )
{
    return m_pInstance->m_systemVisibilityDataParameter[ index ].Value( value );
}
acs::generated::shadow::HMI::CSystemVisibility::TData acs::generated::shadow::HMI::CSystemVisibility::Value( uint8_t index ) const
{
    return (acs::generated::shadow::HMI::CSystemVisibility::TData)m_pInstance->m_systemVisibilityDataParameter[ index ].Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CSystemVisibility::DataTypeElement( uint8_t index )
{
    return m_pInstance->m_systemVisibilityDataParameter[ index ];
}
bool acs::generated::shadow::HMI::CSystemVisibility::Set( uint8_t index, acs::generated::shadow::HMI::CSystemVisibility::TData value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_systemVisibilityFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_systemVisibilityDataParameter[ index ].Value( value ) &&
      m_pInstance->m_systemVisibilityFunction.Set( index + 1, 0 );
}
bool acs::generated::shadow::HMI::CSystemVisibility::SetGet( uint8_t index, acs::generated::shadow::HMI::CSystemVisibility::TData value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_systemVisibilityFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_systemVisibilityDataParameter[ index ].Value( value ) &&
      m_pInstance->m_systemVisibilityFunction.SetGet( index + 1, 0 );
}
uint32_t acs::generated::shadow::HMI::CSystemVisibility::Size() const
{
    return m_pInstance->m_systemVisibilityFunction.Array().Size();
}
bool acs::generated::shadow::HMI::CSystemVisibility::Size( uint32_t newSize )
{
    return m_pInstance->m_systemVisibilityFunction.Array().Size( newSize );
}
::k2l::acs::protocols::most::CMOSTArray& acs::generated::shadow::HMI::CSystemVisibility::DataType( uint8_t index )
{
    return m_pInstance->m_systemVisibilityFunction.Array();
}
bool acs::generated::shadow::HMI::CSystemVisibility::Get()
{
    return m_pInstance->m_systemVisibilityFunction.Get();
}
bool acs::generated::shadow::HMI::CSystemVisibility::Get( uint8_t index )
{
    if( index >= 255 )
    {      
      m_pInstance->m_systemVisibilityFunction.FireOnError();
      return false;
    }
    return m_pInstance->m_systemVisibilityFunction.Get( index + 1 );
}
bool acs::generated::shadow::HMI::CSystemVisibility::Set()
{
    return m_pInstance->m_systemVisibilityFunction.Set();
}
bool acs::generated::shadow::HMI::CSystemVisibility::SetGet()
{
    return m_pInstance->m_systemVisibilityFunction.SetGet();
}



acs::generated::shadow::HMI::CSystemAudibility::CSystemAudibility(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemAudibility::~CSystemAudibility(void)
{
}
void acs::generated::shadow::HMI::CSystemAudibility::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemAudibilityFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemAudibility::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemAudibilityFunction.RemoveListener( pListener );
}
CSystemAudibilityCustomClass& acs::generated::shadow::HMI::CSystemAudibility::FunctionInstance(void)
{
	return m_pInstance->m_systemAudibilityFunction;
}
bool acs::generated::shadow::HMI::CSystemAudibility::Value( uint8_t index, acs::generated::shadow::HMI::CSystemAudibility::TData value )
{
    return m_pInstance->m_systemAudibilityDataParameter[ index ].Value( value );
}
acs::generated::shadow::HMI::CSystemAudibility::TData acs::generated::shadow::HMI::CSystemAudibility::Value( uint8_t index ) const
{
    return (acs::generated::shadow::HMI::CSystemAudibility::TData)m_pInstance->m_systemAudibilityDataParameter[ index ].Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CSystemAudibility::DataTypeElement( uint8_t index )
{
    return m_pInstance->m_systemAudibilityDataParameter[ index ];
}
bool acs::generated::shadow::HMI::CSystemAudibility::Set( uint8_t index, acs::generated::shadow::HMI::CSystemAudibility::TData value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_systemAudibilityFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_systemAudibilityDataParameter[ index ].Value( value ) &&
      m_pInstance->m_systemAudibilityFunction.Set( index + 1, 0 );
}
bool acs::generated::shadow::HMI::CSystemAudibility::SetGet( uint8_t index, acs::generated::shadow::HMI::CSystemAudibility::TData value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_systemAudibilityFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_systemAudibilityDataParameter[ index ].Value( value ) &&
      m_pInstance->m_systemAudibilityFunction.SetGet( index + 1, 0 );
}
uint32_t acs::generated::shadow::HMI::CSystemAudibility::Size() const
{
    return m_pInstance->m_systemAudibilityFunction.Array().Size();
}
bool acs::generated::shadow::HMI::CSystemAudibility::Size( uint32_t newSize )
{
    return m_pInstance->m_systemAudibilityFunction.Array().Size( newSize );
}
::k2l::acs::protocols::most::CMOSTArray& acs::generated::shadow::HMI::CSystemAudibility::DataType( uint8_t index )
{
    return m_pInstance->m_systemAudibilityFunction.Array();
}
bool acs::generated::shadow::HMI::CSystemAudibility::Get()
{
    return m_pInstance->m_systemAudibilityFunction.Get();
}
bool acs::generated::shadow::HMI::CSystemAudibility::Get( uint8_t index )
{
    if( index >= 255 )
    {      
      m_pInstance->m_systemAudibilityFunction.FireOnError();
      return false;
    }
    return m_pInstance->m_systemAudibilityFunction.Get( index + 1 );
}
bool acs::generated::shadow::HMI::CSystemAudibility::Set()
{
    return m_pInstance->m_systemAudibilityFunction.Set();
}
bool acs::generated::shadow::HMI::CSystemAudibility::SetGet()
{
    return m_pInstance->m_systemAudibilityFunction.SetGet();
}



acs::generated::shadow::HMI::CAdjustScreen::CAdjustScreen(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CAdjustScreen::~CAdjustScreen(void)
{
}
void acs::generated::shadow::HMI::CAdjustScreen::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_adjustScreenFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CAdjustScreen::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_adjustScreenFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassRecord& acs::generated::shadow::HMI::CAdjustScreen::FunctionInstance(void)
{
	return m_pInstance->m_adjustScreenFunction;
}
bool acs::generated::shadow::HMI::CAdjustScreen::DataBrightnessValue( int8_t value )
{
    return m_pInstance->m_adjustScreenDataBrightnessParameter.Value( value );
}
int8_t acs::generated::shadow::HMI::CAdjustScreen::DataBrightnessValue() const
{
    return m_pInstance->m_adjustScreenDataBrightnessParameter.Value();
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetDataBrightness( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataBrightnessParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.Set( 1 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetGetDataBrightness( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataBrightnessParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.SetGet( 1 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::GetDataBrightness()
{
    return m_pInstance->m_adjustScreenFunction.Get( 1 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::DataSaturationValue( int8_t value )
{
    return m_pInstance->m_adjustScreenDataSaturationParameter.Value( value );
}
int8_t acs::generated::shadow::HMI::CAdjustScreen::DataSaturationValue() const
{
    return m_pInstance->m_adjustScreenDataSaturationParameter.Value();
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetDataSaturation( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataSaturationParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.Set( 2 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetGetDataSaturation( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataSaturationParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.SetGet( 2 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::GetDataSaturation()
{
    return m_pInstance->m_adjustScreenFunction.Get( 2 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::DataContrastValue( int8_t value )
{
    return m_pInstance->m_adjustScreenDataContrastParameter.Value( value );
}
int8_t acs::generated::shadow::HMI::CAdjustScreen::DataContrastValue() const
{
    return m_pInstance->m_adjustScreenDataContrastParameter.Value();
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetDataContrast( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataContrastParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.Set( 3 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetGetDataContrast( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataContrastParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.SetGet( 3 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::GetDataContrast()
{
    return m_pInstance->m_adjustScreenFunction.Get( 3 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::DataHueValue( int8_t value )
{
    return m_pInstance->m_adjustScreenDataHueParameter.Value( value );
}
int8_t acs::generated::shadow::HMI::CAdjustScreen::DataHueValue() const
{
    return m_pInstance->m_adjustScreenDataHueParameter.Value();
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetDataHue( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataHueParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.Set( 4 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetGetDataHue( int8_t value )
{
    return 
      m_pInstance->m_adjustScreenDataHueParameter.Value( value ) &&
      m_pInstance->m_adjustScreenFunction.SetGet( 4 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::GetDataHue()
{
    return m_pInstance->m_adjustScreenFunction.Get( 4 );
}
bool acs::generated::shadow::HMI::CAdjustScreen::Set()
{
    return m_pInstance->m_adjustScreenFunction.Set();
}
bool acs::generated::shadow::HMI::CAdjustScreen::SetGet()
{
    return m_pInstance->m_adjustScreenFunction.SetGet();
}



acs::generated::shadow::HMI::CLCDBrightness::CLCDBrightness(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CLCDBrightness::~CLCDBrightness(void)
{
}
void acs::generated::shadow::HMI::CLCDBrightness::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_lCDBrightnessFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CLCDBrightness::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_lCDBrightnessFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassArray& acs::generated::shadow::HMI::CLCDBrightness::FunctionInstance(void)
{
	return m_pInstance->m_lCDBrightnessFunction;
}
bool acs::generated::shadow::HMI::CLCDBrightness::Value( uint8_t index, int8_t value )
{
    return m_pInstance->m_lCDBrightnessDataParameter[ index ].Value( value );
}
int8_t acs::generated::shadow::HMI::CLCDBrightness::Value( uint8_t index ) const
{
    return m_pInstance->m_lCDBrightnessDataParameter[ index ].Value();
}
::k2l::acs::protocols::most::CMOSTSignedByte& acs::generated::shadow::HMI::CLCDBrightness::DataTypeElement( uint8_t index )
{
    return m_pInstance->m_lCDBrightnessDataParameter[ index ];
}
bool acs::generated::shadow::HMI::CLCDBrightness::Set( uint8_t index, int8_t value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_lCDBrightnessFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_lCDBrightnessDataParameter[ index ].Value( value ) &&
      m_pInstance->m_lCDBrightnessFunction.Set( index + 1, 0 );
}
bool acs::generated::shadow::HMI::CLCDBrightness::SetGet( uint8_t index, int8_t value )
{
    if( index >= 255 )
    {      
      m_pInstance->m_lCDBrightnessFunction.FireOnError();
      return false;
    }
    return
      m_pInstance->m_lCDBrightnessDataParameter[ index ].Value( value ) &&
      m_pInstance->m_lCDBrightnessFunction.SetGet( index + 1, 0 );
}
uint32_t acs::generated::shadow::HMI::CLCDBrightness::Size() const
{
    return m_pInstance->m_lCDBrightnessFunction.Array().Size();
}
bool acs::generated::shadow::HMI::CLCDBrightness::Size( uint32_t newSize )
{
    return m_pInstance->m_lCDBrightnessFunction.Array().Size( newSize );
}
::k2l::acs::protocols::most::CMOSTArray& acs::generated::shadow::HMI::CLCDBrightness::DataType( uint8_t index )
{
    return m_pInstance->m_lCDBrightnessFunction.Array();
}
bool acs::generated::shadow::HMI::CLCDBrightness::Get()
{
    return m_pInstance->m_lCDBrightnessFunction.Get();
}
bool acs::generated::shadow::HMI::CLCDBrightness::Get( uint8_t index )
{
    if( index >= 255 )
    {      
      m_pInstance->m_lCDBrightnessFunction.FireOnError();
      return false;
    }
    return m_pInstance->m_lCDBrightnessFunction.Get( index + 1 );
}
bool acs::generated::shadow::HMI::CLCDBrightness::Set()
{
    return m_pInstance->m_lCDBrightnessFunction.Set();
}
bool acs::generated::shadow::HMI::CLCDBrightness::SetGet()
{
    return m_pInstance->m_lCDBrightnessFunction.SetGet();
}



acs::generated::shadow::HMI::CIlluminationSetting::CIlluminationSetting(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CIlluminationSetting::~CIlluminationSetting(void)
{
}
void acs::generated::shadow::HMI::CIlluminationSetting::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_illuminationSettingFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CIlluminationSetting::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_illuminationSettingFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CIlluminationSetting::FunctionInstance(void)
{
	return m_pInstance->m_illuminationSettingFunction;
}
bool acs::generated::shadow::HMI::CIlluminationSetting::Get(  )
{
   return m_pInstance->m_illuminationSettingFunction.Get();
}
bool acs::generated::shadow::HMI::CIlluminationSetting::IlluminationValue( acs::generated::shadow::HMI::CIlluminationSetting::TIllumination value )
{
    return m_pInstance->m_illuminationSettingIlluminationParameter.Value( value );
}
acs::generated::shadow::HMI::CIlluminationSetting::TIllumination acs::generated::shadow::HMI::CIlluminationSetting::IlluminationValue() const
{
	return (acs::generated::shadow::HMI::CIlluminationSetting::TIllumination)m_pInstance->m_illuminationSettingIlluminationParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CIlluminationSetting::IlluminationDataType()
{
    return m_pInstance->m_illuminationSettingIlluminationParameter;
}
bool acs::generated::shadow::HMI::CIlluminationSetting::Set(  )
{
   return m_pInstance->m_illuminationSettingFunction.Set();
}
bool acs::generated::shadow::HMI::CIlluminationSetting::SetGet(  )
{
   return m_pInstance->m_illuminationSettingFunction.SetGet();
}



acs::generated::shadow::HMI::CVideoRatio::CVideoRatio(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CVideoRatio::~CVideoRatio(void)
{
}
void acs::generated::shadow::HMI::CVideoRatio::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_videoRatioFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CVideoRatio::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_videoRatioFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CVideoRatio::FunctionInstance(void)
{
	return m_pInstance->m_videoRatioFunction;
}
bool acs::generated::shadow::HMI::CVideoRatio::Get(  )
{
   return m_pInstance->m_videoRatioFunction.Get();
}
bool acs::generated::shadow::HMI::CVideoRatio::RatioValue( acs::generated::shadow::HMI::CVideoRatio::TRatio value )
{
    return m_pInstance->m_videoRatioRatioParameter.Value( value );
}
acs::generated::shadow::HMI::CVideoRatio::TRatio acs::generated::shadow::HMI::CVideoRatio::RatioValue() const
{
	return (acs::generated::shadow::HMI::CVideoRatio::TRatio)m_pInstance->m_videoRatioRatioParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CVideoRatio::RatioDataType()
{
    return m_pInstance->m_videoRatioRatioParameter;
}
bool acs::generated::shadow::HMI::CVideoRatio::Set(  )
{
   return m_pInstance->m_videoRatioFunction.Set();
}
bool acs::generated::shadow::HMI::CVideoRatio::SetGet(  )
{
   return m_pInstance->m_videoRatioFunction.SetGet();
}



acs::generated::shadow::HMI::CKeyBoard::CKeyBoard(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CKeyBoard::~CKeyBoard(void)
{
}
void acs::generated::shadow::HMI::CKeyBoard::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_keyBoardFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CKeyBoard::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_keyBoardFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CKeyBoard::FunctionInstance(void)
{
	return m_pInstance->m_keyBoardFunction;
}
bool acs::generated::shadow::HMI::CKeyBoard::Get(  )
{
   return m_pInstance->m_keyBoardFunction.Get();
}
bool acs::generated::shadow::HMI::CKeyBoard::KeyBoardSettingValue( uint32_t mask, uint32_t value )
{
    return m_pInstance->m_keyBoardKeyBoardSettingParameter.Value( mask, value );
}
uint32_t acs::generated::shadow::HMI::CKeyBoard::KeyBoardSettingValue() const
{
	return m_pInstance->m_keyBoardKeyBoardSettingParameter.Value();
}
::k2l::acs::protocols::most::CMOSTBitFieldShadow30& acs::generated::shadow::HMI::CKeyBoard::KeyBoardSettingDataType()
{
    return m_pInstance->m_keyBoardKeyBoardSettingParameter;
}
bool acs::generated::shadow::HMI::CKeyBoard::KoreanValue( acs::generated::shadow::HMI::CKeyBoard::TKorean value )
{
    return m_pInstance->m_keyBoardKoreanParameter.Value( value );
}
acs::generated::shadow::HMI::CKeyBoard::TKorean acs::generated::shadow::HMI::CKeyBoard::KoreanValue() const
{
	return (acs::generated::shadow::HMI::CKeyBoard::TKorean)m_pInstance->m_keyBoardKoreanParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CKeyBoard::KoreanDataType()
{
    return m_pInstance->m_keyBoardKoreanParameter;
}
bool acs::generated::shadow::HMI::CKeyBoard::English_USValue( acs::generated::shadow::HMI::CKeyBoard::TEnglish_US value )
{
    return m_pInstance->m_keyBoardEnglish_USParameter.Value( value );
}
acs::generated::shadow::HMI::CKeyBoard::TEnglish_US acs::generated::shadow::HMI::CKeyBoard::English_USValue() const
{
	return (acs::generated::shadow::HMI::CKeyBoard::TEnglish_US)m_pInstance->m_keyBoardEnglish_USParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CKeyBoard::English_USDataType()
{
    return m_pInstance->m_keyBoardEnglish_USParameter;
}
bool acs::generated::shadow::HMI::CKeyBoard::English_EUValue( acs::generated::shadow::HMI::CKeyBoard::TEnglish_EU value )
{
    return m_pInstance->m_keyBoardEnglish_EUParameter.Value( value );
}
acs::generated::shadow::HMI::CKeyBoard::TEnglish_EU acs::generated::shadow::HMI::CKeyBoard::English_EUValue() const
{
	return (acs::generated::shadow::HMI::CKeyBoard::TEnglish_EU)m_pInstance->m_keyBoardEnglish_EUParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CKeyBoard::English_EUDataType()
{
    return m_pInstance->m_keyBoardEnglish_EUParameter;
}
bool acs::generated::shadow::HMI::CKeyBoard::ChineseValue( acs::generated::shadow::HMI::CKeyBoard::TChinese value )
{
    return m_pInstance->m_keyBoardChineseParameter.Value( value );
}
acs::generated::shadow::HMI::CKeyBoard::TChinese acs::generated::shadow::HMI::CKeyBoard::ChineseValue() const
{
	return (acs::generated::shadow::HMI::CKeyBoard::TChinese)m_pInstance->m_keyBoardChineseParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CKeyBoard::ChineseDataType()
{
    return m_pInstance->m_keyBoardChineseParameter;
}
bool acs::generated::shadow::HMI::CKeyBoard::Set(  )
{
   return m_pInstance->m_keyBoardFunction.Set();
}
bool acs::generated::shadow::HMI::CKeyBoard::SetGet(  )
{
   return m_pInstance->m_keyBoardFunction.SetGet();
}



acs::generated::shadow::HMI::CPopUpRequest::CPopUpRequest(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CPopUpRequest::~CPopUpRequest(void)
{
}
void acs::generated::shadow::HMI::CPopUpRequest::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_popUpRequestFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CPopUpRequest::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_popUpRequestFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& acs::generated::shadow::HMI::CPopUpRequest::FunctionInstance(void)
{
	return m_pInstance->m_popUpRequestFunction;
}
bool acs::generated::shadow::HMI::CPopUpRequest::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_popUpRequestSenderHandleParameter.Value( value );
}
uint16_t acs::generated::shadow::HMI::CPopUpRequest::SenderHandleValue() const
{
	return m_pInstance->m_popUpRequestSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::HMI::CPopUpRequest::SenderHandleDataType()
{
    return m_pInstance->m_popUpRequestSenderHandleParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::TargetValue( acs::generated::shadow::HMI::CPopUpRequest::TTarget value )
{
    return m_pInstance->m_popUpRequestTargetParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TTarget acs::generated::shadow::HMI::CPopUpRequest::TargetValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TTarget)m_pInstance->m_popUpRequestTargetParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::TargetDataType()
{
    return m_pInstance->m_popUpRequestTargetParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::DisplayHandleValue( acs::generated::shadow::HMI::CPopUpRequest::TDisplayHandle value )
{
    return m_pInstance->m_popUpRequestDisplayHandleParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TDisplayHandle acs::generated::shadow::HMI::CPopUpRequest::DisplayHandleValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TDisplayHandle)m_pInstance->m_popUpRequestDisplayHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::DisplayHandleDataType()
{
    return m_pInstance->m_popUpRequestDisplayHandleParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::PopupSizeValue( acs::generated::shadow::HMI::CPopUpRequest::TPopupSize value )
{
    return m_pInstance->m_popUpRequestPopupSizeParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TPopupSize acs::generated::shadow::HMI::CPopUpRequest::PopupSizeValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TPopupSize)m_pInstance->m_popUpRequestPopupSizeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::PopupSizeDataType()
{
    return m_pInstance->m_popUpRequestPopupSizeParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::PopUpTypeValue( acs::generated::shadow::HMI::CPopUpRequest::TPopUpType value )
{
    return m_pInstance->m_popUpRequestPopUpTypeParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TPopUpType acs::generated::shadow::HMI::CPopUpRequest::PopUpTypeValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TPopUpType)m_pInstance->m_popUpRequestPopUpTypeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::PopUpTypeDataType()
{
    return m_pInstance->m_popUpRequestPopUpTypeParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::TitleNoValue( uint8_t value )
{
    return m_pInstance->m_popUpRequestTitleNoParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CPopUpRequest::TitleNoValue() const
{
	return m_pInstance->m_popUpRequestTitleNoParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CPopUpRequest::TitleNoDataType()
{
    return m_pInstance->m_popUpRequestTitleNoParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::ListNoValue( uint8_t value )
{
    return m_pInstance->m_popUpRequestListNoParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CPopUpRequest::ListNoValue() const
{
	return m_pInstance->m_popUpRequestListNoParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CPopUpRequest::ListNoDataType()
{
    return m_pInstance->m_popUpRequestListNoParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::TextLineNoValue( uint8_t value )
{
    return m_pInstance->m_popUpRequestTextLineNoParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CPopUpRequest::TextLineNoValue() const
{
	return m_pInstance->m_popUpRequestTextLineNoParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CPopUpRequest::TextLineNoDataType()
{
    return m_pInstance->m_popUpRequestTextLineNoParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::IconIDValue( acs::generated::shadow::HMI::CPopUpRequest::TIconID value )
{
    return m_pInstance->m_popUpRequestIconIDParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TIconID acs::generated::shadow::HMI::CPopUpRequest::IconIDValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TIconID)m_pInstance->m_popUpRequestIconIDParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::IconIDDataType()
{
    return m_pInstance->m_popUpRequestIconIDParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::IconPositionValue( acs::generated::shadow::HMI::CPopUpRequest::TIconPosition value )
{
    return m_pInstance->m_popUpRequestIconPositionParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TIconPosition acs::generated::shadow::HMI::CPopUpRequest::IconPositionValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TIconPosition)m_pInstance->m_popUpRequestIconPositionParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::IconPositionDataType()
{
    return m_pInstance->m_popUpRequestIconPositionParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::Button1Value( acs::generated::shadow::HMI::CPopUpRequest::TButton1 value )
{
    return m_pInstance->m_popUpRequestButton1Parameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TButton1 acs::generated::shadow::HMI::CPopUpRequest::Button1Value() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TButton1)m_pInstance->m_popUpRequestButton1Parameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::Button1DataType()
{
    return m_pInstance->m_popUpRequestButton1Parameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::Button2Value( acs::generated::shadow::HMI::CPopUpRequest::TButton2 value )
{
    return m_pInstance->m_popUpRequestButton2Parameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TButton2 acs::generated::shadow::HMI::CPopUpRequest::Button2Value() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TButton2)m_pInstance->m_popUpRequestButton2Parameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::Button2DataType()
{
    return m_pInstance->m_popUpRequestButton2Parameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::Button3Value( acs::generated::shadow::HMI::CPopUpRequest::TButton3 value )
{
    return m_pInstance->m_popUpRequestButton3Parameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TButton3 acs::generated::shadow::HMI::CPopUpRequest::Button3Value() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TButton3)m_pInstance->m_popUpRequestButton3Parameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::Button3DataType()
{
    return m_pInstance->m_popUpRequestButton3Parameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::Button4Value( acs::generated::shadow::HMI::CPopUpRequest::TButton4 value )
{
    return m_pInstance->m_popUpRequestButton4Parameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TButton4 acs::generated::shadow::HMI::CPopUpRequest::Button4Value() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TButton4)m_pInstance->m_popUpRequestButton4Parameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::Button4DataType()
{
    return m_pInstance->m_popUpRequestButton4Parameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::PopUpDataValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_popUpRequestPopUpDataParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CPopUpRequest::PopUpDataValue() const
{
	return m_pInstance->m_popUpRequestPopUpDataParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CPopUpRequest::PopUpDataDataType()
{
    return m_pInstance->m_popUpRequestPopUpDataParameter;
}
uint32_t acs::generated::shadow::HMI::CPopUpRequest::PopUpDataLength() const
{
	return m_pInstance->m_popUpRequestPopUpDataParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CPopUpRequest::PopUpDataAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_popUpRequestPopUpDataParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CPopUpRequest::PopUpDataString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_popUpRequestPopUpDataParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CPopUpRequest::PopUpDataString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_popUpRequestPopUpDataParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CPopUpRequest::OsdTextValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_popUpRequestOsdTextParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CPopUpRequest::OsdTextValue() const
{
	return m_pInstance->m_popUpRequestOsdTextParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CPopUpRequest::OsdTextDataType()
{
    return m_pInstance->m_popUpRequestOsdTextParameter;
}
uint32_t acs::generated::shadow::HMI::CPopUpRequest::OsdTextLength() const
{
	return m_pInstance->m_popUpRequestOsdTextParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CPopUpRequest::OsdTextAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_popUpRequestOsdTextParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CPopUpRequest::OsdTextString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_popUpRequestOsdTextParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CPopUpRequest::OsdTextString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_popUpRequestOsdTextParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CPopUpRequest::StartResultAck( )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[16] = { &(m_pInstance->m_popUpRequestSenderHandleParameter), 
&(m_pInstance->m_popUpRequestTargetParameter), 
&(m_pInstance->m_popUpRequestDisplayHandleParameter), 
&(m_pInstance->m_popUpRequestPopupSizeParameter), 
&(m_pInstance->m_popUpRequestPopUpTypeParameter), 
&(m_pInstance->m_popUpRequestTitleNoParameter), 
&(m_pInstance->m_popUpRequestListNoParameter), 
&(m_pInstance->m_popUpRequestTextLineNoParameter), 
&(m_pInstance->m_popUpRequestIconIDParameter), 
&(m_pInstance->m_popUpRequestIconPositionParameter), 
&(m_pInstance->m_popUpRequestButton1Parameter), 
&(m_pInstance->m_popUpRequestButton2Parameter), 
&(m_pInstance->m_popUpRequestButton3Parameter), 
&(m_pInstance->m_popUpRequestButton4Parameter), 
&(m_pInstance->m_popUpRequestPopUpDataParameter), 
&(m_pInstance->m_popUpRequestOsdTextParameter) };
    return m_pInstance->m_popUpRequestFunction.StartResultAck( 16, parameters );
}
bool acs::generated::shadow::HMI::CPopUpRequest::ReactionButtonValue( acs::generated::shadow::HMI::CPopUpRequest::TReactionButton value )
{
    return m_pInstance->m_popUpRequestReactionButtonParameter.Value( value );
}
acs::generated::shadow::HMI::CPopUpRequest::TReactionButton acs::generated::shadow::HMI::CPopUpRequest::ReactionButtonValue() const
{
	return (acs::generated::shadow::HMI::CPopUpRequest::TReactionButton)m_pInstance->m_popUpRequestReactionButtonParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPopUpRequest::ReactionButtonDataType()
{
    return m_pInstance->m_popUpRequestReactionButtonParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::ReactionListValue( uint8_t value )
{
    return m_pInstance->m_popUpRequestReactionListParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CPopUpRequest::ReactionListValue() const
{
	return m_pInstance->m_popUpRequestReactionListParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CPopUpRequest::ReactionListDataType()
{
    return m_pInstance->m_popUpRequestReactionListParameter;
}
bool acs::generated::shadow::HMI::CPopUpRequest::ReactionTextValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_popUpRequestReactionTextParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CPopUpRequest::ReactionTextValue() const
{
	return m_pInstance->m_popUpRequestReactionTextParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CPopUpRequest::ReactionTextDataType()
{
    return m_pInstance->m_popUpRequestReactionTextParameter;
}
uint32_t acs::generated::shadow::HMI::CPopUpRequest::ReactionTextLength() const
{
	return m_pInstance->m_popUpRequestReactionTextParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CPopUpRequest::ReactionTextAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_popUpRequestReactionTextParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CPopUpRequest::ReactionTextString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_popUpRequestReactionTextParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CPopUpRequest::ReactionTextString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_popUpRequestReactionTextParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CPopUpRequest::ParseResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[6] = { &(m_pInstance->m_popUpRequestSenderHandleParameter), 
&(m_pInstance->m_popUpRequestTargetParameter), 
&(m_pInstance->m_popUpRequestDisplayHandleParameter), 
&(m_pInstance->m_popUpRequestReactionButtonParameter), 
&(m_pInstance->m_popUpRequestReactionListParameter), 
&(m_pInstance->m_popUpRequestReactionTextParameter) };
    return m_pInstance->m_popUpRequestFunction.ParsePayload( payloadLength, payload, 6, parameters );
}
bool acs::generated::shadow::HMI::CPopUpRequest::AbortAck( uint16_t senderHandle )
{
    return m_pInstance->m_popUpRequestFunction.AbortAck( senderHandle );
}
void acs::generated::shadow::HMI::CPopUpRequest::SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler )
{
    m_pInstance->m_popUpRequestFunction.SetHandler( pHandler );
}
bool acs::generated::shadow::HMI::CPopUpRequest::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_popUpRequestFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}



acs::generated::shadow::HMI::CPopUpProgressBar::CPopUpProgressBar(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CPopUpProgressBar::~CPopUpProgressBar(void)
{
}
void acs::generated::shadow::HMI::CPopUpProgressBar::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_popUpProgressBarFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CPopUpProgressBar::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_popUpProgressBarFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CPopUpProgressBar::FunctionInstance(void)
{
	return m_pInstance->m_popUpProgressBarFunction;
}
bool acs::generated::shadow::HMI::CPopUpProgressBar::Get(  )
{
   return m_pInstance->m_popUpProgressBarFunction.Get();
}
bool acs::generated::shadow::HMI::CPopUpProgressBar::ProgressValue( uint8_t value )
{
    return m_pInstance->m_popUpProgressBarProgressParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CPopUpProgressBar::ProgressValue() const
{
	return m_pInstance->m_popUpProgressBarProgressParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CPopUpProgressBar::ProgressDataType()
{
    return m_pInstance->m_popUpProgressBarProgressParameter;
}



acs::generated::shadow::HMI::CDisplayControl::CDisplayControl(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CDisplayControl::~CDisplayControl(void)
{
}
void acs::generated::shadow::HMI::CDisplayControl::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_displayControlFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CDisplayControl::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_displayControlFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassBitSet& acs::generated::shadow::HMI::CDisplayControl::FunctionInstance(void)
{
	return m_pInstance->m_displayControlFunction;
}
uint32_t acs::generated::shadow::HMI::CDisplayControl::Value() const
{
    return m_pInstance->m_displayControlFunction.Value();
}
bool acs::generated::shadow::HMI::CDisplayControl::Set( uint32_t mask, uint32_t value )
{
    return  
      m_pInstance->m_displayControlFunction.Value( mask, value ) &&
      m_pInstance->m_displayControlFunction.Set();
}
bool acs::generated::shadow::HMI::CDisplayControl::SetGet( uint32_t mask, uint32_t value )
{
    return  
      m_pInstance->m_displayControlFunction.Value( mask, value ) &&
      m_pInstance->m_displayControlFunction.SetGet();
}
bool acs::generated::shadow::HMI::CDisplayControl::Get()
{
    return m_pInstance->m_displayControlFunction.Get();
}



acs::generated::shadow::HMI::CDisplayOSD::CDisplayOSD(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CDisplayOSD::~CDisplayOSD(void)
{
}
void acs::generated::shadow::HMI::CDisplayOSD::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_displayOSDFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CDisplayOSD::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_displayOSDFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CDisplayOSD::FunctionInstance(void)
{
	return m_pInstance->m_displayOSDFunction;
}
bool acs::generated::shadow::HMI::CDisplayOSD::TargetValue( acs::generated::shadow::HMI::CDisplayOSD::TTarget value )
{
    return m_pInstance->m_displayOSDTargetParameter.Value( value );
}
acs::generated::shadow::HMI::CDisplayOSD::TTarget acs::generated::shadow::HMI::CDisplayOSD::TargetValue() const
{
	return (acs::generated::shadow::HMI::CDisplayOSD::TTarget)m_pInstance->m_displayOSDTargetParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CDisplayOSD::TargetDataType()
{
    return m_pInstance->m_displayOSDTargetParameter;
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdIdValue( uint8_t value )
{
    return m_pInstance->m_displayOSDOsdIdParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CDisplayOSD::OsdIdValue() const
{
	return m_pInstance->m_displayOSDOsdIdParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CDisplayOSD::OsdIdDataType()
{
    return m_pInstance->m_displayOSDOsdIdParameter;
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdControlValue( acs::generated::shadow::HMI::CDisplayOSD::TOsdControl value )
{
    return m_pInstance->m_displayOSDOsdControlParameter.Value( value );
}
acs::generated::shadow::HMI::CDisplayOSD::TOsdControl acs::generated::shadow::HMI::CDisplayOSD::OsdControlValue() const
{
	return (acs::generated::shadow::HMI::CDisplayOSD::TOsdControl)m_pInstance->m_displayOSDOsdControlParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CDisplayOSD::OsdControlDataType()
{
    return m_pInstance->m_displayOSDOsdControlParameter;
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdModeValue( acs::generated::shadow::HMI::CDisplayOSD::TOsdMode value )
{
    return m_pInstance->m_displayOSDOsdModeParameter.Value( value );
}
acs::generated::shadow::HMI::CDisplayOSD::TOsdMode acs::generated::shadow::HMI::CDisplayOSD::OsdModeValue() const
{
	return (acs::generated::shadow::HMI::CDisplayOSD::TOsdMode)m_pInstance->m_displayOSDOsdModeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CDisplayOSD::OsdModeDataType()
{
    return m_pInstance->m_displayOSDOsdModeParameter;
}
bool acs::generated::shadow::HMI::CDisplayOSD::TextColorValue( acs::generated::shadow::HMI::CDisplayOSD::TTextColor value )
{
    return m_pInstance->m_displayOSDTextColorParameter.Value( value );
}
acs::generated::shadow::HMI::CDisplayOSD::TTextColor acs::generated::shadow::HMI::CDisplayOSD::TextColorValue() const
{
	return (acs::generated::shadow::HMI::CDisplayOSD::TTextColor)m_pInstance->m_displayOSDTextColorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CDisplayOSD::TextColorDataType()
{
    return m_pInstance->m_displayOSDTextColorParameter;
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdTextValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_displayOSDOsdTextParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::HMI::CDisplayOSD::OsdTextValue() const
{
	return m_pInstance->m_displayOSDOsdTextParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::HMI::CDisplayOSD::OsdTextDataType()
{
    return m_pInstance->m_displayOSDOsdTextParameter;
}
uint32_t acs::generated::shadow::HMI::CDisplayOSD::OsdTextLength() const
{
	return m_pInstance->m_displayOSDOsdTextParameter.MOSTStringLength();
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdTextAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_displayOSDOsdTextParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdTextString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_displayOSDOsdTextParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdTextString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_displayOSDOsdTextParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::HMI::CDisplayOSD::SetGet(  )
{
   return m_pInstance->m_displayOSDFunction.SetGet();
}
bool acs::generated::shadow::HMI::CDisplayOSD::OsdStatusValue( acs::generated::shadow::HMI::CDisplayOSD::TOsdStatus value )
{
    return m_pInstance->m_displayOSDOsdStatusParameter.Value( value );
}
acs::generated::shadow::HMI::CDisplayOSD::TOsdStatus acs::generated::shadow::HMI::CDisplayOSD::OsdStatusValue() const
{
	return (acs::generated::shadow::HMI::CDisplayOSD::TOsdStatus)m_pInstance->m_displayOSDOsdStatusParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CDisplayOSD::OsdStatusDataType()
{
    return m_pInstance->m_displayOSDOsdStatusParameter;
}



acs::generated::shadow::HMI::CVideoDefaultSet::CVideoDefaultSet(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CVideoDefaultSet::~CVideoDefaultSet(void)
{
}
void acs::generated::shadow::HMI::CVideoDefaultSet::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_videoDefaultSetFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_videoDefaultSetFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& acs::generated::shadow::HMI::CVideoDefaultSet::FunctionInstance(void)
{
	return m_pInstance->m_videoDefaultSetFunction;
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_videoDefaultSetSenderHandleParameter.Value( value );
}
uint16_t acs::generated::shadow::HMI::CVideoDefaultSet::SenderHandleValue() const
{
	return m_pInstance->m_videoDefaultSetSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::HMI::CVideoDefaultSet::SenderHandleDataType()
{
    return m_pInstance->m_videoDefaultSetSenderHandleParameter;
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::VSetTargetValue( acs::generated::shadow::HMI::CVideoDefaultSet::TVSetTarget value )
{
    return m_pInstance->m_videoDefaultSetVSetTargetParameter.Value( value );
}
acs::generated::shadow::HMI::CVideoDefaultSet::TVSetTarget acs::generated::shadow::HMI::CVideoDefaultSet::VSetTargetValue() const
{
	return (acs::generated::shadow::HMI::CVideoDefaultSet::TVSetTarget)m_pInstance->m_videoDefaultSetVSetTargetParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CVideoDefaultSet::VSetTargetDataType()
{
    return m_pInstance->m_videoDefaultSetVSetTargetParameter;
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::StartResultAck( )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_videoDefaultSetSenderHandleParameter), 
&(m_pInstance->m_videoDefaultSetVSetTargetParameter) };
    return m_pInstance->m_videoDefaultSetFunction.StartResultAck( 2, parameters );
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::ParseResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_videoDefaultSetSenderHandleParameter) };
    return m_pInstance->m_videoDefaultSetFunction.ParsePayload( payloadLength, payload, 1, parameters );
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::AbortAck( uint16_t senderHandle )
{
    return m_pInstance->m_videoDefaultSetFunction.AbortAck( senderHandle );
}
void acs::generated::shadow::HMI::CVideoDefaultSet::SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler )
{
    m_pInstance->m_videoDefaultSetFunction.SetHandler( pHandler );
}
bool acs::generated::shadow::HMI::CVideoDefaultSet::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_videoDefaultSetFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}



acs::generated::shadow::HMI::CDistanceUnit::CDistanceUnit(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CDistanceUnit::~CDistanceUnit(void)
{
}
void acs::generated::shadow::HMI::CDistanceUnit::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_distanceUnitFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CDistanceUnit::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_distanceUnitFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CDistanceUnit::FunctionInstance(void)
{
	return m_pInstance->m_distanceUnitFunction;
}
bool acs::generated::shadow::HMI::CDistanceUnit::Get(  )
{
   return m_pInstance->m_distanceUnitFunction.Get();
}
bool acs::generated::shadow::HMI::CDistanceUnit::DistanceUnitValue( acs::generated::shadow::HMI::CDistanceUnit::TDistanceUnit value )
{
    return m_pInstance->m_distanceUnitParameter.Value( value );
}
acs::generated::shadow::HMI::CDistanceUnit::TDistanceUnit acs::generated::shadow::HMI::CDistanceUnit::DistanceUnitValue() const
{
	return (acs::generated::shadow::HMI::CDistanceUnit::TDistanceUnit)m_pInstance->m_distanceUnitParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CDistanceUnit::DistanceUnitDataType()
{
    return m_pInstance->m_distanceUnitParameter;
}



acs::generated::shadow::HMI::CShowStatusBar::CShowStatusBar(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CShowStatusBar::~CShowStatusBar(void)
{
}
void acs::generated::shadow::HMI::CShowStatusBar::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_showStatusBarFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CShowStatusBar::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_showStatusBarFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CShowStatusBar::FunctionInstance(void)
{
	return m_pInstance->m_showStatusBarFunction;
}
bool acs::generated::shadow::HMI::CShowStatusBar::Get(  )
{
   return m_pInstance->m_showStatusBarFunction.Get();
}
bool acs::generated::shadow::HMI::CShowStatusBar::StatusBarValue( acs::generated::shadow::HMI::CShowStatusBar::TStatusBar value )
{
    return m_pInstance->m_showStatusBarStatusBarParameter.Value( value );
}
acs::generated::shadow::HMI::CShowStatusBar::TStatusBar acs::generated::shadow::HMI::CShowStatusBar::StatusBarValue() const
{
	return (acs::generated::shadow::HMI::CShowStatusBar::TStatusBar)m_pInstance->m_showStatusBarStatusBarParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CShowStatusBar::StatusBarDataType()
{
    return m_pInstance->m_showStatusBarStatusBarParameter;
}
bool acs::generated::shadow::HMI::CShowStatusBar::Set(  )
{
   return m_pInstance->m_showStatusBarFunction.Set();
}
bool acs::generated::shadow::HMI::CShowStatusBar::SetGet(  )
{
   return m_pInstance->m_showStatusBarFunction.SetGet();
}



acs::generated::shadow::HMI::CEmergencySet::CEmergencySet(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CEmergencySet::~CEmergencySet(void)
{
}
void acs::generated::shadow::HMI::CEmergencySet::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_emergencySetFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CEmergencySet::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_emergencySetFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CEmergencySet::FunctionInstance(void)
{
	return m_pInstance->m_emergencySetFunction;
}
bool acs::generated::shadow::HMI::CEmergencySet::Get(  )
{
   return m_pInstance->m_emergencySetFunction.Get();
}
bool acs::generated::shadow::HMI::CEmergencySet::EMGCStateValue( acs::generated::shadow::HMI::CEmergencySet::TEMGCState value )
{
    return m_pInstance->m_emergencySetEMGCStateParameter.Value( value );
}
acs::generated::shadow::HMI::CEmergencySet::TEMGCState acs::generated::shadow::HMI::CEmergencySet::EMGCStateValue() const
{
	return (acs::generated::shadow::HMI::CEmergencySet::TEMGCState)m_pInstance->m_emergencySetEMGCStateParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CEmergencySet::EMGCStateDataType()
{
    return m_pInstance->m_emergencySetEMGCStateParameter;
}
bool acs::generated::shadow::HMI::CEmergencySet::ControllerLockValue( acs::generated::shadow::HMI::CEmergencySet::TControllerLock value )
{
    return m_pInstance->m_emergencySetControllerLockParameter.Value( value );
}
acs::generated::shadow::HMI::CEmergencySet::TControllerLock acs::generated::shadow::HMI::CEmergencySet::ControllerLockValue() const
{
	return (acs::generated::shadow::HMI::CEmergencySet::TControllerLock)m_pInstance->m_emergencySetControllerLockParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CEmergencySet::ControllerLockDataType()
{
    return m_pInstance->m_emergencySetControllerLockParameter;
}
bool acs::generated::shadow::HMI::CEmergencySet::SoundLockValue( acs::generated::shadow::HMI::CEmergencySet::TSoundLock value )
{
    return m_pInstance->m_emergencySetSoundLockParameter.Value( value );
}
acs::generated::shadow::HMI::CEmergencySet::TSoundLock acs::generated::shadow::HMI::CEmergencySet::SoundLockValue() const
{
	return (acs::generated::shadow::HMI::CEmergencySet::TSoundLock)m_pInstance->m_emergencySetSoundLockParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CEmergencySet::SoundLockDataType()
{
    return m_pInstance->m_emergencySetSoundLockParameter;
}
bool acs::generated::shadow::HMI::CEmergencySet::Set(  )
{
   return m_pInstance->m_emergencySetFunction.Set();
}
bool acs::generated::shadow::HMI::CEmergencySet::SetGet(  )
{
   return m_pInstance->m_emergencySetFunction.SetGet();
}



acs::generated::shadow::HMI::CKeyInputStatus::CKeyInputStatus(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CKeyInputStatus::~CKeyInputStatus(void)
{
}
void acs::generated::shadow::HMI::CKeyInputStatus::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_keyInputStatusFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CKeyInputStatus::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_keyInputStatusFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::HMI::CKeyInputStatus::FunctionInstance(void)
{
	return m_pInstance->m_keyInputStatusFunction;
}
bool acs::generated::shadow::HMI::CKeyInputStatus::Get(  )
{
   return m_pInstance->m_keyInputStatusFunction.Get();
}
bool acs::generated::shadow::HMI::CKeyInputStatus::HardKeyValue( uint8_t value )
{
    return m_pInstance->m_keyInputStatusHardKeyParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CKeyInputStatus::HardKeyValue() const
{
	return m_pInstance->m_keyInputStatusHardKeyParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CKeyInputStatus::HardKeyDataType()
{
    return m_pInstance->m_keyInputStatusHardKeyParameter;
}
bool acs::generated::shadow::HMI::CKeyInputStatus::SoftKeyValue( uint8_t value )
{
    return m_pInstance->m_keyInputStatusSoftKeyParameter.Value( value );
}
uint8_t acs::generated::shadow::HMI::CKeyInputStatus::SoftKeyValue() const
{
	return m_pInstance->m_keyInputStatusSoftKeyParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::HMI::CKeyInputStatus::SoftKeyDataType()
{
    return m_pInstance->m_keyInputStatusSoftKeyParameter;
}
bool acs::generated::shadow::HMI::CKeyInputStatus::Set(  )
{
   return m_pInstance->m_keyInputStatusFunction.Set();
}



acs::generated::shadow::HMI::CBeepSetting::CBeepSetting(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CBeepSetting::~CBeepSetting(void)
{
}
void acs::generated::shadow::HMI::CBeepSetting::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_beepSettingFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CBeepSetting::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_beepSettingFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::HMI::CBeepSetting::FunctionInstance(void)
{
	return m_pInstance->m_beepSettingFunction;
}
bool acs::generated::shadow::HMI::CBeepSetting::Get(  )
{
   return m_pInstance->m_beepSettingFunction.Get();
}
bool acs::generated::shadow::HMI::CBeepSetting::BeepSettingValue( acs::generated::shadow::HMI::CBeepSetting::TBeepSetting value )
{
    return m_pInstance->m_beepSettingParameter.Value( value );
}
acs::generated::shadow::HMI::CBeepSetting::TBeepSetting acs::generated::shadow::HMI::CBeepSetting::BeepSettingValue() const
{
	return (acs::generated::shadow::HMI::CBeepSetting::TBeepSetting)m_pInstance->m_beepSettingParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CBeepSetting::BeepSettingDataType()
{
    return m_pInstance->m_beepSettingParameter;
}
bool acs::generated::shadow::HMI::CBeepSetting::Set(  )
{
   return m_pInstance->m_beepSettingFunction.Set();
}
bool acs::generated::shadow::HMI::CBeepSetting::SetGet(  )
{
   return m_pInstance->m_beepSettingFunction.SetGet();
}



acs::generated::shadow::HMI::CDrivingRestriction::CDrivingRestriction(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CDrivingRestriction::~CDrivingRestriction(void)
{
}
void acs::generated::shadow::HMI::CDrivingRestriction::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_drivingRestrictionFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CDrivingRestriction::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_drivingRestrictionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSwitch& acs::generated::shadow::HMI::CDrivingRestriction::FunctionInstance(void)
{
	return m_pInstance->m_drivingRestrictionFunction;
}
bool acs::generated::shadow::HMI::CDrivingRestriction::Value() const
{
    return m_pInstance->m_drivingRestrictionNeedParameter.Value();
}
::k2l::acs::protocols::most::CMOSTBoolean& acs::generated::shadow::HMI::CDrivingRestriction::DataType()
{
    return m_pInstance->m_drivingRestrictionNeedParameter;
}



acs::generated::shadow::HMI::CPhonePriority::CPhonePriority(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CPhonePriority::~CPhonePriority(void)
{
}
void acs::generated::shadow::HMI::CPhonePriority::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_phonePriorityFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CPhonePriority::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_phonePriorityFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration& acs::generated::shadow::HMI::CPhonePriority::FunctionInstance(void)
{
	return m_pInstance->m_phonePriorityFunction;
}
acs::generated::shadow::HMI::CPhonePriority::TPhonePriority acs::generated::shadow::HMI::CPhonePriority::Value() const
{
    return (acs::generated::shadow::HMI::CPhonePriority::TPhonePriority)m_pInstance->m_phonePriorityParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::HMI::CPhonePriority::DataType()
{
    return m_pInstance->m_phonePriorityParameter;
}



acs::generated::shadow::HMI::CSystemDefaultSet::CSystemDefaultSet(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CSystemDefaultSet::~CSystemDefaultSet(void)
{
}
void acs::generated::shadow::HMI::CSystemDefaultSet::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_systemDefaultSetFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CSystemDefaultSet::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_systemDefaultSetFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassTrigger& acs::generated::shadow::HMI::CSystemDefaultSet::FunctionInstance(void)
{
	return m_pInstance->m_systemDefaultSetFunction;
}
bool acs::generated::shadow::HMI::CSystemDefaultSet::StartResultAck( uint16_t senderHandle )
{
    return m_pInstance->m_systemDefaultSetFunction.StartResultAck( senderHandle );
}
void acs::generated::shadow::HMI::CSystemDefaultSet::SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler )
{
    m_pInstance->m_systemDefaultSetFunction.SetHandler( pHandler );
}
bool acs::generated::shadow::HMI::CSystemDefaultSet::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_systemDefaultSetFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}



acs::generated::shadow::HMI::CMuteControl::CMuteControl(acs::generated::shadow::HMI::CHMI *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::HMI::CMuteControl::~CMuteControl(void)
{
}
void acs::generated::shadow::HMI::CMuteControl::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_muteControlFunction.SetListener( pListener );
}
bool acs::generated::shadow::HMI::CMuteControl::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_muteControlFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSwitch& acs::generated::shadow::HMI::CMuteControl::FunctionInstance(void)
{
	return m_pInstance->m_muteControlFunction;
}
bool acs::generated::shadow::HMI::CMuteControl::Value() const
{
    return m_pInstance->m_muteControlMuteStatusParameter.Value();
}
::k2l::acs::protocols::most::CMOSTBoolean& acs::generated::shadow::HMI::CMuteControl::DataType()
{
    return m_pInstance->m_muteControlMuteStatusParameter;
}
bool acs::generated::shadow::HMI::CMuteControl::Set( bool value )
{
    return
      m_pInstance->m_muteControlMuteStatusParameter.Value( value ) &&
      m_pInstance->m_muteControlFunction.Set(value);
}
bool acs::generated::shadow::HMI::CMuteControl::SetGet( bool value )
{
    return
      m_pInstance->m_muteControlMuteStatusParameter.Value( value ) &&
      m_pInstance->m_muteControlFunction.SetGet(value);
}
bool acs::generated::shadow::HMI::CMuteControl::Get()
{
    return m_pInstance->m_muteControlFunction.Get();
}


const uint8_t acs::generated::shadow::HMI::CHMI::m_fBlockInfoFunctionMaturityParameterSpecValues[] = { 0, 1, 2, 3, 17, 18 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_systemVolumeStatusSourceTypeParameterSpecValues[] = { 1, 2, 3, 4, 5, 6, 7, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_soundStatusBGSoundParameterSpecValues[] = { 0, 17, 33, 39, 49, 65, 81, 97, 98, 99, 113, 129, 134, 145, 177, 178, 179, 238, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_systemTimeTimeTypeParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_systemDateDateTypeParameterSpecValues[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_modeStatusDataParameterSpecValues[] = { 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 26, 33, 34, 35, 36, 37, 38, 42, 49, 50, 51, 52, 65, 66, 67, 68, 69, 74, 75, 81, 82, 83, 84, 85, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 134, 135, 144, 145, 146, 147, 148, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 207, 210, 212, 213, 214, 215, 223, 239, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_systemVisibilityDataParameterSpecValues[] = { 0, 1, 2, 17, 18, 49, 50, 64, 254, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_systemAudibilityDataParameterSpecValues[] = { 1, 17, 18, 49, 50, 64, 65, 66, 67, 68, 69, 70, 254, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_illuminationSettingIlluminationParameterSpecValues[] = { 0, 1, 2, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_videoRatioRatioParameterSpecValues[] = { 0, 1, 2, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_keyBoardKoreanParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_keyBoardEnglish_USParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_keyBoardEnglish_EUParameterSpecValues[] = { 0, 1, 2, 3, 4, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_keyBoardChineseParameterSpecValues[] = { 0, 1, 2, 3, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestTargetParameterSpecValues[] = { 0, 1, 2, 3, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestDisplayHandleParameterSpecValues[] = { 1, 2, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestPopupSizeParameterSpecValues[] = { 0, 1, 2, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestPopUpTypeParameterSpecValues[] = { 0, 1, 2, 17, 18, 19, 33, 34, 49, 50, 51, 52, 53, 65, 66, 67, 81, 82, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestIconIDParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestIconPositionParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestButton1ParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 224, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestButton2ParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 224, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestButton3ParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 224, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestButton4ParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 224, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_popUpRequestReactionButtonParameterSpecValues[] = { 0, 1, 2, 3, 4, 240, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_displayOSDTargetParameterSpecValues[] = { 0, 1, 2, 3, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_displayOSDOsdControlParameterSpecValues[] = { 0, 1, 2, 17, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_displayOSDOsdModeParameterSpecValues[] = { 0, 18, 19, 20, 35, 36, 37, 38, 49, 64, 75, 97, 99, 100, 101, 102, 103, 104, 113, 114, 115, 134, 144, 176, 177, 178, 179, 193, 216, 217, 218, 219, 220, 221, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_displayOSDTextColorParameterSpecValues[] = { 0, 1, 2, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_displayOSDOsdStatusParameterSpecValues[] = { 0, 1, 2, 3, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_videoDefaultSetVSetTargetParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_distanceUnitParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_showStatusBarStatusBarParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_emergencySetEMGCStateParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 6, 7, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_emergencySetControllerLockParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_emergencySetSoundLockParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_beepSettingParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::shadow::HMI::CHMI::m_phonePriorityParameterSpecValues[] = { 1, 2, 255 };


acs::generated::shadow::HMI::CHMI::CHMI(k2l::acs::protocols::most::InstanceID_t instanceID):
	::k2l::acs::protocols::most::CShadowBase(FBlockID, instanceID)
{
}

acs::generated::shadow::HMI::CHMI::CHMI(k2l::acs::protocols::most::FBlockID_t fblockID, k2l::acs::protocols::most::InstanceID_t instanceID):
	::k2l::acs::protocols::most::CShadowBase(fblockID, instanceID)
{
}

acs::generated::shadow::HMI::CHMI::~CHMI(void)
{
}

/*virtual*/
bool
acs::generated::shadow::HMI::CHMI::InitializeMOSTElement()
{
	uint32_t index = 0;
k2l::acs::protocols::most::CMOSTDataType *elements[8];
m_versionFunction.FunctionID( 0x10 );
m_versionFunction.Notification( false );
m_versionFunction.AutomaticNotification( true );
m_versionFunction.SupportedOperations( 0x9002 );
elements[0] = &m_versionMajorParameter;
elements[1] = &m_versionMinorParameter;
elements[2] = &m_versionBuildParameter;
m_versionFunction.SetDataItems(12, 3, elements);
AddFunction( &m_versionFunction );
m_fBlockInfoFunction.FunctionID( 0x11 );
m_fBlockInfoFunction.Notification( false );
m_fBlockInfoFunction.AutomaticNotification( true );
m_fBlockInfoFunction.SupportedOperations( 0x9002 );
m_fBlockInfoFunctionMaturityParameterSpec.Values( 6, m_fBlockInfoFunctionMaturityParameterSpecValues );
m_fBlockInfoFBlockNameParameterSpec.MaxCharacters( 0 );
m_fBlockInfoSupplierVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFBlockVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoMOSTVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoSystemIntegratorParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFBlockTypeParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFunctionMaturityParameter.SetValidator( &m_fBlockInfoFunctionMaturityParameterSpec );
m_fBlockInfoFunctionMaturityParameter.Value( m_fBlockInfoFunctionMaturityParameterSpecValues[0] );
m_fBlockInfoFBlockNameParameter.SetValidator( &m_fBlockInfoFBlockNameParameterSpec );
m_fBlockInfoSupplierVersionParameter.SetValidator( &m_fBlockInfoSupplierVersionParameterSpec );
m_fBlockInfoFBlockVersionParameter.SetValidator( &m_fBlockInfoFBlockVersionParameterSpec );
m_fBlockInfoMOSTVersionParameter.SetValidator( &m_fBlockInfoMOSTVersionParameterSpec );
m_fBlockInfoSystemIntegratorParameter.SetValidator( &m_fBlockInfoSystemIntegratorParameterSpec );
m_fBlockInfoFBlockTypeParameter.SetValidator( &m_fBlockInfoFBlockTypeParameterSpec );
elements[0] = &m_fBlockInfoFunctionMaturityParameter;
m_fBlockInfoDescription0RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription0Parameter.SetRecordFix( m_fBlockInfoDescription0RecordFixParameter );
m_fBlockInfoDescription0RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription0Parameter.SetRecordIterator( m_fBlockInfoDescription0RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockNameParameter;
elements[1] = &m_fBlockInfoSupplierVersionParameter;
elements[2] = &m_fBlockInfoFBlockVersionParameter;
elements[3] = &m_fBlockInfoMOSTVersionParameter;
elements[4] = &m_fBlockInfoSystemIntegratorParameter;
elements[5] = &m_fBlockInfoFBlockTypeParameter;
m_fBlockInfoDescription61440RecordFixParameter.SetMembers( 6, elements );
m_fBlockInfoDescription61440Parameter.SetRecordFix( m_fBlockInfoDescription61440RecordFixParameter );
m_fBlockInfoDescription61440RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61440Parameter.SetRecordIterator( m_fBlockInfoDescription61440RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockNameParameter;
m_fBlockInfoDescription61441RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61441Parameter.SetRecordFix( m_fBlockInfoDescription61441RecordFixParameter );
m_fBlockInfoDescription61441RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61441Parameter.SetRecordIterator( m_fBlockInfoDescription61441RecordIteratorParameter );
elements[0] = &m_fBlockInfoSupplierVersionParameter;
m_fBlockInfoDescription61442RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61442Parameter.SetRecordFix( m_fBlockInfoDescription61442RecordFixParameter );
m_fBlockInfoDescription61442RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61442Parameter.SetRecordIterator( m_fBlockInfoDescription61442RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockVersionParameter;
m_fBlockInfoDescription61443RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61443Parameter.SetRecordFix( m_fBlockInfoDescription61443RecordFixParameter );
m_fBlockInfoDescription61443RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61443Parameter.SetRecordIterator( m_fBlockInfoDescription61443RecordIteratorParameter );
elements[0] = &m_fBlockInfoMOSTVersionParameter;
m_fBlockInfoDescription61444RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61444Parameter.SetRecordFix( m_fBlockInfoDescription61444RecordFixParameter );
m_fBlockInfoDescription61444RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61444Parameter.SetRecordIterator( m_fBlockInfoDescription61444RecordIteratorParameter );
elements[0] = &m_fBlockInfoSystemIntegratorParameter;
m_fBlockInfoDescription61445RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61445Parameter.SetRecordFix( m_fBlockInfoDescription61445RecordFixParameter );
m_fBlockInfoDescription61445RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61445Parameter.SetRecordIterator( m_fBlockInfoDescription61445RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockTypeParameter;
m_fBlockInfoDescription61446RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61446Parameter.SetRecordFix( m_fBlockInfoDescription61446RecordFixParameter );
m_fBlockInfoDescription61446RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61446Parameter.SetRecordIterator( m_fBlockInfoDescription61446RecordIteratorParameter );
{
    uint32_t minValues[] = {0, 61440, 61441, 61442, 61443, 61444, 61445, 61446};
    uint32_t maxValues[] = {4095, 61440, 61441, 61442, 61443, 61444, 61445, 61446};
    k2l::acs::protocols::most::CMOSTList* streamCases[] = { &m_fBlockInfoDescription0Parameter,  &m_fBlockInfoDescription61440Parameter,  &m_fBlockInfoDescription61441Parameter,  &m_fBlockInfoDescription61442Parameter,  &m_fBlockInfoDescription61443Parameter,  &m_fBlockInfoDescription61444Parameter,  &m_fBlockInfoDescription61445Parameter,  &m_fBlockInfoDescription61446Parameter};
    m_fBlockInfoDescriptionParameter.SetStreamCases( 8, minValues, maxValues, streamCases );
}
m_fBlockInfoDescriptionParameter.SetSelector( m_fBlockInfoIDParameter );
elements[0] = &m_fBlockInfoIDParameter;
elements[1] = &m_fBlockInfoDescriptionParameter;
m_fBlockInfoFunction.SetDataItems(12, 2, elements);
elements[0] = &m_fBlockInfoIDParameter;
m_fBlockInfoFunction.SetDataItems(1, 1, elements);
AddFunction( &m_fBlockInfoFunction );
m_systemLanguageFunction.FunctionID( 0xC02 );
m_systemLanguageFunction.Notification( true );
m_systemLanguageFunction.AutomaticNotification( true );
m_systemLanguageFunction.SupportedOperations( 0x9002 );
m_systemLanguageParameterSpec.MaxCharacters( 4 );
m_systemLanguageParameter.SetValidator( &m_systemLanguageParameterSpec );
elements[0] = &m_systemLanguageParameter;
m_systemLanguageFunction.SetDataItems(12, 1, elements);
AddFunction( &m_systemLanguageFunction );
m_systemVolumeStatusFunction.FunctionID( 0xC03 );
m_systemVolumeStatusFunction.Notification( true );
m_systemVolumeStatusFunction.AutomaticNotification( true );
m_systemVolumeStatusFunction.SupportedOperations( 0x9007 );
m_systemVolumeStatusSourceTypeParameterSpec.Values( 8, m_systemVolumeStatusSourceTypeParameterSpecValues );
m_systemVolumeStatusSourceTypeParameter.SetValidator( &m_systemVolumeStatusSourceTypeParameterSpec );
m_systemVolumeStatusSourceTypeParameter.Value( m_systemVolumeStatusSourceTypeParameterSpecValues[0] );
m_systemVolumeStatusDefaultVolumeParameterSpec.Min( 0 );
m_systemVolumeStatusDefaultVolumeParameterSpec.Max( 45U );
m_systemVolumeStatusDefaultVolumeParameterSpec.Step( 1 );
m_systemVolumeStatusDefaultVolumeParameterSpec.Exponent( 0 );
m_systemVolumeStatusDefaultVolumeParameter.SetValidator( &m_systemVolumeStatusDefaultVolumeParameterSpec );
m_systemVolumeStatusDefaultVolumeParameter.Value( m_systemVolumeStatusDefaultVolumeParameterSpec.Min() );
m_systemVolumeStatusCurrentVolumeParameterSpec.Min( 0 );
m_systemVolumeStatusCurrentVolumeParameterSpec.Max( 45U );
m_systemVolumeStatusCurrentVolumeParameterSpec.Step( 1 );
m_systemVolumeStatusCurrentVolumeParameterSpec.Exponent( 0 );
m_systemVolumeStatusCurrentVolumeParameter.SetValidator( &m_systemVolumeStatusCurrentVolumeParameterSpec );
m_systemVolumeStatusCurrentVolumeParameter.Value( m_systemVolumeStatusCurrentVolumeParameterSpec.Min() );
elements[0] = &m_systemVolumeStatusSourceTypeParameter;
elements[1] = &m_systemVolumeStatusDefaultVolumeParameter;
elements[2] = &m_systemVolumeStatusCurrentVolumeParameter;
m_systemVolumeStatusFunction.SetDataItems(12, 3, elements);
elements[0] = &m_systemVolumeStatusSourceTypeParameter;
elements[1] = &m_systemVolumeStatusDefaultVolumeParameter;
m_systemVolumeStatusFunction.SetDataItems(0, 2, elements);
elements[0] = &m_systemVolumeStatusSourceTypeParameter;
elements[1] = &m_systemVolumeStatusDefaultVolumeParameter;
m_systemVolumeStatusFunction.SetDataItems(2, 2, elements);
elements[0] = &m_systemVolumeStatusSourceTypeParameter;
m_systemVolumeStatusFunction.SetDataItems(1, 1, elements);
AddFunction( &m_systemVolumeStatusFunction );
m_soundStatusFunction.FunctionID( 0xC04 );
m_soundStatusFunction.Notification( true );
m_soundStatusFunction.AutomaticNotification( true );
m_soundStatusFunction.SupportedOperations( 0x9002 );
m_soundStatusBGSoundParameterSpec.Values( 19, m_soundStatusBGSoundParameterSpecValues );
m_soundStatusBGSoundParameter.SetValidator( &m_soundStatusBGSoundParameterSpec );
m_soundStatusBGSoundParameter.Value( m_soundStatusBGSoundParameterSpecValues[0] );
elements[0] = &m_soundStatusBGSoundParameter;
m_soundStatusFunction.SetDataItems(12, 1, elements);
AddFunction( &m_soundStatusFunction );
m_systemTimeFunction.FunctionID( 0xC07 );
m_systemTimeFunction.Notification( true );
m_systemTimeFunction.AutomaticNotification( true );
m_systemTimeFunction.SupportedOperations( 0x9002 );
m_systemTimeTimeTypeParameterSpec.Values( 3, m_systemTimeTimeTypeParameterSpecValues );
m_systemTimeTimeTypeParameter.SetValidator( &m_systemTimeTimeTypeParameterSpec );
m_systemTimeTimeTypeParameter.Value( m_systemTimeTimeTypeParameterSpecValues[0] );
m_systemTimeCurrentHourParameterSpec.Min( 0 );
m_systemTimeCurrentHourParameterSpec.Max( 23U );
m_systemTimeCurrentHourParameterSpec.Step( 1 );
m_systemTimeCurrentHourParameterSpec.Exponent( 0 );
m_systemTimeCurrentHourParameter.SetValidator( &m_systemTimeCurrentHourParameterSpec );
m_systemTimeCurrentHourParameter.Value( m_systemTimeCurrentHourParameterSpec.Min() );
m_systemTimeCurrentMinParameterSpec.Min( 0 );
m_systemTimeCurrentMinParameterSpec.Max( 59U );
m_systemTimeCurrentMinParameterSpec.Step( 1 );
m_systemTimeCurrentMinParameterSpec.Exponent( 0 );
m_systemTimeCurrentMinParameter.SetValidator( &m_systemTimeCurrentMinParameterSpec );
m_systemTimeCurrentMinParameter.Value( m_systemTimeCurrentMinParameterSpec.Min() );
m_systemTimeCurrentSecParameterSpec.Min( 0 );
m_systemTimeCurrentSecParameterSpec.Max( 59U );
m_systemTimeCurrentSecParameterSpec.Step( 1 );
m_systemTimeCurrentSecParameterSpec.Exponent( 0 );
m_systemTimeCurrentSecParameter.SetValidator( &m_systemTimeCurrentSecParameterSpec );
m_systemTimeCurrentSecParameter.Value( m_systemTimeCurrentSecParameterSpec.Min() );
m_systemTimeTimezoneParameterSpec.Min( -720 );
m_systemTimeTimezoneParameterSpec.Max( 720 );
m_systemTimeTimezoneParameterSpec.Step( 1 );
m_systemTimeTimezoneParameterSpec.Exponent( 0 );
m_systemTimeTimezoneParameter.SetValidator( &m_systemTimeTimezoneParameterSpec );
m_systemTimeTimezoneParameter.Value( m_systemTimeTimezoneParameterSpec.Min() );
m_systemTimeDSTParameter.Size( 1 );
elements[0] = &m_systemTimeTimeTypeParameter;
elements[1] = &m_systemTimeCurrentHourParameter;
elements[2] = &m_systemTimeCurrentMinParameter;
elements[3] = &m_systemTimeCurrentSecParameter;
elements[4] = &m_systemTimeTimezoneParameter;
elements[5] = &m_systemTimeDSTParameter;
m_systemTimeFunction.SetDataItems(12, 6, elements);
AddFunction( &m_systemTimeFunction );
m_systemDateFunction.FunctionID( 0xC08 );
m_systemDateFunction.Notification( true );
m_systemDateFunction.AutomaticNotification( true );
m_systemDateFunction.SupportedOperations( 0x9002 );
m_systemDateCurrentMonthParameterSpec.Min( 1 );
m_systemDateCurrentMonthParameterSpec.Max( 12U );
m_systemDateCurrentMonthParameterSpec.Step( 1 );
m_systemDateCurrentMonthParameterSpec.Exponent( 0 );
m_systemDateCurrentMonthParameter.SetValidator( &m_systemDateCurrentMonthParameterSpec );
m_systemDateCurrentMonthParameter.Value( m_systemDateCurrentMonthParameterSpec.Min() );
m_systemDateCurrentDayParameterSpec.Min( 1 );
m_systemDateCurrentDayParameterSpec.Max( 31U );
m_systemDateCurrentDayParameterSpec.Step( 1 );
m_systemDateCurrentDayParameterSpec.Exponent( 0 );
m_systemDateCurrentDayParameter.SetValidator( &m_systemDateCurrentDayParameterSpec );
m_systemDateCurrentDayParameter.Value( m_systemDateCurrentDayParameterSpec.Min() );
m_systemDateDateTypeParameterSpec.Values( 10, m_systemDateDateTypeParameterSpecValues );
m_systemDateDateTypeParameter.SetValidator( &m_systemDateDateTypeParameterSpec );
m_systemDateDateTypeParameter.Value( m_systemDateDateTypeParameterSpecValues[0] );
elements[0] = &m_systemDateCurrentYearParameter;
elements[1] = &m_systemDateCurrentMonthParameter;
elements[2] = &m_systemDateCurrentDayParameter;
elements[3] = &m_systemDateDateTypeParameter;
m_systemDateFunction.SetDataItems(12, 4, elements);
AddFunction( &m_systemDateFunction );
m_modeStatusFunction.FunctionID( 0xC09 );
m_modeStatusFunction.Notification( true );
m_modeStatusFunction.AutomaticNotification( true );
m_modeStatusFunction.SupportedOperations( 0x9007 );
m_modeStatusDataParameterSpec.Values( 115, m_modeStatusDataParameterSpecValues );
for( index = 0; index < 3; index++ )
{
    elements[ index ] = static_cast<k2l::acs::protocols::most::CMOSTDataType*>( &m_modeStatusDataParameter[ index ] );
m_modeStatusDataParameter[ index ].SetValidator( &m_modeStatusDataParameterSpec );
m_modeStatusDataParameter[ index ].Value( m_modeStatusDataParameterSpecValues[0] );
}
m_modeStatusFunction.SetElements( 3, elements, 0 );
AddFunction( &m_modeStatusFunction );
m_systemVisibilityFunction.FunctionID( 0xC0A );
m_systemVisibilityFunction.Notification( true );
m_systemVisibilityFunction.AutomaticNotification( true );
m_systemVisibilityFunction.SupportedOperations( 0x9007 );
m_systemVisibilityDataParameterSpec.Values( 10, m_systemVisibilityDataParameterSpecValues );
for( index = 0; index < 3; index++ )
{
    elements[ index ] = static_cast<k2l::acs::protocols::most::CMOSTDataType*>( &m_systemVisibilityDataParameter[ index ] );
m_systemVisibilityDataParameter[ index ].SetValidator( &m_systemVisibilityDataParameterSpec );
m_systemVisibilityDataParameter[ index ].Value( m_systemVisibilityDataParameterSpecValues[0] );
}
m_systemVisibilityFunction.SetElements( 3, elements, 0 );
AddFunction( &m_systemVisibilityFunction );
m_systemAudibilityFunction.FunctionID( 0xC0B );
m_systemAudibilityFunction.Notification( true );
m_systemAudibilityFunction.AutomaticNotification( true );
m_systemAudibilityFunction.SupportedOperations( 0x9007 );
m_systemAudibilityDataParameterSpec.Values( 14, m_systemAudibilityDataParameterSpecValues );
for( index = 0; index < 3; index++ )
{
    elements[ index ] = static_cast<k2l::acs::protocols::most::CMOSTDataType*>( &m_systemAudibilityDataParameter[ index ] );
m_systemAudibilityDataParameter[ index ].SetValidator( &m_systemAudibilityDataParameterSpec );
m_systemAudibilityDataParameter[ index ].Value( m_systemAudibilityDataParameterSpecValues[0] );
}
m_systemAudibilityFunction.SetElements( 3, elements, 0 );
AddFunction( &m_systemAudibilityFunction );
m_adjustScreenFunction.FunctionID( 0xC0C );
m_adjustScreenFunction.Notification( true );
m_adjustScreenFunction.AutomaticNotification( true );
m_adjustScreenFunction.SupportedOperations( 0x9007 );
m_adjustScreenDataBrightnessParameterSpec.Min( -10 );
m_adjustScreenDataBrightnessParameterSpec.Max( 10 );
m_adjustScreenDataBrightnessParameterSpec.Step( 1 );
m_adjustScreenDataBrightnessParameterSpec.Exponent( 0 );
m_adjustScreenDataSaturationParameterSpec.Min( -10 );
m_adjustScreenDataSaturationParameterSpec.Max( 10 );
m_adjustScreenDataSaturationParameterSpec.Step( 1 );
m_adjustScreenDataSaturationParameterSpec.Exponent( 0 );
m_adjustScreenDataContrastParameterSpec.Min( -10 );
m_adjustScreenDataContrastParameterSpec.Max( 10 );
m_adjustScreenDataContrastParameterSpec.Step( 1 );
m_adjustScreenDataContrastParameterSpec.Exponent( 0 );
m_adjustScreenDataHueParameterSpec.Min( -10 );
m_adjustScreenDataHueParameterSpec.Max( 10 );
m_adjustScreenDataHueParameterSpec.Step( 1 );
m_adjustScreenDataHueParameterSpec.Exponent( 0 );
m_adjustScreenDataBrightnessParameter.SetValidator( &m_adjustScreenDataBrightnessParameterSpec );
m_adjustScreenDataBrightnessParameter.Value( m_adjustScreenDataBrightnessParameterSpec.Min() );
m_adjustScreenDataSaturationParameter.SetValidator( &m_adjustScreenDataSaturationParameterSpec );
m_adjustScreenDataSaturationParameter.Value( m_adjustScreenDataSaturationParameterSpec.Min() );
m_adjustScreenDataContrastParameter.SetValidator( &m_adjustScreenDataContrastParameterSpec );
m_adjustScreenDataContrastParameter.Value( m_adjustScreenDataContrastParameterSpec.Min() );
m_adjustScreenDataHueParameter.SetValidator( &m_adjustScreenDataHueParameterSpec );
m_adjustScreenDataHueParameter.Value( m_adjustScreenDataHueParameterSpec.Min() );
elements[0] = &m_adjustScreenDataBrightnessParameter;
elements[1] = &m_adjustScreenDataSaturationParameter;
elements[2] = &m_adjustScreenDataContrastParameter;
elements[3] = &m_adjustScreenDataHueParameter;
m_adjustScreenFunction.SetMembers( 4, elements );
AddFunction( &m_adjustScreenFunction );
m_lCDBrightnessFunction.FunctionID( 0xC0D );
m_lCDBrightnessFunction.Notification( true );
m_lCDBrightnessFunction.AutomaticNotification( true );
m_lCDBrightnessFunction.SupportedOperations( 0x9007 );
m_lCDBrightnessDataParameterSpec.Min( -10 );
m_lCDBrightnessDataParameterSpec.Max( 10 );
m_lCDBrightnessDataParameterSpec.Step( 1 );
m_lCDBrightnessDataParameterSpec.Exponent( 0 );
for( index = 0; index < 3; index++ )
{
    elements[ index ] = static_cast<k2l::acs::protocols::most::CMOSTDataType*>( &m_lCDBrightnessDataParameter[ index ] );
m_lCDBrightnessDataParameter[ index ].SetValidator( &m_lCDBrightnessDataParameterSpec );
m_lCDBrightnessDataParameter[ index ].Value( m_lCDBrightnessDataParameterSpec.Min() );
}
m_lCDBrightnessFunction.SetElements( 3, elements, 0 );
AddFunction( &m_lCDBrightnessFunction );
m_illuminationSettingFunction.FunctionID( 0xC0E );
m_illuminationSettingFunction.Notification( true );
m_illuminationSettingFunction.AutomaticNotification( true );
m_illuminationSettingFunction.SupportedOperations( 0x9007 );
m_illuminationSettingIlluminationParameterSpec.Values( 4, m_illuminationSettingIlluminationParameterSpecValues );
m_illuminationSettingIlluminationParameter.SetValidator( &m_illuminationSettingIlluminationParameterSpec );
m_illuminationSettingIlluminationParameter.Value( m_illuminationSettingIlluminationParameterSpecValues[0] );
elements[0] = &m_illuminationSettingIlluminationParameter;
m_illuminationSettingFunction.SetDataItems(0, 1, elements);
elements[0] = &m_illuminationSettingIlluminationParameter;
m_illuminationSettingFunction.SetDataItems(2, 1, elements);
elements[0] = &m_illuminationSettingIlluminationParameter;
m_illuminationSettingFunction.SetDataItems(12, 1, elements);
AddFunction( &m_illuminationSettingFunction );
m_videoRatioFunction.FunctionID( 0xC0F );
m_videoRatioFunction.Notification( true );
m_videoRatioFunction.AutomaticNotification( true );
m_videoRatioFunction.SupportedOperations( 0x9007 );
m_videoRatioRatioParameterSpec.Values( 4, m_videoRatioRatioParameterSpecValues );
m_videoRatioRatioParameter.SetValidator( &m_videoRatioRatioParameterSpec );
m_videoRatioRatioParameter.Value( m_videoRatioRatioParameterSpecValues[0] );
elements[0] = &m_videoRatioRatioParameter;
m_videoRatioFunction.SetDataItems(0, 1, elements);
elements[0] = &m_videoRatioRatioParameter;
m_videoRatioFunction.SetDataItems(2, 1, elements);
elements[0] = &m_videoRatioRatioParameter;
m_videoRatioFunction.SetDataItems(12, 1, elements);
AddFunction( &m_videoRatioFunction );
m_keyBoardFunction.FunctionID( 0xC10 );
m_keyBoardFunction.Notification( true );
m_keyBoardFunction.AutomaticNotification( true );
m_keyBoardFunction.SupportedOperations( 0x9007 );
m_keyBoardKeyBoardSettingParameter.Size( 2 );
m_keyBoardKoreanParameterSpec.Values( 3, m_keyBoardKoreanParameterSpecValues );
m_keyBoardKoreanParameter.SetValidator( &m_keyBoardKoreanParameterSpec );
m_keyBoardKoreanParameter.Value( m_keyBoardKoreanParameterSpecValues[0] );
m_keyBoardEnglish_USParameterSpec.Values( 3, m_keyBoardEnglish_USParameterSpecValues );
m_keyBoardEnglish_USParameter.SetValidator( &m_keyBoardEnglish_USParameterSpec );
m_keyBoardEnglish_USParameter.Value( m_keyBoardEnglish_USParameterSpecValues[0] );
m_keyBoardEnglish_EUParameterSpec.Values( 6, m_keyBoardEnglish_EUParameterSpecValues );
m_keyBoardEnglish_EUParameter.SetValidator( &m_keyBoardEnglish_EUParameterSpec );
m_keyBoardEnglish_EUParameter.Value( m_keyBoardEnglish_EUParameterSpecValues[0] );
m_keyBoardChineseParameterSpec.Values( 5, m_keyBoardChineseParameterSpecValues );
m_keyBoardChineseParameter.SetValidator( &m_keyBoardChineseParameterSpec );
m_keyBoardChineseParameter.Value( m_keyBoardChineseParameterSpecValues[0] );
elements[0] = &m_keyBoardKeyBoardSettingParameter;
elements[1] = &m_keyBoardKoreanParameter;
elements[2] = &m_keyBoardEnglish_USParameter;
elements[3] = &m_keyBoardEnglish_EUParameter;
elements[4] = &m_keyBoardChineseParameter;
m_keyBoardFunction.SetDataItems(0, 5, elements);
elements[0] = &m_keyBoardKoreanParameter;
elements[1] = &m_keyBoardEnglish_USParameter;
elements[2] = &m_keyBoardEnglish_EUParameter;
elements[3] = &m_keyBoardChineseParameter;
m_keyBoardFunction.SetDataItems(2, 4, elements);
elements[0] = &m_keyBoardKeyBoardSettingParameter;
elements[1] = &m_keyBoardKoreanParameter;
elements[2] = &m_keyBoardEnglish_USParameter;
elements[3] = &m_keyBoardEnglish_EUParameter;
elements[4] = &m_keyBoardChineseParameter;
m_keyBoardFunction.SetDataItems(12, 5, elements);
AddFunction( &m_keyBoardFunction );
m_popUpRequestFunction.FunctionID( 0xC12 );
m_popUpRequestFunction.Notification( false /*Method can not be admited to the notification*/ );
m_popUpRequestFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_popUpRequestFunction.SupportedOperations( 0x26C0 );
m_popUpRequestTargetParameterSpec.Values( 5, m_popUpRequestTargetParameterSpecValues );
m_popUpRequestTargetParameter.SetValidator( &m_popUpRequestTargetParameterSpec );
m_popUpRequestTargetParameter.Value( m_popUpRequestTargetParameterSpecValues[0] );
m_popUpRequestDisplayHandleParameterSpec.Values( 3, m_popUpRequestDisplayHandleParameterSpecValues );
m_popUpRequestDisplayHandleParameter.SetValidator( &m_popUpRequestDisplayHandleParameterSpec );
m_popUpRequestDisplayHandleParameter.Value( m_popUpRequestDisplayHandleParameterSpecValues[0] );
m_popUpRequestPopupSizeParameterSpec.Values( 4, m_popUpRequestPopupSizeParameterSpecValues );
m_popUpRequestPopupSizeParameter.SetValidator( &m_popUpRequestPopupSizeParameterSpec );
m_popUpRequestPopupSizeParameter.Value( m_popUpRequestPopupSizeParameterSpecValues[0] );
m_popUpRequestPopUpTypeParameterSpec.Values( 19, m_popUpRequestPopUpTypeParameterSpecValues );
m_popUpRequestPopUpTypeParameter.SetValidator( &m_popUpRequestPopUpTypeParameterSpec );
m_popUpRequestPopUpTypeParameter.Value( m_popUpRequestPopUpTypeParameterSpecValues[0] );
m_popUpRequestIconIDParameterSpec.Values( 12, m_popUpRequestIconIDParameterSpecValues );
m_popUpRequestIconIDParameter.SetValidator( &m_popUpRequestIconIDParameterSpec );
m_popUpRequestIconIDParameter.Value( m_popUpRequestIconIDParameterSpecValues[0] );
m_popUpRequestIconPositionParameterSpec.Values( 11, m_popUpRequestIconPositionParameterSpecValues );
m_popUpRequestIconPositionParameter.SetValidator( &m_popUpRequestIconPositionParameterSpec );
m_popUpRequestIconPositionParameter.Value( m_popUpRequestIconPositionParameterSpecValues[0] );
m_popUpRequestButton1ParameterSpec.Values( 14, m_popUpRequestButton1ParameterSpecValues );
m_popUpRequestButton1Parameter.SetValidator( &m_popUpRequestButton1ParameterSpec );
m_popUpRequestButton1Parameter.Value( m_popUpRequestButton1ParameterSpecValues[0] );
m_popUpRequestButton2ParameterSpec.Values( 14, m_popUpRequestButton2ParameterSpecValues );
m_popUpRequestButton2Parameter.SetValidator( &m_popUpRequestButton2ParameterSpec );
m_popUpRequestButton2Parameter.Value( m_popUpRequestButton2ParameterSpecValues[0] );
m_popUpRequestButton3ParameterSpec.Values( 14, m_popUpRequestButton3ParameterSpecValues );
m_popUpRequestButton3Parameter.SetValidator( &m_popUpRequestButton3ParameterSpec );
m_popUpRequestButton3Parameter.Value( m_popUpRequestButton3ParameterSpecValues[0] );
m_popUpRequestButton4ParameterSpec.Values( 14, m_popUpRequestButton4ParameterSpecValues );
m_popUpRequestButton4Parameter.SetValidator( &m_popUpRequestButton4ParameterSpec );
m_popUpRequestButton4Parameter.Value( m_popUpRequestButton4ParameterSpecValues[0] );
m_popUpRequestPopUpDataParameterSpec.MaxCharacters( 255 );
m_popUpRequestPopUpDataParameter.SetValidator( &m_popUpRequestPopUpDataParameterSpec );
m_popUpRequestOsdTextParameterSpec.MaxCharacters( 255 );
m_popUpRequestOsdTextParameter.SetValidator( &m_popUpRequestOsdTextParameterSpec );
m_popUpRequestReactionButtonParameterSpec.Values( 7, m_popUpRequestReactionButtonParameterSpecValues );
m_popUpRequestReactionButtonParameter.SetValidator( &m_popUpRequestReactionButtonParameterSpec );
m_popUpRequestReactionButtonParameter.Value( m_popUpRequestReactionButtonParameterSpecValues[0] );
m_popUpRequestReactionTextParameterSpec.MaxCharacters( 255 );
m_popUpRequestReactionTextParameter.SetValidator( &m_popUpRequestReactionTextParameterSpec );
AddFunction( &m_popUpRequestFunction );
m_popUpProgressBarFunction.FunctionID( 0xC13 );
m_popUpProgressBarFunction.Notification( true );
m_popUpProgressBarFunction.AutomaticNotification( true );
m_popUpProgressBarFunction.SupportedOperations( 0x9002 );
m_popUpProgressBarProgressParameterSpec.Min( 0 );
m_popUpProgressBarProgressParameterSpec.Max( 100U );
m_popUpProgressBarProgressParameterSpec.Step( 1 );
m_popUpProgressBarProgressParameterSpec.Exponent( 0 );
m_popUpProgressBarProgressParameter.SetValidator( &m_popUpProgressBarProgressParameterSpec );
m_popUpProgressBarProgressParameter.Value( m_popUpProgressBarProgressParameterSpec.Min() );
elements[0] = &m_popUpProgressBarProgressParameter;
m_popUpProgressBarFunction.SetDataItems(12, 1, elements);
AddFunction( &m_popUpProgressBarFunction );
m_displayControlFunction.FunctionID( 0xC14 );
m_displayControlFunction.Notification( true );
m_displayControlFunction.AutomaticNotification( true );
m_displayControlFunction.SupportedOperations( 0x9007 );
m_displayControlFunction.Size( 1 );
AddFunction( &m_displayControlFunction );
m_displayOSDFunction.FunctionID( 0xC15 );
m_displayOSDFunction.Notification( false );
m_displayOSDFunction.AutomaticNotification( true );
m_displayOSDFunction.SupportedOperations( 0x9004 );
m_displayOSDTargetParameterSpec.Values( 5, m_displayOSDTargetParameterSpecValues );
m_displayOSDTargetParameter.SetValidator( &m_displayOSDTargetParameterSpec );
m_displayOSDTargetParameter.Value( m_displayOSDTargetParameterSpecValues[0] );
m_displayOSDOsdIdParameterSpec.Min( 1 );
m_displayOSDOsdIdParameterSpec.Max( 255U );
m_displayOSDOsdIdParameterSpec.Step( 1 );
m_displayOSDOsdIdParameterSpec.Exponent( 0 );
m_displayOSDOsdIdParameter.SetValidator( &m_displayOSDOsdIdParameterSpec );
m_displayOSDOsdIdParameter.Value( m_displayOSDOsdIdParameterSpec.Min() );
m_displayOSDOsdControlParameterSpec.Values( 5, m_displayOSDOsdControlParameterSpecValues );
m_displayOSDOsdControlParameter.SetValidator( &m_displayOSDOsdControlParameterSpec );
m_displayOSDOsdControlParameter.Value( m_displayOSDOsdControlParameterSpecValues[0] );
m_displayOSDOsdModeParameterSpec.Values( 35, m_displayOSDOsdModeParameterSpecValues );
m_displayOSDOsdModeParameter.SetValidator( &m_displayOSDOsdModeParameterSpec );
m_displayOSDOsdModeParameter.Value( m_displayOSDOsdModeParameterSpecValues[0] );
m_displayOSDTextColorParameterSpec.Values( 4, m_displayOSDTextColorParameterSpecValues );
m_displayOSDTextColorParameter.SetValidator( &m_displayOSDTextColorParameterSpec );
m_displayOSDTextColorParameter.Value( m_displayOSDTextColorParameterSpecValues[0] );
m_displayOSDOsdTextParameterSpec.MaxCharacters( 255 );
m_displayOSDOsdTextParameter.SetValidator( &m_displayOSDOsdTextParameterSpec );
elements[0] = &m_displayOSDTargetParameter;
elements[1] = &m_displayOSDOsdIdParameter;
elements[2] = &m_displayOSDOsdControlParameter;
elements[3] = &m_displayOSDOsdModeParameter;
elements[4] = &m_displayOSDTextColorParameter;
elements[5] = &m_displayOSDOsdTextParameter;
m_displayOSDFunction.SetDataItems(2, 6, elements);
m_displayOSDOsdStatusParameterSpec.Values( 5, m_displayOSDOsdStatusParameterSpecValues );
m_displayOSDOsdStatusParameter.SetValidator( &m_displayOSDOsdStatusParameterSpec );
m_displayOSDOsdStatusParameter.Value( m_displayOSDOsdStatusParameterSpecValues[0] );
elements[0] = &m_displayOSDOsdIdParameter;
elements[1] = &m_displayOSDOsdStatusParameter;
m_displayOSDFunction.SetDataItems(12, 2, elements);
AddFunction( &m_displayOSDFunction );
m_videoDefaultSetFunction.FunctionID( 0xC16 );
m_videoDefaultSetFunction.Notification( false /*Method can not be admited to the notification*/ );
m_videoDefaultSetFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_videoDefaultSetFunction.SupportedOperations( 0x26C0 );
m_videoDefaultSetVSetTargetParameterSpec.Values( 7, m_videoDefaultSetVSetTargetParameterSpecValues );
m_videoDefaultSetVSetTargetParameter.SetValidator( &m_videoDefaultSetVSetTargetParameterSpec );
m_videoDefaultSetVSetTargetParameter.Value( m_videoDefaultSetVSetTargetParameterSpecValues[0] );
AddFunction( &m_videoDefaultSetFunction );
m_distanceUnitFunction.FunctionID( 0xC17 );
m_distanceUnitFunction.Notification( true );
m_distanceUnitFunction.AutomaticNotification( true );
m_distanceUnitFunction.SupportedOperations( 0x9002 );
m_distanceUnitParameterSpec.Values( 3, m_distanceUnitParameterSpecValues );
m_distanceUnitParameter.SetValidator( &m_distanceUnitParameterSpec );
m_distanceUnitParameter.Value( m_distanceUnitParameterSpecValues[0] );
elements[0] = &m_distanceUnitParameter;
m_distanceUnitFunction.SetDataItems(12, 1, elements);
AddFunction( &m_distanceUnitFunction );
m_showStatusBarFunction.FunctionID( 0xC18 );
m_showStatusBarFunction.Notification( true );
m_showStatusBarFunction.AutomaticNotification( true );
m_showStatusBarFunction.SupportedOperations( 0x9007 );
m_showStatusBarStatusBarParameterSpec.Values( 3, m_showStatusBarStatusBarParameterSpecValues );
m_showStatusBarStatusBarParameter.SetValidator( &m_showStatusBarStatusBarParameterSpec );
m_showStatusBarStatusBarParameter.Value( m_showStatusBarStatusBarParameterSpecValues[0] );
elements[0] = &m_showStatusBarStatusBarParameter;
m_showStatusBarFunction.SetDataItems(0, 1, elements);
elements[0] = &m_showStatusBarStatusBarParameter;
m_showStatusBarFunction.SetDataItems(2, 1, elements);
elements[0] = &m_showStatusBarStatusBarParameter;
m_showStatusBarFunction.SetDataItems(12, 1, elements);
AddFunction( &m_showStatusBarFunction );
m_emergencySetFunction.FunctionID( 0xC19 );
m_emergencySetFunction.Notification( true );
m_emergencySetFunction.AutomaticNotification( true );
m_emergencySetFunction.SupportedOperations( 0x9007 );
m_emergencySetEMGCStateParameterSpec.Values( 9, m_emergencySetEMGCStateParameterSpecValues );
m_emergencySetEMGCStateParameter.SetValidator( &m_emergencySetEMGCStateParameterSpec );
m_emergencySetEMGCStateParameter.Value( m_emergencySetEMGCStateParameterSpecValues[0] );
m_emergencySetControllerLockParameterSpec.Values( 3, m_emergencySetControllerLockParameterSpecValues );
m_emergencySetControllerLockParameter.SetValidator( &m_emergencySetControllerLockParameterSpec );
m_emergencySetControllerLockParameter.Value( m_emergencySetControllerLockParameterSpecValues[0] );
m_emergencySetSoundLockParameterSpec.Values( 3, m_emergencySetSoundLockParameterSpecValues );
m_emergencySetSoundLockParameter.SetValidator( &m_emergencySetSoundLockParameterSpec );
m_emergencySetSoundLockParameter.Value( m_emergencySetSoundLockParameterSpecValues[0] );
elements[0] = &m_emergencySetEMGCStateParameter;
elements[1] = &m_emergencySetControllerLockParameter;
elements[2] = &m_emergencySetSoundLockParameter;
m_emergencySetFunction.SetDataItems(0, 3, elements);
elements[0] = &m_emergencySetEMGCStateParameter;
elements[1] = &m_emergencySetControllerLockParameter;
elements[2] = &m_emergencySetSoundLockParameter;
m_emergencySetFunction.SetDataItems(2, 3, elements);
elements[0] = &m_emergencySetEMGCStateParameter;
elements[1] = &m_emergencySetControllerLockParameter;
elements[2] = &m_emergencySetSoundLockParameter;
m_emergencySetFunction.SetDataItems(12, 3, elements);
AddFunction( &m_emergencySetFunction );
m_keyInputStatusFunction.FunctionID( 0xC1A );
m_keyInputStatusFunction.Notification( true );
m_keyInputStatusFunction.AutomaticNotification( true );
m_keyInputStatusFunction.SupportedOperations( 0x9003 );
elements[0] = &m_keyInputStatusHardKeyParameter;
elements[1] = &m_keyInputStatusSoftKeyParameter;
m_keyInputStatusFunction.SetDataItems(0, 2, elements);
elements[0] = &m_keyInputStatusHardKeyParameter;
elements[1] = &m_keyInputStatusSoftKeyParameter;
m_keyInputStatusFunction.SetDataItems(12, 2, elements);
AddFunction( &m_keyInputStatusFunction );
m_beepSettingFunction.FunctionID( 0xC1B );
m_beepSettingFunction.Notification( true );
m_beepSettingFunction.AutomaticNotification( true );
m_beepSettingFunction.SupportedOperations( 0x9007 );
m_beepSettingParameterSpec.Values( 3, m_beepSettingParameterSpecValues );
m_beepSettingParameter.SetValidator( &m_beepSettingParameterSpec );
m_beepSettingParameter.Value( m_beepSettingParameterSpecValues[0] );
elements[0] = &m_beepSettingParameter;
m_beepSettingFunction.SetDataItems(0, 1, elements);
elements[0] = &m_beepSettingParameter;
m_beepSettingFunction.SetDataItems(2, 1, elements);
elements[0] = &m_beepSettingParameter;
m_beepSettingFunction.SetDataItems(12, 1, elements);
AddFunction( &m_beepSettingFunction );
m_drivingRestrictionFunction.FunctionID( 0xC1C );
m_drivingRestrictionFunction.Notification( true );
m_drivingRestrictionFunction.AutomaticNotification( true );
m_drivingRestrictionFunction.SupportedOperations( 0x9000 );
m_drivingRestrictionFunction.SetValueType( &m_drivingRestrictionNeedParameter );
AddFunction( &m_drivingRestrictionFunction );
m_phonePriorityFunction.FunctionID( 0xC1D );
m_phonePriorityFunction.Notification( true );
m_phonePriorityFunction.AutomaticNotification( true );
m_phonePriorityFunction.SupportedOperations( 0x9000 );
m_phonePriorityParameterSpec.Values( 3, m_phonePriorityParameterSpecValues );
m_phonePriorityParameter.SetValidator( &m_phonePriorityParameterSpec );
m_phonePriorityParameter.Value( m_phonePriorityParameterSpecValues[0] );
m_phonePriorityFunction.SetValueType( &m_phonePriorityParameter );
AddFunction( &m_phonePriorityFunction );
m_systemDefaultSetFunction.FunctionID( 0xC1E );
m_systemDefaultSetFunction.Notification( false /*Method can not be admited to the notification*/ );
m_systemDefaultSetFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_systemDefaultSetFunction.SupportedOperations( 0x2640 );
AddFunction( &m_systemDefaultSetFunction );
m_muteControlFunction.FunctionID( 0xC1F );
m_muteControlFunction.Notification( true );
m_muteControlFunction.AutomaticNotification( true );
m_muteControlFunction.SupportedOperations( 0x9007 );
m_muteControlFunction.SetValueType( &m_muteControlMuteStatusParameter );
AddFunction( &m_muteControlFunction );
AddFunction( &m_notificationCheckFunction );
AddFunction( &m_notificationFunction );
AddFunction( &m_fktIDsFunction );
NotificationService( &m_notificationFunction );
m_notificationFunction.Update();
m_fktIDsFunction.Update();
return true;
}


/*=============================================================================
 * END OF FILE
 *=============================================================================*/
