/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2012-07-09.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

/**
 * HMC DH Fcat v1.18.2
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

#include "DHAVN_MOSTManager_DLNAShadow.h"


acs::generated::shadow::DLNA::CVersion::CVersion(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CVersion::~CVersion(void)
{
}
void acs::generated::shadow::DLNA::CVersion::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_versionFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CVersion::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_versionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::DLNA::CVersion::FunctionInstance(void)
{
	return m_pInstance->m_versionFunction;
}
bool acs::generated::shadow::DLNA::CVersion::Get(  )
{
   return m_pInstance->m_versionFunction.Get();
}
bool acs::generated::shadow::DLNA::CVersion::MajorValue( uint8_t value )
{
    return m_pInstance->m_versionMajorParameter.Value( value );
}
uint8_t acs::generated::shadow::DLNA::CVersion::MajorValue() const
{
	return m_pInstance->m_versionMajorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::DLNA::CVersion::MajorDataType()
{
    return m_pInstance->m_versionMajorParameter;
}
bool acs::generated::shadow::DLNA::CVersion::MinorValue( uint8_t value )
{
    return m_pInstance->m_versionMinorParameter.Value( value );
}
uint8_t acs::generated::shadow::DLNA::CVersion::MinorValue() const
{
	return m_pInstance->m_versionMinorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::DLNA::CVersion::MinorDataType()
{
    return m_pInstance->m_versionMinorParameter;
}
bool acs::generated::shadow::DLNA::CVersion::BuildValue( uint8_t value )
{
    return m_pInstance->m_versionBuildParameter.Value( value );
}
uint8_t acs::generated::shadow::DLNA::CVersion::BuildValue() const
{
	return m_pInstance->m_versionBuildParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::shadow::DLNA::CVersion::BuildDataType()
{
    return m_pInstance->m_versionBuildParameter;
}



acs::generated::shadow::DLNA::CFBlockInfo::CFBlockInfo(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CFBlockInfo::~CFBlockInfo(void)
{
}
void acs::generated::shadow::DLNA::CFBlockInfo::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_fBlockInfoFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_fBlockInfoFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::DLNA::CFBlockInfo::FunctionInstance(void)
{
	return m_pInstance->m_fBlockInfoFunction;
}
bool acs::generated::shadow::DLNA::CFBlockInfo::IDValue( uint16_t value )
{
    return m_pInstance->m_fBlockInfoIDParameter.Value( value );
}
uint16_t acs::generated::shadow::DLNA::CFBlockInfo::IDValue() const
{
	return m_pInstance->m_fBlockInfoIDParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::DLNA::CFBlockInfo::IDDataType()
{
    return m_pInstance->m_fBlockInfoIDParameter;
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FunctionMaturityValue( acs::generated::shadow::DLNA::CFBlockInfo::TFunctionMaturity value )
{
    return m_pInstance->m_fBlockInfoFunctionMaturityParameter.Value( value );
}
acs::generated::shadow::DLNA::CFBlockInfo::TFunctionMaturity acs::generated::shadow::DLNA::CFBlockInfo::FunctionMaturityValue() const
{
	return (acs::generated::shadow::DLNA::CFBlockInfo::TFunctionMaturity)m_pInstance->m_fBlockInfoFunctionMaturityParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::DLNA::CFBlockInfo::FunctionMaturityDataType()
{
    return m_pInstance->m_fBlockInfoFunctionMaturityParameter;
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameValue() const
{
	return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameDataType()
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameLength() const
{
	return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionValue() const
{
	return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionDataType()
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionLength() const
{
	return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionValue() const
{
	return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionDataType()
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionLength() const
{
	return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionValue() const
{
	return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionDataType()
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionLength() const
{
	return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorValue() const
{
	return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorDataType()
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorLength() const
{
	return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeValue() const
{
	return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeDataType()
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeLength() const
{
	return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CFBlockInfo::DescriptionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.Stream( value, length );
}
const uint8_t * acs::generated::shadow::DLNA::CFBlockInfo::DescriptionValue() const
{
	return m_pInstance->m_fBlockInfoDescriptionParameter.Stream();
}
::k2l::acs::protocols::most::CMOSTCaseStream& acs::generated::shadow::DLNA::CFBlockInfo::DescriptionDataType()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter;
}
uint32_t acs::generated::shadow::DLNA::CFBlockInfo::DescriptionStreamLength() const
{
	return m_pInstance->m_fBlockInfoDescriptionParameter.StreamLength();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::DescriptionLoadNext()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.LoadNext();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::DescriptionSaveNext()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.SaveNext();
}
bool acs::generated::shadow::DLNA::CFBlockInfo::Get(  )
{
   return m_pInstance->m_fBlockInfoFunction.Get();
}



acs::generated::shadow::DLNA::CDeckStatus::CDeckStatus(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CDeckStatus::~CDeckStatus(void)
{
}
void acs::generated::shadow::DLNA::CDeckStatus::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_deckStatusFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CDeckStatus::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_deckStatusFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::DLNA::CDeckStatus::FunctionInstance(void)
{
	return m_pInstance->m_deckStatusFunction;
}
bool acs::generated::shadow::DLNA::CDeckStatus::Get(  )
{
   return m_pInstance->m_deckStatusFunction.Get();
}
bool acs::generated::shadow::DLNA::CDeckStatus::DeckStatusValue( acs::generated::shadow::DLNA::CDeckStatus::TDeckStatus value )
{
    return m_pInstance->m_deckStatusParameter.Value( value );
}
acs::generated::shadow::DLNA::CDeckStatus::TDeckStatus acs::generated::shadow::DLNA::CDeckStatus::DeckStatusValue() const
{
	return (acs::generated::shadow::DLNA::CDeckStatus::TDeckStatus)m_pInstance->m_deckStatusParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::DLNA::CDeckStatus::DeckStatusDataType()
{
    return m_pInstance->m_deckStatusParameter;
}
bool acs::generated::shadow::DLNA::CDeckStatus::Set(  )
{
   return m_pInstance->m_deckStatusFunction.Set();
}
bool acs::generated::shadow::DLNA::CDeckStatus::SetGet(  )
{
   return m_pInstance->m_deckStatusFunction.SetGet();
}



acs::generated::shadow::DLNA::CTimePosition::CTimePosition(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CTimePosition::~CTimePosition(void)
{
}
void acs::generated::shadow::DLNA::CTimePosition::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_timePositionFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CTimePosition::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_timePositionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassRecord& acs::generated::shadow::DLNA::CTimePosition::FunctionInstance(void)
{
	return m_pInstance->m_timePositionFunction;
}
bool acs::generated::shadow::DLNA::CTimePosition::DataDiskTimeValue( int32_t value )
{
    return m_pInstance->m_timePositionDataDiskTimeParameter.Value( value );
}
int32_t acs::generated::shadow::DLNA::CTimePosition::DataDiskTimeValue() const
{
    return m_pInstance->m_timePositionDataDiskTimeParameter.Value();
}
bool acs::generated::shadow::DLNA::CTimePosition::SetDataDiskTime( int32_t value )
{
    return 
      m_pInstance->m_timePositionDataDiskTimeParameter.Value( value ) &&
      m_pInstance->m_timePositionFunction.Set( 1 );
}
bool acs::generated::shadow::DLNA::CTimePosition::SetGetDataDiskTime( int32_t value )
{
    return 
      m_pInstance->m_timePositionDataDiskTimeParameter.Value( value ) &&
      m_pInstance->m_timePositionFunction.SetGet( 1 );
}
bool acs::generated::shadow::DLNA::CTimePosition::GetDataDiskTime()
{
    return m_pInstance->m_timePositionFunction.Get( 1 );
}
bool acs::generated::shadow::DLNA::CTimePosition::DataTrackTimeValue( int32_t value )
{
    return m_pInstance->m_timePositionDataTrackTimeParameter.Value( value );
}
int32_t acs::generated::shadow::DLNA::CTimePosition::DataTrackTimeValue() const
{
    return m_pInstance->m_timePositionDataTrackTimeParameter.Value();
}
bool acs::generated::shadow::DLNA::CTimePosition::SetDataTrackTime( int32_t value )
{
    return 
      m_pInstance->m_timePositionDataTrackTimeParameter.Value( value ) &&
      m_pInstance->m_timePositionFunction.Set( 2 );
}
bool acs::generated::shadow::DLNA::CTimePosition::SetGetDataTrackTime( int32_t value )
{
    return 
      m_pInstance->m_timePositionDataTrackTimeParameter.Value( value ) &&
      m_pInstance->m_timePositionFunction.SetGet( 2 );
}
bool acs::generated::shadow::DLNA::CTimePosition::GetDataTrackTime()
{
    return m_pInstance->m_timePositionFunction.Get( 2 );
}
bool acs::generated::shadow::DLNA::CTimePosition::DataTitleTimeValue( int32_t value )
{
    return m_pInstance->m_timePositionDataTitleTimeParameter.Value( value );
}
int32_t acs::generated::shadow::DLNA::CTimePosition::DataTitleTimeValue() const
{
    return m_pInstance->m_timePositionDataTitleTimeParameter.Value();
}
bool acs::generated::shadow::DLNA::CTimePosition::SetDataTitleTime( int32_t value )
{
    return 
      m_pInstance->m_timePositionDataTitleTimeParameter.Value( value ) &&
      m_pInstance->m_timePositionFunction.Set( 3 );
}
bool acs::generated::shadow::DLNA::CTimePosition::SetGetDataTitleTime( int32_t value )
{
    return 
      m_pInstance->m_timePositionDataTitleTimeParameter.Value( value ) &&
      m_pInstance->m_timePositionFunction.SetGet( 3 );
}
bool acs::generated::shadow::DLNA::CTimePosition::GetDataTitleTime()
{
    return m_pInstance->m_timePositionFunction.Get( 3 );
}
bool acs::generated::shadow::DLNA::CTimePosition::Set()
{
    return m_pInstance->m_timePositionFunction.Set();
}
bool acs::generated::shadow::DLNA::CTimePosition::SetGet()
{
    return m_pInstance->m_timePositionFunction.SetGet();
}



acs::generated::shadow::DLNA::CTrackPosition::CTrackPosition(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CTrackPosition::~CTrackPosition(void)
{
}
void acs::generated::shadow::DLNA::CTrackPosition::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_trackPositionFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CTrackPosition::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_trackPositionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassNumber& acs::generated::shadow::DLNA::CTrackPosition::FunctionInstance(void)
{
	return m_pInstance->m_trackPositionFunction;
}
uint16_t acs::generated::shadow::DLNA::CTrackPosition::Value() const
{
    return m_pInstance->m_trackPositionTrackParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::DLNA::CTrackPosition::DataType()
{
    return m_pInstance->m_trackPositionTrackParameter;
}
bool acs::generated::shadow::DLNA::CTrackPosition::Set( uint16_t value )
{
    return  
      m_pInstance->m_trackPositionTrackParameter.Value( value ) &&
      m_pInstance->m_trackPositionFunction.Set(&m_pInstance->m_trackPositionTrackParameter);
}
bool acs::generated::shadow::DLNA::CTrackPosition::SetGet( uint16_t value )
{
    return  
      m_pInstance->m_trackPositionTrackParameter.Value( value ) &&
      m_pInstance->m_trackPositionFunction.SetGet(&m_pInstance->m_trackPositionTrackParameter);
}
bool acs::generated::shadow::DLNA::CTrackPosition::Increment( uint8_t nsteps )
{
    return m_pInstance->m_trackPositionFunction.Increment( nsteps );
}
bool acs::generated::shadow::DLNA::CTrackPosition::Decrement( uint8_t nsteps )
{
    return m_pInstance->m_trackPositionFunction.Decrement( nsteps );
}
bool acs::generated::shadow::DLNA::CTrackPosition::Get()
{
    return m_pInstance->m_trackPositionFunction.Get();
}



acs::generated::shadow::DLNA::CTrackInformation::CTrackInformation(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CTrackInformation::~CTrackInformation(void)
{
}
void acs::generated::shadow::DLNA::CTrackInformation::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_trackInformationFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CTrackInformation::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_trackInformationFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::shadow::DLNA::CTrackInformation::FunctionInstance(void)
{
	return m_pInstance->m_trackInformationFunction;
}
bool acs::generated::shadow::DLNA::CTrackInformation::Get(  )
{
   return m_pInstance->m_trackInformationFunction.Get();
}
bool acs::generated::shadow::DLNA::CTrackInformation::CurrentNumberTracksValue( uint32_t value )
{
    return m_pInstance->m_trackInformationCurrentNumberTracksParameter.Value( value );
}
uint32_t acs::generated::shadow::DLNA::CTrackInformation::CurrentNumberTracksValue() const
{
	return m_pInstance->m_trackInformationCurrentNumberTracksParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedLong& acs::generated::shadow::DLNA::CTrackInformation::CurrentNumberTracksDataType()
{
    return m_pInstance->m_trackInformationCurrentNumberTracksParameter;
}
bool acs::generated::shadow::DLNA::CTrackInformation::CurrentRelativeTrackPositionValue( uint32_t value )
{
    return m_pInstance->m_trackInformationCurrentRelativeTrackPositionParameter.Value( value );
}
uint32_t acs::generated::shadow::DLNA::CTrackInformation::CurrentRelativeTrackPositionValue() const
{
	return m_pInstance->m_trackInformationCurrentRelativeTrackPositionParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedLong& acs::generated::shadow::DLNA::CTrackInformation::CurrentRelativeTrackPositionDataType()
{
    return m_pInstance->m_trackInformationCurrentRelativeTrackPositionParameter;
}



acs::generated::shadow::DLNA::CCurrentSongInfo::CCurrentSongInfo(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CCurrentSongInfo::~CCurrentSongInfo(void)
{
}
void acs::generated::shadow::DLNA::CCurrentSongInfo::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_currentSongInfoFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_currentSongInfoFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::DLNA::CCurrentSongInfo::FunctionInstance(void)
{
	return m_pInstance->m_currentSongInfoFunction;
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::Get(  )
{
   return m_pInstance->m_currentSongInfoFunction.Get();
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::TitleValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentSongInfoTitleParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentSongInfo::TitleValue() const
{
	return m_pInstance->m_currentSongInfoTitleParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentSongInfo::TitleDataType()
{
    return m_pInstance->m_currentSongInfoTitleParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentSongInfo::TitleLength() const
{
	return m_pInstance->m_currentSongInfoTitleParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::TitleAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentSongInfoTitleParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::TitleString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentSongInfoTitleParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::TitleString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentSongInfoTitleParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::PlayTimeValue( uint32_t value )
{
    return m_pInstance->m_currentSongInfoPlayTimeParameter.Value( value );
}
uint32_t acs::generated::shadow::DLNA::CCurrentSongInfo::PlayTimeValue() const
{
	return m_pInstance->m_currentSongInfoPlayTimeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedLong& acs::generated::shadow::DLNA::CCurrentSongInfo::PlayTimeDataType()
{
    return m_pInstance->m_currentSongInfoPlayTimeParameter;
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::TrackNoValue( uint16_t value )
{
    return m_pInstance->m_currentSongInfoTrackNoParameter.Value( value );
}
uint16_t acs::generated::shadow::DLNA::CCurrentSongInfo::TrackNoValue() const
{
	return m_pInstance->m_currentSongInfoTrackNoParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::DLNA::CCurrentSongInfo::TrackNoDataType()
{
    return m_pInstance->m_currentSongInfoTrackNoParameter;
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentSongInfoFileNameParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameValue() const
{
	return m_pInstance->m_currentSongInfoFileNameParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameDataType()
{
    return m_pInstance->m_currentSongInfoFileNameParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameLength() const
{
	return m_pInstance->m_currentSongInfoFileNameParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentSongInfoFileNameParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentSongInfoFileNameParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::FileNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentSongInfoFileNameParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentSongInfoArtistParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistValue() const
{
	return m_pInstance->m_currentSongInfoArtistParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistDataType()
{
    return m_pInstance->m_currentSongInfoArtistParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistLength() const
{
	return m_pInstance->m_currentSongInfoArtistParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentSongInfoArtistParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentSongInfoArtistParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::ArtistString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentSongInfoArtistParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentSongInfoAlbumParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumValue() const
{
	return m_pInstance->m_currentSongInfoAlbumParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumDataType()
{
    return m_pInstance->m_currentSongInfoAlbumParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumLength() const
{
	return m_pInstance->m_currentSongInfoAlbumParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentSongInfoAlbumParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentSongInfoAlbumParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::AlbumString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentSongInfoAlbumParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::GenreValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentSongInfoGenreParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentSongInfo::GenreValue() const
{
	return m_pInstance->m_currentSongInfoGenreParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentSongInfo::GenreDataType()
{
    return m_pInstance->m_currentSongInfoGenreParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentSongInfo::GenreLength() const
{
	return m_pInstance->m_currentSongInfoGenreParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::GenreAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentSongInfoGenreParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::GenreString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentSongInfoGenreParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentSongInfo::GenreString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentSongInfoGenreParameter.String( ppStringEncoding, ppString, pStringLength );
}



acs::generated::shadow::DLNA::CCurrentVideoInfo::CCurrentVideoInfo(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CCurrentVideoInfo::~CCurrentVideoInfo(void)
{
}
void acs::generated::shadow::DLNA::CCurrentVideoInfo::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_currentVideoInfoFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_currentVideoInfoFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::shadow::DLNA::CCurrentVideoInfo::FunctionInstance(void)
{
	return m_pInstance->m_currentVideoInfoFunction;
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::Get(  )
{
   return m_pInstance->m_currentVideoInfoFunction.Get();
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentVideoInfoVideoTitleParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleValue() const
{
	return m_pInstance->m_currentVideoInfoVideoTitleParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleDataType()
{
    return m_pInstance->m_currentVideoInfoVideoTitleParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleLength() const
{
	return m_pInstance->m_currentVideoInfoVideoTitleParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentVideoInfoVideoTitleParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentVideoInfoVideoTitleParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTitleString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentVideoInfoVideoTitleParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTimeValue( uint32_t value )
{
    return m_pInstance->m_currentVideoInfoVideoTimeParameter.Value( value );
}
uint32_t acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTimeValue() const
{
	return m_pInstance->m_currentVideoInfoVideoTimeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedLong& acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTimeDataType()
{
    return m_pInstance->m_currentVideoInfoVideoTimeParameter;
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTrackValue( uint16_t value )
{
    return m_pInstance->m_currentVideoInfoVideoTrackParameter.Value( value );
}
uint16_t acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTrackValue() const
{
	return m_pInstance->m_currentVideoInfoVideoTrackParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoTrackDataType()
{
    return m_pInstance->m_currentVideoInfoVideoTrackParameter;
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_currentVideoInfoVideoFilenameParameter.MOSTString( value, length );
}
uint8_t * acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameValue() const
{
	return m_pInstance->m_currentVideoInfoVideoFilenameParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameDataType()
{
    return m_pInstance->m_currentVideoInfoVideoFilenameParameter;
}
uint32_t acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameLength() const
{
	return m_pInstance->m_currentVideoInfoVideoFilenameParameter.MOSTStringLength();
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_currentVideoInfoVideoFilenameParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_currentVideoInfoVideoFilenameParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::shadow::DLNA::CCurrentVideoInfo::VideoFilenameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_currentVideoInfoVideoFilenameParameter.String( ppStringEncoding, ppString, pStringLength );
}



acs::generated::shadow::DLNA::CDLNAConnection::CDLNAConnection(acs::generated::shadow::DLNA::CDLNA *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::shadow::DLNA::CDLNAConnection::~CDLNAConnection(void)
{
}
void acs::generated::shadow::DLNA::CDLNAConnection::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_dLNAConnectionFunction.SetListener( pListener );
}
bool acs::generated::shadow::DLNA::CDLNAConnection::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_dLNAConnectionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration& acs::generated::shadow::DLNA::CDLNAConnection::FunctionInstance(void)
{
	return m_pInstance->m_dLNAConnectionFunction;
}
acs::generated::shadow::DLNA::CDLNAConnection::TDLNAStataus acs::generated::shadow::DLNA::CDLNAConnection::Value() const
{
    return (acs::generated::shadow::DLNA::CDLNAConnection::TDLNAStataus)m_pInstance->m_dLNAConnectionDLNAStatausParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::shadow::DLNA::CDLNAConnection::DataType()
{
    return m_pInstance->m_dLNAConnectionDLNAStatausParameter;
}
bool acs::generated::shadow::DLNA::CDLNAConnection::Get()
{
    return m_pInstance->m_dLNAConnectionFunction.Get();
}


const uint8_t acs::generated::shadow::DLNA::CDLNA::m_fBlockInfoFunctionMaturityParameterSpecValues[] = { 0, 1, 2, 3, 17, 18 };
const uint8_t acs::generated::shadow::DLNA::CDLNA::m_deckStatusParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 33, 34, 35, 48, 49, 50, 51, 64, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 255 };
const uint8_t acs::generated::shadow::DLNA::CDLNA::m_dLNAConnectionDLNAStatausParameterSpecValues[] = { 0, 1, 255 };


acs::generated::shadow::DLNA::CDLNA::CDLNA(k2l::acs::protocols::most::InstanceID_t instanceID):
	::k2l::acs::protocols::most::CShadowBase(FBlockID, instanceID)
{
}

acs::generated::shadow::DLNA::CDLNA::CDLNA(k2l::acs::protocols::most::FBlockID_t fblockID, k2l::acs::protocols::most::InstanceID_t instanceID):
	::k2l::acs::protocols::most::CShadowBase(fblockID, instanceID)
{
}

acs::generated::shadow::DLNA::CDLNA::~CDLNA(void)
{
}

/*virtual*/
bool
acs::generated::shadow::DLNA::CDLNA::InitializeMOSTElement()
{
	k2l::acs::protocols::most::CMOSTDataType *elements[8];
m_versionFunction.FunctionID( 0x10 );
m_versionFunction.Notification( false );
m_versionFunction.AutomaticNotification( true );
m_versionFunction.SupportedOperations( 0x9002 );
elements[0] = &m_versionMajorParameter;
elements[1] = &m_versionMinorParameter;
elements[2] = &m_versionBuildParameter;
m_versionFunction.SetDataItems(12, 3, elements);
AddFunction( &m_versionFunction );
m_fBlockInfoFunction.FunctionID( 0x11 );
m_fBlockInfoFunction.Notification( false );
m_fBlockInfoFunction.AutomaticNotification( true );
m_fBlockInfoFunction.SupportedOperations( 0x9002 );
m_fBlockInfoFunctionMaturityParameterSpec.Values( 6, m_fBlockInfoFunctionMaturityParameterSpecValues );
m_fBlockInfoFBlockNameParameterSpec.MaxCharacters( 0 );
m_fBlockInfoSupplierVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFBlockVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoMOSTVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoSystemIntegratorParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFBlockTypeParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFunctionMaturityParameter.SetValidator( &m_fBlockInfoFunctionMaturityParameterSpec );
m_fBlockInfoFunctionMaturityParameter.Value( m_fBlockInfoFunctionMaturityParameterSpecValues[0] );
m_fBlockInfoFBlockNameParameter.SetValidator( &m_fBlockInfoFBlockNameParameterSpec );
m_fBlockInfoSupplierVersionParameter.SetValidator( &m_fBlockInfoSupplierVersionParameterSpec );
m_fBlockInfoFBlockVersionParameter.SetValidator( &m_fBlockInfoFBlockVersionParameterSpec );
m_fBlockInfoMOSTVersionParameter.SetValidator( &m_fBlockInfoMOSTVersionParameterSpec );
m_fBlockInfoSystemIntegratorParameter.SetValidator( &m_fBlockInfoSystemIntegratorParameterSpec );
m_fBlockInfoFBlockTypeParameter.SetValidator( &m_fBlockInfoFBlockTypeParameterSpec );
elements[0] = &m_fBlockInfoFunctionMaturityParameter;
m_fBlockInfoDescription0RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription0Parameter.SetRecordFix( m_fBlockInfoDescription0RecordFixParameter );
m_fBlockInfoDescription0RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription0Parameter.SetRecordIterator( m_fBlockInfoDescription0RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockNameParameter;
elements[1] = &m_fBlockInfoSupplierVersionParameter;
elements[2] = &m_fBlockInfoFBlockVersionParameter;
elements[3] = &m_fBlockInfoMOSTVersionParameter;
elements[4] = &m_fBlockInfoSystemIntegratorParameter;
elements[5] = &m_fBlockInfoFBlockTypeParameter;
m_fBlockInfoDescription61440RecordFixParameter.SetMembers( 6, elements );
m_fBlockInfoDescription61440Parameter.SetRecordFix( m_fBlockInfoDescription61440RecordFixParameter );
m_fBlockInfoDescription61440RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61440Parameter.SetRecordIterator( m_fBlockInfoDescription61440RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockNameParameter;
m_fBlockInfoDescription61441RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61441Parameter.SetRecordFix( m_fBlockInfoDescription61441RecordFixParameter );
m_fBlockInfoDescription61441RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61441Parameter.SetRecordIterator( m_fBlockInfoDescription61441RecordIteratorParameter );
elements[0] = &m_fBlockInfoSupplierVersionParameter;
m_fBlockInfoDescription61442RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61442Parameter.SetRecordFix( m_fBlockInfoDescription61442RecordFixParameter );
m_fBlockInfoDescription61442RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61442Parameter.SetRecordIterator( m_fBlockInfoDescription61442RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockVersionParameter;
m_fBlockInfoDescription61443RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61443Parameter.SetRecordFix( m_fBlockInfoDescription61443RecordFixParameter );
m_fBlockInfoDescription61443RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61443Parameter.SetRecordIterator( m_fBlockInfoDescription61443RecordIteratorParameter );
elements[0] = &m_fBlockInfoMOSTVersionParameter;
m_fBlockInfoDescription61444RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61444Parameter.SetRecordFix( m_fBlockInfoDescription61444RecordFixParameter );
m_fBlockInfoDescription61444RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61444Parameter.SetRecordIterator( m_fBlockInfoDescription61444RecordIteratorParameter );
elements[0] = &m_fBlockInfoSystemIntegratorParameter;
m_fBlockInfoDescription61445RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61445Parameter.SetRecordFix( m_fBlockInfoDescription61445RecordFixParameter );
m_fBlockInfoDescription61445RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61445Parameter.SetRecordIterator( m_fBlockInfoDescription61445RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockTypeParameter;
m_fBlockInfoDescription61446RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61446Parameter.SetRecordFix( m_fBlockInfoDescription61446RecordFixParameter );
m_fBlockInfoDescription61446RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61446Parameter.SetRecordIterator( m_fBlockInfoDescription61446RecordIteratorParameter );
{
    uint32_t minValues[] = {0, 61440, 61441, 61442, 61443, 61444, 61445, 61446};
    uint32_t maxValues[] = {4095, 61440, 61441, 61442, 61443, 61444, 61445, 61446};
    k2l::acs::protocols::most::CMOSTList* streamCases[] = { &m_fBlockInfoDescription0Parameter,  &m_fBlockInfoDescription61440Parameter,  &m_fBlockInfoDescription61441Parameter,  &m_fBlockInfoDescription61442Parameter,  &m_fBlockInfoDescription61443Parameter,  &m_fBlockInfoDescription61444Parameter,  &m_fBlockInfoDescription61445Parameter,  &m_fBlockInfoDescription61446Parameter};
    m_fBlockInfoDescriptionParameter.SetStreamCases( 8, minValues, maxValues, streamCases );
}
m_fBlockInfoDescriptionParameter.SetSelector( m_fBlockInfoIDParameter );
elements[0] = &m_fBlockInfoIDParameter;
elements[1] = &m_fBlockInfoDescriptionParameter;
m_fBlockInfoFunction.SetDataItems(12, 2, elements);
elements[0] = &m_fBlockInfoIDParameter;
m_fBlockInfoFunction.SetDataItems(1, 1, elements);
AddFunction( &m_fBlockInfoFunction );
m_deckStatusFunction.FunctionID( 0x200 );
m_deckStatusFunction.Notification( true );
m_deckStatusFunction.AutomaticNotification( true );
m_deckStatusFunction.SupportedOperations( 0x9007 );
m_deckStatusParameterSpec.Values( 32, m_deckStatusParameterSpecValues );
m_deckStatusParameter.SetValidator( &m_deckStatusParameterSpec );
m_deckStatusParameter.Value( m_deckStatusParameterSpecValues[0] );
elements[0] = &m_deckStatusParameter;
m_deckStatusFunction.SetDataItems(0, 1, elements);
elements[0] = &m_deckStatusParameter;
m_deckStatusFunction.SetDataItems(2, 1, elements);
elements[0] = &m_deckStatusParameter;
m_deckStatusFunction.SetDataItems(12, 1, elements);
AddFunction( &m_deckStatusFunction );
m_timePositionFunction.FunctionID( 0x201 );
m_timePositionFunction.Notification( true );
m_timePositionFunction.AutomaticNotification( true );
m_timePositionFunction.SupportedOperations( 0x901F );
elements[0] = &m_timePositionDataDiskTimeParameter;
elements[1] = &m_timePositionDataTrackTimeParameter;
elements[2] = &m_timePositionDataTitleTimeParameter;
m_timePositionFunction.SetMembers( 3, elements );
AddFunction( &m_timePositionFunction );
m_trackPositionFunction.FunctionID( 0x202 );
m_trackPositionFunction.Notification( true );
m_trackPositionFunction.AutomaticNotification( true );
m_trackPositionFunction.SupportedOperations( 0x901F );
m_trackPositionFunction.SetValueType( &m_trackPositionTrackParameter );
AddFunction( &m_trackPositionFunction );
m_trackInformationFunction.FunctionID( 0x434 );
m_trackInformationFunction.Notification( true );
m_trackInformationFunction.AutomaticNotification( true );
m_trackInformationFunction.SupportedOperations( 0x9002 );
elements[0] = &m_trackInformationCurrentNumberTracksParameter;
elements[1] = &m_trackInformationCurrentRelativeTrackPositionParameter;
m_trackInformationFunction.SetDataItems(12, 2, elements);
AddFunction( &m_trackInformationFunction );
m_currentSongInfoFunction.FunctionID( 0xC01 );
m_currentSongInfoFunction.Notification( true );
m_currentSongInfoFunction.AutomaticNotification( true );
m_currentSongInfoFunction.SupportedOperations( 0x9002 );
m_currentSongInfoTitleParameterSpec.MaxCharacters( 255 );
m_currentSongInfoTitleParameter.SetValidator( &m_currentSongInfoTitleParameterSpec );
m_currentSongInfoFileNameParameterSpec.MaxCharacters( 255 );
m_currentSongInfoFileNameParameter.SetValidator( &m_currentSongInfoFileNameParameterSpec );
m_currentSongInfoArtistParameterSpec.MaxCharacters( 255 );
m_currentSongInfoArtistParameter.SetValidator( &m_currentSongInfoArtistParameterSpec );
m_currentSongInfoAlbumParameterSpec.MaxCharacters( 255 );
m_currentSongInfoAlbumParameter.SetValidator( &m_currentSongInfoAlbumParameterSpec );
m_currentSongInfoGenreParameterSpec.MaxCharacters( 255 );
m_currentSongInfoGenreParameter.SetValidator( &m_currentSongInfoGenreParameterSpec );
elements[0] = &m_currentSongInfoTitleParameter;
elements[1] = &m_currentSongInfoPlayTimeParameter;
elements[2] = &m_currentSongInfoTrackNoParameter;
elements[3] = &m_currentSongInfoFileNameParameter;
elements[4] = &m_currentSongInfoArtistParameter;
elements[5] = &m_currentSongInfoAlbumParameter;
elements[6] = &m_currentSongInfoGenreParameter;
m_currentSongInfoFunction.SetDataItems(12, 7, elements);
AddFunction( &m_currentSongInfoFunction );
m_currentVideoInfoFunction.FunctionID( 0xC05 );
m_currentVideoInfoFunction.Notification( true );
m_currentVideoInfoFunction.AutomaticNotification( true );
m_currentVideoInfoFunction.SupportedOperations( 0x9002 );
m_currentVideoInfoVideoTitleParameterSpec.MaxCharacters( 50 );
m_currentVideoInfoVideoTitleParameter.SetValidator( &m_currentVideoInfoVideoTitleParameterSpec );
m_currentVideoInfoVideoFilenameParameterSpec.MaxCharacters( 100 );
m_currentVideoInfoVideoFilenameParameter.SetValidator( &m_currentVideoInfoVideoFilenameParameterSpec );
elements[0] = &m_currentVideoInfoVideoTitleParameter;
elements[1] = &m_currentVideoInfoVideoTimeParameter;
elements[2] = &m_currentVideoInfoVideoTrackParameter;
elements[3] = &m_currentVideoInfoVideoFilenameParameter;
m_currentVideoInfoFunction.SetDataItems(12, 4, elements);
AddFunction( &m_currentVideoInfoFunction );
m_dLNAConnectionFunction.FunctionID( 0xC10 );
m_dLNAConnectionFunction.Notification( true );
m_dLNAConnectionFunction.AutomaticNotification( true );
m_dLNAConnectionFunction.SupportedOperations( 0x9002 );
m_dLNAConnectionDLNAStatausParameterSpec.Values( 3, m_dLNAConnectionDLNAStatausParameterSpecValues );
m_dLNAConnectionDLNAStatausParameter.SetValidator( &m_dLNAConnectionDLNAStatausParameterSpec );
m_dLNAConnectionDLNAStatausParameter.Value( m_dLNAConnectionDLNAStatausParameterSpecValues[0] );
m_dLNAConnectionFunction.SetValueType( &m_dLNAConnectionDLNAStatausParameter );
AddFunction( &m_dLNAConnectionFunction );
AddFunction( &m_notificationCheckFunction );
AddFunction( &m_notificationFunction );
AddFunction( &m_fktIDsFunction );
NotificationService( &m_notificationFunction );
m_notificationFunction.Update();
m_fktIDsFunction.Update();
return true;
}


/*=============================================================================
 * END OF FILE
 *=============================================================================*/
