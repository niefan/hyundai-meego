/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2012-09-06.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

/**
 * HMC DH Fcat v1.20.1
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

#include "DHAVN_MOSTManager_BluetoothFBlock.h"


acs::generated::fblock::Bluetooth::CVersion::CVersion(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CVersion::~CVersion(void)
{
}
void acs::generated::fblock::Bluetooth::CVersion::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_versionFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CVersion::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_versionFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::fblock::Bluetooth::CVersion::FunctionInstance(void)
{
	return m_pInstance->m_versionFunction;
}
bool acs::generated::fblock::Bluetooth::CVersion::MajorValue( uint8_t value )
{
    return m_pInstance->m_versionMajorParameter.Value( value );
}

uint8_t acs::generated::fblock::Bluetooth::CVersion::MajorValue() const
{
	return m_pInstance->m_versionMajorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::fblock::Bluetooth::CVersion::MajorDataType()
{
    return m_pInstance->m_versionMajorParameter;
}
bool acs::generated::fblock::Bluetooth::CVersion::MinorValue( uint8_t value )
{
    return m_pInstance->m_versionMinorParameter.Value( value );
}

uint8_t acs::generated::fblock::Bluetooth::CVersion::MinorValue() const
{
	return m_pInstance->m_versionMinorParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::fblock::Bluetooth::CVersion::MinorDataType()
{
    return m_pInstance->m_versionMinorParameter;
}
bool acs::generated::fblock::Bluetooth::CVersion::BuildValue( uint8_t value )
{
    return m_pInstance->m_versionBuildParameter.Value( value );
}

uint8_t acs::generated::fblock::Bluetooth::CVersion::BuildValue() const
{
	return m_pInstance->m_versionBuildParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::fblock::Bluetooth::CVersion::BuildDataType()
{
    return m_pInstance->m_versionBuildParameter;
}
bool acs::generated::fblock::Bluetooth::CVersion::UpdateShadows()
{
    return m_pInstance->m_versionFunction.UpdateShadows();
}
bool acs::generated::fblock::Bluetooth::CVersion::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t * payload )
{
    return m_pInstance->m_versionFunction.Error( targetDevice, payloadLength, payload );
}
bool acs::generated::fblock::Bluetooth::CVersion::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_versionFunction.Error( targetDevice, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CFBlockInfo::CFBlockInfo(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CFBlockInfo::~CFBlockInfo(void)
{
}
void acs::generated::fblock::Bluetooth::CFBlockInfo::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_fBlockInfoFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_fBlockInfoFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& acs::generated::fblock::Bluetooth::CFBlockInfo::FunctionInstance(void)
{
	return m_pInstance->m_fBlockInfoFunction;
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::IDValue( uint16_t value )
{
    return m_pInstance->m_fBlockInfoIDParameter.Value( value );
}

uint16_t acs::generated::fblock::Bluetooth::CFBlockInfo::IDValue() const
{
	return m_pInstance->m_fBlockInfoIDParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::fblock::Bluetooth::CFBlockInfo::IDDataType()
{
    return m_pInstance->m_fBlockInfoIDParameter;
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FunctionMaturityValue( acs::generated::fblock::Bluetooth::CFBlockInfo::TFunctionMaturity value )
{
    return m_pInstance->m_fBlockInfoFunctionMaturityParameter.Value( value );
}

acs::generated::fblock::Bluetooth::CFBlockInfo::TFunctionMaturity acs::generated::fblock::Bluetooth::CFBlockInfo::FunctionMaturityValue() const
{
	return (acs::generated::fblock::Bluetooth::CFBlockInfo::TFunctionMaturity)m_pInstance->m_fBlockInfoFunctionMaturityParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::fblock::Bluetooth::CFBlockInfo::FunctionMaturityDataType()
{
    return m_pInstance->m_fBlockInfoFunctionMaturityParameter;
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameValue() const
{
	return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameDataType()
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameLength() const
{
	return m_pInstance->m_fBlockInfoFBlockNameParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockNameParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionValue() const
{
	return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionDataType()
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionLength() const
{
	return m_pInstance->m_fBlockInfoSupplierVersionParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoSupplierVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionValue() const
{
	return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionDataType()
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionLength() const
{
	return m_pInstance->m_fBlockInfoFBlockVersionParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionValue() const
{
	return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionDataType()
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionLength() const
{
	return m_pInstance->m_fBlockInfoMOSTVersionParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoMOSTVersionParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorValue() const
{
	return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorDataType()
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorLength() const
{
	return m_pInstance->m_fBlockInfoSystemIntegratorParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoSystemIntegratorParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeValue() const
{
	return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeDataType()
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeLength() const
{
	return m_pInstance->m_fBlockInfoFBlockTypeParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_fBlockInfoFBlockTypeParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::DescriptionValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.Stream( value, length );
}

const uint8_t * acs::generated::fblock::Bluetooth::CFBlockInfo::DescriptionValue() const
{
	return m_pInstance->m_fBlockInfoDescriptionParameter.Stream();
}
::k2l::acs::protocols::most::CMOSTCaseStream& acs::generated::fblock::Bluetooth::CFBlockInfo::DescriptionDataType()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CFBlockInfo::DescriptionStreamLength() const
{
	return m_pInstance->m_fBlockInfoDescriptionParameter.StreamLength();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::DescriptionLoadNext()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.LoadNext();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::DescriptionSaveNext()
{
    return m_pInstance->m_fBlockInfoDescriptionParameter.SaveNext();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::UpdateShadows()
{
    return m_pInstance->m_fBlockInfoFunction.UpdateShadows();
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t * payload )
{
    return m_pInstance->m_fBlockInfoFunction.Error( targetDevice, payloadLength, payload );
}
bool acs::generated::fblock::Bluetooth::CFBlockInfo::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_fBlockInfoFunction.Error( targetDevice, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CDialNumber::CDialNumber(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CDialNumber::~CDialNumber(void)
{
}
void acs::generated::fblock::Bluetooth::CDialNumber::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_dialNumberFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_dialNumberFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& acs::generated::fblock::Bluetooth::CDialNumber::FunctionInstance(void)
{
	return m_pInstance->m_dialNumberFunction;
}
bool acs::generated::fblock::Bluetooth::CDialNumber::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_dialNumberSenderHandleParameter.Value( value );
}

uint16_t acs::generated::fblock::Bluetooth::CDialNumber::SenderHandleValue() const
{
	return m_pInstance->m_dialNumberSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::fblock::Bluetooth::CDialNumber::SenderHandleDataType()
{
    return m_pInstance->m_dialNumberSenderHandleParameter;
}
bool acs::generated::fblock::Bluetooth::CDialNumber::CallIdValue( uint8_t value )
{
    return m_pInstance->m_dialNumberCallIdParameter.Value( value );
}

uint8_t acs::generated::fblock::Bluetooth::CDialNumber::CallIdValue() const
{
	return m_pInstance->m_dialNumberCallIdParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::fblock::Bluetooth::CDialNumber::CallIdDataType()
{
    return m_pInstance->m_dialNumberCallIdParameter;
}
bool acs::generated::fblock::Bluetooth::CDialNumber::ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_dialNumberSenderHandleParameter), 
&(m_pInstance->m_dialNumberCallIdParameter) };
    return m_pInstance->m_dialNumberFunction.ResultAck( targetDevice, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::TelNumberValue( uint8_t * value, uint32_t length )
{
    return m_pInstance->m_dialNumberTelNumberParameter.MOSTString( value, length );
}

uint8_t * acs::generated::fblock::Bluetooth::CDialNumber::TelNumberValue() const
{
	return m_pInstance->m_dialNumberTelNumberParameter.MOSTStringContent();
}
::k2l::acs::protocols::most::CMOSTString& acs::generated::fblock::Bluetooth::CDialNumber::TelNumberDataType()
{
    return m_pInstance->m_dialNumberTelNumberParameter;
}
uint32_t acs::generated::fblock::Bluetooth::CDialNumber::TelNumberLength() const
{
	return m_pInstance->m_dialNumberTelNumberParameter.MOSTStringLength();
}
bool acs::generated::fblock::Bluetooth::CDialNumber::TelNumberAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding )            
{
    return m_pInstance->m_dialNumberTelNumberParameter.AddEncoding( mostStringIdentifier, pStringEncoding );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::TelNumberString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes )
{
    return m_pInstance->m_dialNumberTelNumberParameter.String( pStringEncoding, pStringContent, stringLengthBytes );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::TelNumberString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength )
{
    return m_pInstance->m_dialNumberTelNumberParameter.String( ppStringEncoding, ppString, pStringLength );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_dialNumberSenderHandleParameter), 
&(m_pInstance->m_dialNumberTelNumberParameter) };
    return m_pInstance->m_dialNumberFunction.ParsePayload( payloadLength, payload, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::ParseStartAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_dialNumberSenderHandleParameter), 
&(m_pInstance->m_dialNumberTelNumberParameter) };
    return m_pInstance->m_dialNumberFunction.ParsePayload( payloadLength, payload, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle )
{
    return m_pInstance->m_dialNumberFunction.ProcessingAck( targetDevice, senderHandle );
}
void acs::generated::fblock::Bluetooth::CDialNumber::SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler )
{
    m_pInstance->m_dialNumberFunction.SetHandler( pHandler );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_dialNumberFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}
bool acs::generated::fblock::Bluetooth::CDialNumber::ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_dialNumberFunction.ErrorAck( targetDevice, senderHandle, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CHangupCall::CHangupCall(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CHangupCall::~CHangupCall(void)
{
}
void acs::generated::fblock::Bluetooth::CHangupCall::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_hangupCallFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CHangupCall::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_hangupCallFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& acs::generated::fblock::Bluetooth::CHangupCall::FunctionInstance(void)
{
	return m_pInstance->m_hangupCallFunction;
}
bool acs::generated::fblock::Bluetooth::CHangupCall::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_hangupCallSenderHandleParameter.Value( value );
}

uint16_t acs::generated::fblock::Bluetooth::CHangupCall::SenderHandleValue() const
{
	return m_pInstance->m_hangupCallSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::fblock::Bluetooth::CHangupCall::SenderHandleDataType()
{
    return m_pInstance->m_hangupCallSenderHandleParameter;
}
bool acs::generated::fblock::Bluetooth::CHangupCall::CallIdValue( uint8_t value )
{
    return m_pInstance->m_hangupCallCallIdParameter.Value( value );
}

uint8_t acs::generated::fblock::Bluetooth::CHangupCall::CallIdValue() const
{
	return m_pInstance->m_hangupCallCallIdParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::fblock::Bluetooth::CHangupCall::CallIdDataType()
{
    return m_pInstance->m_hangupCallCallIdParameter;
}
bool acs::generated::fblock::Bluetooth::CHangupCall::ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_hangupCallSenderHandleParameter), 
&(m_pInstance->m_hangupCallCallIdParameter) };
    return m_pInstance->m_hangupCallFunction.ParsePayload( payloadLength, payload, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CHangupCall::ParseStartAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_hangupCallSenderHandleParameter), 
&(m_pInstance->m_hangupCallCallIdParameter) };
    return m_pInstance->m_hangupCallFunction.ParsePayload( payloadLength, payload, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CHangupCall::ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_hangupCallSenderHandleParameter), 
&(m_pInstance->m_hangupCallCallIdParameter) };
    return m_pInstance->m_hangupCallFunction.ResultAck( targetDevice, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CHangupCall::ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle )
{
    return m_pInstance->m_hangupCallFunction.ProcessingAck( targetDevice, senderHandle );
}
void acs::generated::fblock::Bluetooth::CHangupCall::SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler )
{
    m_pInstance->m_hangupCallFunction.SetHandler( pHandler );
}
bool acs::generated::fblock::Bluetooth::CHangupCall::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_hangupCallFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}
bool acs::generated::fblock::Bluetooth::CHangupCall::ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_hangupCallFunction.ErrorAck( targetDevice, senderHandle, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CCallState::CCallState(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CCallState::~CCallState(void)
{
}
void acs::generated::fblock::Bluetooth::CCallState::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_callStateFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CCallState::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_callStateFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassArray& acs::generated::fblock::Bluetooth::CCallState::FunctionInstance(void)
{
	return m_pInstance->m_callStateFunction;
}
bool acs::generated::fblock::Bluetooth::CCallState::DataCallStateValue( uint8_t index, acs::generated::fblock::Bluetooth::CCallState::TDataCallState value )
{
    return m_pInstance->m_callStateDataCallStateParameter[ index ].Value( value );
}

acs::generated::fblock::Bluetooth::CCallState::TDataCallState acs::generated::fblock::Bluetooth::CCallState::DataCallStateValue( uint8_t index ) const
{
	return (acs::generated::fblock::Bluetooth::CCallState::TDataCallState)m_pInstance->m_callStateDataCallStateParameter[ index ].Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::fblock::Bluetooth::CCallState::DataCallStateDataType( uint8_t index )
{
    return m_pInstance->m_callStateDataCallStateParameter[ index ];
}
bool acs::generated::fblock::Bluetooth::CCallState::DataCallTypeValue( uint8_t index, acs::generated::fblock::Bluetooth::CCallState::TDataCallType value )
{
    return m_pInstance->m_callStateDataCallTypeParameter[ index ].Value( value );
}

acs::generated::fblock::Bluetooth::CCallState::TDataCallType acs::generated::fblock::Bluetooth::CCallState::DataCallTypeValue( uint8_t index ) const
{
	return (acs::generated::fblock::Bluetooth::CCallState::TDataCallType)m_pInstance->m_callStateDataCallTypeParameter[ index ].Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::fblock::Bluetooth::CCallState::DataCallTypeDataType( uint8_t index )
{
    return m_pInstance->m_callStateDataCallTypeParameter[ index ];
}
::k2l::acs::protocols::most::CMOSTRecord& acs::generated::fblock::Bluetooth::CCallState::RecordDataType( uint8_t index )
{
    return m_pInstance->m_callStateDataRecordParameter[ index ];
}
uint32_t acs::generated::fblock::Bluetooth::CCallState::Size() const
{
    return m_pInstance->m_callStateFunction.Array().Size();
}
bool acs::generated::fblock::Bluetooth::CCallState::Size( uint32_t newSize )
{
    return m_pInstance->m_callStateFunction.Array().Size( newSize );
}
bool acs::generated::fblock::Bluetooth::CCallState::UpdateShadows()
{
    return m_pInstance->m_callStateFunction.UpdateShadows();
}
::k2l::acs::protocols::most::CMOSTArray& acs::generated::fblock::Bluetooth::CCallState::DataType( uint8_t index )
{
    return m_pInstance->m_callStateFunction.Array();
}
bool acs::generated::fblock::Bluetooth::CCallState::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t * payload )
{
    return m_pInstance->m_callStateFunction.Error( targetDevice, payloadLength, payload );
}
bool acs::generated::fblock::Bluetooth::CCallState::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_callStateFunction.Error( targetDevice, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CAcceptCall::CAcceptCall(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CAcceptCall::~CAcceptCall(void)
{
}
void acs::generated::fblock::Bluetooth::CAcceptCall::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_acceptCallFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_acceptCallFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& acs::generated::fblock::Bluetooth::CAcceptCall::FunctionInstance(void)
{
	return m_pInstance->m_acceptCallFunction;
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_acceptCallSenderHandleParameter.Value( value );
}

uint16_t acs::generated::fblock::Bluetooth::CAcceptCall::SenderHandleValue() const
{
	return m_pInstance->m_acceptCallSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::fblock::Bluetooth::CAcceptCall::SenderHandleDataType()
{
    return m_pInstance->m_acceptCallSenderHandleParameter;
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::CallIdValue( uint8_t value )
{
    return m_pInstance->m_acceptCallCallIdParameter.Value( value );
}

uint8_t acs::generated::fblock::Bluetooth::CAcceptCall::CallIdValue() const
{
	return m_pInstance->m_acceptCallCallIdParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedByte& acs::generated::fblock::Bluetooth::CAcceptCall::CallIdDataType()
{
    return m_pInstance->m_acceptCallCallIdParameter;
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_acceptCallSenderHandleParameter), 
&(m_pInstance->m_acceptCallCallIdParameter) };
    return m_pInstance->m_acceptCallFunction.ParsePayload( payloadLength, payload, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::ParseStartAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_acceptCallSenderHandleParameter), 
&(m_pInstance->m_acceptCallCallIdParameter) };
    return m_pInstance->m_acceptCallFunction.ParsePayload( payloadLength, payload, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[2] = { &(m_pInstance->m_acceptCallSenderHandleParameter), 
&(m_pInstance->m_acceptCallCallIdParameter) };
    return m_pInstance->m_acceptCallFunction.ResultAck( targetDevice, 2, parameters );
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle )
{
    return m_pInstance->m_acceptCallFunction.ProcessingAck( targetDevice, senderHandle );
}
void acs::generated::fblock::Bluetooth::CAcceptCall::SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler )
{
    m_pInstance->m_acceptCallFunction.SetHandler( pHandler );
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_acceptCallFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}
bool acs::generated::fblock::Bluetooth::CAcceptCall::ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_acceptCallFunction.ErrorAck( targetDevice, senderHandle, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CCallHold::CCallHold(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CCallHold::~CCallHold(void)
{
}
void acs::generated::fblock::Bluetooth::CCallHold::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_callHoldFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CCallHold::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_callHoldFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& acs::generated::fblock::Bluetooth::CCallHold::FunctionInstance(void)
{
	return m_pInstance->m_callHoldFunction;
}
bool acs::generated::fblock::Bluetooth::CCallHold::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_callHoldSenderHandleParameter.Value( value );
}

uint16_t acs::generated::fblock::Bluetooth::CCallHold::SenderHandleValue() const
{
	return m_pInstance->m_callHoldSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::fblock::Bluetooth::CCallHold::SenderHandleDataType()
{
    return m_pInstance->m_callHoldSenderHandleParameter;
}
bool acs::generated::fblock::Bluetooth::CCallHold::ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_callHoldSenderHandleParameter) };
    return m_pInstance->m_callHoldFunction.ParsePayload( payloadLength, payload, 1, parameters );
}
bool acs::generated::fblock::Bluetooth::CCallHold::ParseStartAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_callHoldSenderHandleParameter) };
    return m_pInstance->m_callHoldFunction.ParsePayload( payloadLength, payload, 1, parameters );
}
bool acs::generated::fblock::Bluetooth::CCallHold::ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_callHoldSenderHandleParameter) };
    return m_pInstance->m_callHoldFunction.ResultAck( targetDevice, 1, parameters );
}
bool acs::generated::fblock::Bluetooth::CCallHold::ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle )
{
    return m_pInstance->m_callHoldFunction.ProcessingAck( targetDevice, senderHandle );
}
void acs::generated::fblock::Bluetooth::CCallHold::SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler )
{
    m_pInstance->m_callHoldFunction.SetHandler( pHandler );
}
bool acs::generated::fblock::Bluetooth::CCallHold::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_callHoldFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}
bool acs::generated::fblock::Bluetooth::CCallHold::ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_callHoldFunction.ErrorAck( targetDevice, senderHandle, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CResumeCall::CResumeCall(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CResumeCall::~CResumeCall(void)
{
}
void acs::generated::fblock::Bluetooth::CResumeCall::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_resumeCallFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CResumeCall::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_resumeCallFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& acs::generated::fblock::Bluetooth::CResumeCall::FunctionInstance(void)
{
	return m_pInstance->m_resumeCallFunction;
}
bool acs::generated::fblock::Bluetooth::CResumeCall::SenderHandleValue( uint16_t value )
{
    return m_pInstance->m_resumeCallSenderHandleParameter.Value( value );
}

uint16_t acs::generated::fblock::Bluetooth::CResumeCall::SenderHandleValue() const
{
	return m_pInstance->m_resumeCallSenderHandleParameter.Value();
}
::k2l::acs::protocols::most::CMOSTUnsignedWord& acs::generated::fblock::Bluetooth::CResumeCall::SenderHandleDataType()
{
    return m_pInstance->m_resumeCallSenderHandleParameter;
}
bool acs::generated::fblock::Bluetooth::CResumeCall::ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_resumeCallSenderHandleParameter) };
    return m_pInstance->m_resumeCallFunction.ParsePayload( payloadLength, payload, 1, parameters );
}
bool acs::generated::fblock::Bluetooth::CResumeCall::ParseStartAck( uint32_t payloadLength, const uint8_t * payload )
						{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_resumeCallSenderHandleParameter) };
    return m_pInstance->m_resumeCallFunction.ParsePayload( payloadLength, payload, 1, parameters );
}
bool acs::generated::fblock::Bluetooth::CResumeCall::ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice )
{
    ::k2l::acs::protocols::most::CMOSTDataType* parameters[1] = { &(m_pInstance->m_resumeCallSenderHandleParameter) };
    return m_pInstance->m_resumeCallFunction.ResultAck( targetDevice, 1, parameters );
}
bool acs::generated::fblock::Bluetooth::CResumeCall::ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle )
{
    return m_pInstance->m_resumeCallFunction.ProcessingAck( targetDevice, senderHandle );
}
void acs::generated::fblock::Bluetooth::CResumeCall::SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler )
{
    m_pInstance->m_resumeCallFunction.SetHandler( pHandler );
}
bool acs::generated::fblock::Bluetooth::CResumeCall::ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle )
{
    return m_pInstance->m_resumeCallFunction.ParseSenderHandle( payloadLength, payload, pSenderHandle );
}
bool acs::generated::fblock::Bluetooth::CResumeCall::ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_resumeCallFunction.ErrorAck( targetDevice, senderHandle, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CBTStatus::CBTStatus(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CBTStatus::~CBTStatus(void)
{
}
void acs::generated::fblock::Bluetooth::CBTStatus::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_bTStatusFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CBTStatus::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_bTStatusFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration& acs::generated::fblock::Bluetooth::CBTStatus::FunctionInstance(void)
{
	return m_pInstance->m_bTStatusFunction;
}
bool acs::generated::fblock::Bluetooth::CBTStatus::UpdateShadows()
{
    return m_pInstance->m_bTStatusFunction.UpdateShadows();
}
bool acs::generated::fblock::Bluetooth::CBTStatus::Value( acs::generated::fblock::Bluetooth::CBTStatus::TBTMode value )
{
    return m_pInstance->m_bTStatusBTModeParameter.Value( value );
}

acs::generated::fblock::Bluetooth::CBTStatus::TBTMode acs::generated::fblock::Bluetooth::CBTStatus::Value() const
{
	return (acs::generated::fblock::Bluetooth::CBTStatus::TBTMode)m_pInstance->m_bTStatusBTModeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::fblock::Bluetooth::CBTStatus::DataType()
{
    return m_pInstance->m_bTStatusBTModeParameter;
}
bool acs::generated::fblock::Bluetooth::CBTStatus::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t * payload )
{
    return m_pInstance->m_bTStatusFunction.Error( targetDevice, payloadLength, payload );
}
bool acs::generated::fblock::Bluetooth::CBTStatus::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_bTStatusFunction.Error( targetDevice, errorCode, errorInfoLength, pErrorInfo );
}



acs::generated::fblock::Bluetooth::CUserMode::CUserMode(acs::generated::fblock::Bluetooth::CBluetooth *pInstance) : m_pInstance(pInstance)
{
}
acs::generated::fblock::Bluetooth::CUserMode::~CUserMode(void)
{
}
void acs::generated::fblock::Bluetooth::CUserMode::SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener)
{
	m_pInstance->m_userModeFunction.SetListener( pListener );
}
bool acs::generated::fblock::Bluetooth::CUserMode::RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener)
{
	return m_pInstance->m_userModeFunction.RemoveListener( pListener );
}
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& acs::generated::fblock::Bluetooth::CUserMode::FunctionInstance(void)
{
	return m_pInstance->m_userModeFunction;
}
bool acs::generated::fblock::Bluetooth::CUserMode::UserModeValue( acs::generated::fblock::Bluetooth::CUserMode::TUserMode value )
{
    return m_pInstance->m_userModeParameter.Value( value );
}

acs::generated::fblock::Bluetooth::CUserMode::TUserMode acs::generated::fblock::Bluetooth::CUserMode::UserModeValue() const
{
	return (acs::generated::fblock::Bluetooth::CUserMode::TUserMode)m_pInstance->m_userModeParameter.Value();
}
::k2l::acs::protocols::most::CMOSTEnum& acs::generated::fblock::Bluetooth::CUserMode::UserModeDataType()
{
    return m_pInstance->m_userModeParameter;
}
bool acs::generated::fblock::Bluetooth::CUserMode::MicOffValue( bool value )
{
    return m_pInstance->m_userModeMicOffParameter.Value( value );
}

bool acs::generated::fblock::Bluetooth::CUserMode::MicOffValue() const
{
	return m_pInstance->m_userModeMicOffParameter.Value();
}
::k2l::acs::protocols::most::CMOSTBoolean& acs::generated::fblock::Bluetooth::CUserMode::MicOffDataType()
{
    return m_pInstance->m_userModeMicOffParameter;
}
bool acs::generated::fblock::Bluetooth::CUserMode::UpdateShadows()
{
    return m_pInstance->m_userModeFunction.UpdateShadows();
}
bool acs::generated::fblock::Bluetooth::CUserMode::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t * payload )
{
    return m_pInstance->m_userModeFunction.Error( targetDevice, payloadLength, payload );
}
bool acs::generated::fblock::Bluetooth::CUserMode::Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo )
{
    return m_pInstance->m_userModeFunction.Error( targetDevice, errorCode, errorInfoLength, pErrorInfo );
}


const uint8_t acs::generated::fblock::Bluetooth::CBluetooth::m_fBlockInfoFunctionMaturityParameterSpecValues[] = { 0, 1, 2, 3, 17, 18 };
const uint8_t acs::generated::fblock::Bluetooth::CBluetooth::m_callStateDataCallStateParameterSpecValues[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 255 };
const uint8_t acs::generated::fblock::Bluetooth::CBluetooth::m_callStateDataCallTypeParameterSpecValues[] = { 0, 1, 255 };
const uint8_t acs::generated::fblock::Bluetooth::CBluetooth::m_bTStatusBTModeParameterSpecValues[] = { 0, 1, 2, 3, 4, 255 };
const uint8_t acs::generated::fblock::Bluetooth::CBluetooth::m_userModeParameterSpecValues[] = { 0, 1, 2, 3, 4, 255 };


acs::generated::fblock::Bluetooth::CBluetooth::CBluetooth(k2l::acs::protocols::most::InstanceID_t instanceID):
	::k2l::acs::protocols::most::CFunctionBlockBase(FBlockID, instanceID)
{
}

acs::generated::fblock::Bluetooth::CBluetooth::CBluetooth(k2l::acs::protocols::most::FBlockID_t fblockID, k2l::acs::protocols::most::InstanceID_t instanceID):
	::k2l::acs::protocols::most::CFunctionBlockBase(fblockID, instanceID)
{
}

acs::generated::fblock::Bluetooth::CBluetooth::~CBluetooth(void)
{
}

/*virtual*/
bool
acs::generated::fblock::Bluetooth::CBluetooth::InitializeMOSTElement()
{
	uint32_t index = 0;
k2l::acs::protocols::most::CMOSTDataType *elements[255];
m_versionFunction.FunctionID( 0x10 );
m_versionFunction.Notification( false );
m_versionFunction.AutomaticNotification( true );
m_versionFunction.SupportedOperations( 0x9002 );
elements[0] = &m_versionMajorParameter;
elements[1] = &m_versionMinorParameter;
elements[2] = &m_versionBuildParameter;
m_versionFunction.SetDataItems(12, 3, elements);
AddFunction( &m_versionFunction );
m_fBlockInfoFunction.FunctionID( 0x11 );
m_fBlockInfoFunction.Notification( false );
m_fBlockInfoFunction.AutomaticNotification( true );
m_fBlockInfoFunction.SupportedOperations( 0x9002 );
m_fBlockInfoFunctionMaturityParameterSpec.Values( 6, m_fBlockInfoFunctionMaturityParameterSpecValues );
m_fBlockInfoFBlockNameParameterSpec.MaxCharacters( 0 );
m_fBlockInfoSupplierVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFBlockVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoMOSTVersionParameterSpec.MaxCharacters( 0 );
m_fBlockInfoSystemIntegratorParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFBlockTypeParameterSpec.MaxCharacters( 0 );
m_fBlockInfoFunctionMaturityParameter.SetValidator( &m_fBlockInfoFunctionMaturityParameterSpec );
m_fBlockInfoFunctionMaturityParameter.Value( m_fBlockInfoFunctionMaturityParameterSpecValues[0] );
m_fBlockInfoFBlockNameParameter.SetValidator( &m_fBlockInfoFBlockNameParameterSpec );
m_fBlockInfoSupplierVersionParameter.SetValidator( &m_fBlockInfoSupplierVersionParameterSpec );
m_fBlockInfoFBlockVersionParameter.SetValidator( &m_fBlockInfoFBlockVersionParameterSpec );
m_fBlockInfoMOSTVersionParameter.SetValidator( &m_fBlockInfoMOSTVersionParameterSpec );
m_fBlockInfoSystemIntegratorParameter.SetValidator( &m_fBlockInfoSystemIntegratorParameterSpec );
m_fBlockInfoFBlockTypeParameter.SetValidator( &m_fBlockInfoFBlockTypeParameterSpec );
elements[0] = &m_fBlockInfoFunctionMaturityParameter;
m_fBlockInfoDescription0RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription0Parameter.SetRecordFix( m_fBlockInfoDescription0RecordFixParameter );
m_fBlockInfoDescription0RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription0Parameter.SetRecordIterator( m_fBlockInfoDescription0RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockNameParameter;
elements[1] = &m_fBlockInfoSupplierVersionParameter;
elements[2] = &m_fBlockInfoFBlockVersionParameter;
elements[3] = &m_fBlockInfoMOSTVersionParameter;
elements[4] = &m_fBlockInfoSystemIntegratorParameter;
elements[5] = &m_fBlockInfoFBlockTypeParameter;
m_fBlockInfoDescription61440RecordFixParameter.SetMembers( 6, elements );
m_fBlockInfoDescription61440Parameter.SetRecordFix( m_fBlockInfoDescription61440RecordFixParameter );
m_fBlockInfoDescription61440RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61440Parameter.SetRecordIterator( m_fBlockInfoDescription61440RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockNameParameter;
m_fBlockInfoDescription61441RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61441Parameter.SetRecordFix( m_fBlockInfoDescription61441RecordFixParameter );
m_fBlockInfoDescription61441RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61441Parameter.SetRecordIterator( m_fBlockInfoDescription61441RecordIteratorParameter );
elements[0] = &m_fBlockInfoSupplierVersionParameter;
m_fBlockInfoDescription61442RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61442Parameter.SetRecordFix( m_fBlockInfoDescription61442RecordFixParameter );
m_fBlockInfoDescription61442RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61442Parameter.SetRecordIterator( m_fBlockInfoDescription61442RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockVersionParameter;
m_fBlockInfoDescription61443RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61443Parameter.SetRecordFix( m_fBlockInfoDescription61443RecordFixParameter );
m_fBlockInfoDescription61443RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61443Parameter.SetRecordIterator( m_fBlockInfoDescription61443RecordIteratorParameter );
elements[0] = &m_fBlockInfoMOSTVersionParameter;
m_fBlockInfoDescription61444RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61444Parameter.SetRecordFix( m_fBlockInfoDescription61444RecordFixParameter );
m_fBlockInfoDescription61444RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61444Parameter.SetRecordIterator( m_fBlockInfoDescription61444RecordIteratorParameter );
elements[0] = &m_fBlockInfoSystemIntegratorParameter;
m_fBlockInfoDescription61445RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61445Parameter.SetRecordFix( m_fBlockInfoDescription61445RecordFixParameter );
m_fBlockInfoDescription61445RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61445Parameter.SetRecordIterator( m_fBlockInfoDescription61445RecordIteratorParameter );
elements[0] = &m_fBlockInfoFBlockTypeParameter;
m_fBlockInfoDescription61446RecordFixParameter.SetMembers( 1, elements );
m_fBlockInfoDescription61446Parameter.SetRecordFix( m_fBlockInfoDescription61446RecordFixParameter );
m_fBlockInfoDescription61446RecordIteratorParameter.SetMembers( 0, elements );
m_fBlockInfoDescription61446Parameter.SetRecordIterator( m_fBlockInfoDescription61446RecordIteratorParameter );
{
    uint32_t minValues[] = {0, 61440, 61441, 61442, 61443, 61444, 61445, 61446};
    uint32_t maxValues[] = {4095, 61440, 61441, 61442, 61443, 61444, 61445, 61446};
    k2l::acs::protocols::most::CMOSTList* streamCases[] = { &m_fBlockInfoDescription0Parameter,  &m_fBlockInfoDescription61440Parameter,  &m_fBlockInfoDescription61441Parameter,  &m_fBlockInfoDescription61442Parameter,  &m_fBlockInfoDescription61443Parameter,  &m_fBlockInfoDescription61444Parameter,  &m_fBlockInfoDescription61445Parameter,  &m_fBlockInfoDescription61446Parameter};
    m_fBlockInfoDescriptionParameter.SetStreamCases( 8, minValues, maxValues, streamCases );
}
m_fBlockInfoDescriptionParameter.SetSelector( m_fBlockInfoIDParameter );
elements[0] = &m_fBlockInfoIDParameter;
elements[1] = &m_fBlockInfoDescriptionParameter;
m_fBlockInfoFunction.SetDataItems(12, 2, elements);
elements[0] = &m_fBlockInfoIDParameter;
m_fBlockInfoFunction.SetDataItems(1, 1, elements);
AddFunction( &m_fBlockInfoFunction );
m_dialNumberFunction.FunctionID( 0x250 );
m_dialNumberFunction.Notification( false /*Method can not be admited to the notification*/ );
m_dialNumberFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_dialNumberFunction.SupportedOperations( 0x2740 );
m_dialNumberCallIdParameterSpec.Min( 1 );
m_dialNumberCallIdParameterSpec.Max( 255U );
m_dialNumberCallIdParameterSpec.Step( 1 );
m_dialNumberCallIdParameterSpec.Exponent( 0 );
m_dialNumberCallIdParameter.SetValidator( &m_dialNumberCallIdParameterSpec );
m_dialNumberCallIdParameter.Value( m_dialNumberCallIdParameterSpec.Min() );
m_dialNumberTelNumberParameterSpec.MaxCharacters( 40 );
m_dialNumberTelNumberParameter.SetValidator( &m_dialNumberTelNumberParameterSpec );
AddFunction( &m_dialNumberFunction );
m_hangupCallFunction.FunctionID( 0x251 );
m_hangupCallFunction.Notification( false /*Method can not be admited to the notification*/ );
m_hangupCallFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_hangupCallFunction.SupportedOperations( 0x2740 );
m_hangupCallCallIdParameterSpec.Min( 1 );
m_hangupCallCallIdParameterSpec.Max( 255U );
m_hangupCallCallIdParameterSpec.Step( 1 );
m_hangupCallCallIdParameterSpec.Exponent( 0 );
m_hangupCallCallIdParameter.SetValidator( &m_hangupCallCallIdParameterSpec );
m_hangupCallCallIdParameter.Value( m_hangupCallCallIdParameterSpec.Min() );
AddFunction( &m_hangupCallFunction );
m_callStateFunction.FunctionID( 0x253 );
m_callStateFunction.Notification( true );
m_callStateFunction.AutomaticNotification( true );
m_callStateFunction.SupportedOperations( 0x9002 );
m_callStateDataCallStateParameterSpec.Values( 14, m_callStateDataCallStateParameterSpecValues );
m_callStateDataCallTypeParameterSpec.Values( 3, m_callStateDataCallTypeParameterSpecValues );
for( index = 0; index < 255; index++ )
{
    elements[ index ] = static_cast<k2l::acs::protocols::most::CMOSTDataType*>( &m_callStateDataRecordParameter[ index ] );
m_callStateDataCallStateParameter[ index ].SetValidator( &m_callStateDataCallStateParameterSpec );
m_callStateDataCallStateParameter[ index ].Value( m_callStateDataCallStateParameterSpecValues[0] );
m_callStateDataCallTypeParameter[ index ].SetValidator( &m_callStateDataCallTypeParameterSpec );
m_callStateDataCallTypeParameter[ index ].Value( m_callStateDataCallTypeParameterSpecValues[0] );
}
m_callStateFunction.SetElements( 255, elements, 0 );
for( index = 0; index < 255; index++ )
{
elements[0] = &m_callStateDataCallStateParameter[ index ];
elements[1] = &m_callStateDataCallTypeParameter[ index ];
m_callStateDataRecordParameter[ index ].SetMembers( 2, elements );
}
AddFunction( &m_callStateFunction );
m_acceptCallFunction.FunctionID( 0x255 );
m_acceptCallFunction.Notification( false /*Method can not be admited to the notification*/ );
m_acceptCallFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_acceptCallFunction.SupportedOperations( 0x2740 );
m_acceptCallCallIdParameterSpec.Min( 1 );
m_acceptCallCallIdParameterSpec.Max( 255U );
m_acceptCallCallIdParameterSpec.Step( 1 );
m_acceptCallCallIdParameterSpec.Exponent( 0 );
m_acceptCallCallIdParameter.SetValidator( &m_acceptCallCallIdParameterSpec );
m_acceptCallCallIdParameter.Value( m_acceptCallCallIdParameterSpec.Min() );
AddFunction( &m_acceptCallFunction );
m_callHoldFunction.FunctionID( 0x260 );
m_callHoldFunction.Notification( false /*Method can not be admited to the notification*/ );
m_callHoldFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_callHoldFunction.SupportedOperations( 0x2740 );
AddFunction( &m_callHoldFunction );
m_resumeCallFunction.FunctionID( 0x261 );
m_resumeCallFunction.Notification( false /*Method can not be admited to the notification*/ );
m_resumeCallFunction.AutomaticNotification( false /*Method can not be admited to the notification*/ );
m_resumeCallFunction.SupportedOperations( 0x2740 );
AddFunction( &m_resumeCallFunction );
m_bTStatusFunction.FunctionID( 0xC05 );
m_bTStatusFunction.Notification( true );
m_bTStatusFunction.AutomaticNotification( true );
m_bTStatusFunction.SupportedOperations( 0x9002 );
m_bTStatusBTModeParameterSpec.Values( 6, m_bTStatusBTModeParameterSpecValues );
m_bTStatusBTModeParameter.SetValidator( &m_bTStatusBTModeParameterSpec );
m_bTStatusBTModeParameter.Value( m_bTStatusBTModeParameterSpecValues[0] );
m_bTStatusFunction.SetValueType( &m_bTStatusBTModeParameter );
AddFunction( &m_bTStatusFunction );
m_userModeFunction.FunctionID( 0xC22 );
m_userModeFunction.Notification( true );
m_userModeFunction.AutomaticNotification( true );
m_userModeFunction.SupportedOperations( 0x9007 );
m_userModeParameterSpec.Values( 6, m_userModeParameterSpecValues );
m_userModeParameter.SetValidator( &m_userModeParameterSpec );
m_userModeParameter.Value( m_userModeParameterSpecValues[0] );
elements[0] = &m_userModeParameter;
elements[1] = &m_userModeMicOffParameter;
m_userModeFunction.SetDataItems(0, 2, elements);
elements[0] = &m_userModeParameter;
elements[1] = &m_userModeMicOffParameter;
m_userModeFunction.SetDataItems(2, 2, elements);
elements[0] = &m_userModeParameter;
elements[1] = &m_userModeMicOffParameter;
m_userModeFunction.SetDataItems(12, 2, elements);
AddFunction( &m_userModeFunction );
AddFunction( &m_notificationCheckFunction );
AddFunction( &m_notificationFunction );
AddFunction( &m_fktIDsFunction );
NotificationService( &m_notificationFunction );
m_notificationFunction.Update();
m_fktIDsFunction.Update();
return true;
}


/*=============================================================================
 * END OF FILE
 *=============================================================================*/
