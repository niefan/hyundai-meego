/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2013-09-27.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

#ifndef __DHAVN_MOSTMANAGER_TELEPHONESHADOW_H_
#define __DHAVN_MOSTMANAGER_TELEPHONESHADOW_H_

/**
 * HMC DH Fcat v13.09.5
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

namespace acs
{
    namespace generated
    {
        namespace shadow
        {
namespace Telephone
{

class CTelephone;

class CVersion
{
	CTelephone *m_pInstance;
public:
	explicit CVersion( CTelephone *pInstance );
	~CVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x10 /* = 16 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool MajorValue( uint8_t value );
uint8_t MajorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MajorDataType();
bool MinorValue( uint8_t value );
uint8_t MinorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MinorDataType();
bool BuildValue( uint8_t value );
uint8_t BuildValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BuildDataType();

};


class CTelephone;

class CFBlockInfo
{
	CTelephone *m_pInstance;
public:
	explicit CFBlockInfo( CTelephone *pInstance );
	~CFBlockInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x11 /* = 17 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool IDValue( uint16_t value );
uint16_t IDValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& IDDataType();
enum TFunctionMaturity
{
	FunctionMaturityUnknown = 0,
	FunctionMaturityInterfaceOnly = 1,
	FunctionMaturityPartlyImplemented = 2,
	FunctionMaturityFullyImplemented = 3,
	FunctionMaturityPartlyImplementedAndVerified = 17,
	FunctionMaturityFullyImplementedAndVerified = 18,
};
bool FunctionMaturityValue( acs::generated::shadow::Telephone::CFBlockInfo::TFunctionMaturity value );
acs::generated::shadow::Telephone::CFBlockInfo::TFunctionMaturity FunctionMaturityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& FunctionMaturityDataType();
bool FBlockNameValue( uint8_t * value, uint32_t length );
uint8_t * FBlockNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockNameDataType();
uint32_t FBlockNameLength() const;
bool FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SupplierVersionValue( uint8_t * value, uint32_t length );
uint8_t * SupplierVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& SupplierVersionDataType();
uint32_t SupplierVersionLength() const;
bool SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockVersionValue( uint8_t * value, uint32_t length );
uint8_t * FBlockVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockVersionDataType();
uint32_t FBlockVersionLength() const;
bool FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool MOSTVersionValue( uint8_t * value, uint32_t length );
uint8_t * MOSTVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& MOSTVersionDataType();
uint32_t MOSTVersionLength() const;
bool MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SystemIntegratorValue( uint8_t * value, uint32_t length );
uint8_t * SystemIntegratorValue() const;
::k2l::acs::protocols::most::CMOSTString& SystemIntegratorDataType();
uint32_t SystemIntegratorLength() const;
bool SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockTypeValue( uint8_t * value, uint32_t length );
uint8_t * FBlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockTypeDataType();
uint32_t FBlockTypeLength() const;
bool FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * DescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& DescriptionDataType();
uint32_t DescriptionStreamLength() const;
bool DescriptionLoadNext();
bool DescriptionSaveNext();
bool Get(  );

};


class CTelephone;

class CSourceInfo
{
	CTelephone *m_pInstance;
public:
	explicit CSourceInfo( CTelephone *pInstance );
	~CSourceInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x100 /* = 256 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool BlockWidthValue( uint16_t value );
uint16_t BlockWidthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& BlockWidthDataType();
bool ConnectionLabelValue( uint16_t value );
uint16_t ConnectionLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& ConnectionLabelDataType();
enum TTransmissionClass
{
	TransmissionClassSynchronous = 0,
	TransmissionClassDiscreteFrameIsochronous = 1,
	TransmissionClassPacketizedIsochronous = 2,
	TransmissionClassQoSIP = 3,
	TransmissionClassAsynchronous = 4,
};
bool TransmissionClassValue( acs::generated::shadow::Telephone::CSourceInfo::TTransmissionClass value );
acs::generated::shadow::Telephone::CSourceInfo::TTransmissionClass TransmissionClassValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TransmissionClassDataType();
enum TContentProtection
{
	ContentProtectionNone = 0,
	ContentProtectionSerialCopyManagement = 1,
	ContentProtectionMOSTDTCPSupplementB = 2,
	ContentProtectionDTCPIPSupplementE = 3,
};
bool ContentProtectionValue( acs::generated::shadow::Telephone::CSourceInfo::TContentProtection value );
acs::generated::shadow::Telephone::CSourceInfo::TContentProtection ContentProtectionValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ContentProtectionDataType();
enum TContentType
{
	ContentTypeAudio = 0,
	ContentTypeReserved = 1,
	ContentTypeSPDIF = 2,
	ContentTypeSAD = 8,
	ContentTypePhaseInformation = 15,
	ContentTypeGenericPCM = 16,
	ContentTypeReserved1 = 17,
	ContentTypeMPEG1_SystemStream = 32,
	ContentTypeMPEG2_ProgramStream = 33,
	ContentTypeMPEG2_TransportStream = 34,
	ContentTypeReserved2 = 64,
	ContentTypeReserved3 = 65,
	ContentTypeReserved4 = 66,
	ContentTypeIPStreamDeprecated = 144,
	ContentTypeEthernet = 145,
};
bool ContentTypeValue( acs::generated::shadow::Telephone::CSourceInfo::TContentType value );
acs::generated::shadow::Telephone::CSourceInfo::TContentType ContentTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ContentTypeDataType();
bool AudioChannelsValue( uint8_t value );
uint8_t AudioChannelsValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& AudioChannelsDataType();
bool ResolutionValue( uint8_t value );
uint8_t ResolutionValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& ResolutionDataType();
bool SpeedFactorValue( uint8_t value );
uint8_t SpeedFactorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SpeedFactorDataType();
bool DataConnectionLabelValue( uint16_t value );
uint16_t DataConnectionLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DataConnectionLabelDataType();
enum TAudioChannelName
{
	AudioChannelNameCurrentlyNotInUse = 0,
	AudioChannelNameFrontLeftFL = 1,
	AudioChannelNameFrontRightFR = 2,
	AudioChannelNameFrontCenterFC = 3,
	AudioChannelNameLowFrequencyLF = 4,
	AudioChannelNameBackLeftBL = 5,
	AudioChannelNameBackRightBR = 6,
	AudioChannelNameFrontLeftOfCenterFLC = 7,
	AudioChannelNameFrontRightOfCenterFRC = 8,
	AudioChannelNameBackCenterBC = 9,
	AudioChannelNameSideLeftSL = 10,
	AudioChannelNameSideRightSR = 11,
	AudioChannelNameTopCenterTC = 12,
	AudioChannelNameTopFrontLeftTFL = 13,
	AudioChannelNameTopFrontCenterTFC = 14,
	AudioChannelNameTopFrontRightTFR = 15,
	AudioChannelNameTopBackLeftTBL = 16,
	AudioChannelNameTopBackCenterTBC = 17,
	AudioChannelNameTopBackRightTBR = 18,
	AudioChannelNameBackLeftOfCenterBCL = 19,
	AudioChannelNameBackRightOfCenterBCR = 20,
};
bool AudioChannelNameValue( acs::generated::shadow::Telephone::CSourceInfo::TAudioChannelName value );
acs::generated::shadow::Telephone::CSourceInfo::TAudioChannelName AudioChannelNameValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AudioChannelNameDataType();
bool BitsPerSampleValue( uint8_t value );
uint8_t BitsPerSampleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BitsPerSampleDataType();
bool AudioChannelListValue( uint8_t * value, uint32_t length );
const uint8_t * AudioChannelListValue() const;
::k2l::acs::protocols::most::CMOSTList& AudioChannelListDataType();
uint32_t AudioChannelListStreamLength() const;
bool IP_AddressValue( uint8_t * value, uint8_t length );
const uint8_t * IP_AddressValue() const;
::k2l::acs::protocols::most::CMOSTShortStream& IP_AddressDataType();
uint8_t IP_AddressStreamLength() const;
bool PortValue( uint16_t value );
uint16_t PortValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& PortDataType();
bool ContentDescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * ContentDescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& ContentDescriptionDataType();
uint32_t ContentDescriptionStreamLength() const;
bool ContentDescriptionLoadNext();
bool ContentDescriptionSaveNext();
bool DataFrameBlockwidthValue( uint8_t value );
uint8_t DataFrameBlockwidthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DataFrameBlockwidthDataType();
bool DataSampleFrequencyValue( uint32_t value );
uint32_t DataSampleFrequencyValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& DataSampleFrequencyDataType();
bool ClkSrcLabelValue( uint16_t value );
uint16_t ClkSrcLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& ClkSrcLabelDataType();
bool DataRateValue( uint32_t value );
uint32_t DataRateValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& DataRateDataType();
bool TransmissionParameterValue( uint8_t * value, uint32_t length );
const uint8_t * TransmissionParameterValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& TransmissionParameterDataType();
uint32_t TransmissionParameterStreamLength() const;
bool TransmissionParameterLoadNext();
bool TransmissionParameterSaveNext();
bool Get(  );

};


class CTelephone;

class CAllocate
{
	CTelephone *m_pInstance;
public:
	explicit CAllocate( CTelephone *pInstance );
	~CAllocate(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x101 /* = 257 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool BlockWidthValue( uint16_t value );
uint16_t BlockWidthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& BlockWidthDataType();
bool ConnectionLabelValue( uint16_t value );
uint16_t ConnectionLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& ConnectionLabelDataType();
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool StartResultAck( );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CDeAllocate
{
	CTelephone *m_pInstance;
public:
	explicit CDeAllocate( CTelephone *pInstance );
	~CDeAllocate(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x102 /* = 258 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool StartResultAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CSourceActivity
{
	CTelephone *m_pInstance;
public:
	explicit CSourceActivity( CTelephone *pInstance );
	~CSourceActivity(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x103 /* = 259 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
enum TActivity
{
	ActivityOff = 0,
	ActivityPause = 1,
	ActivityOn = 2,
};
bool ActivityValue( acs::generated::shadow::Telephone::CSourceActivity::TActivity value );
acs::generated::shadow::Telephone::CSourceActivity::TActivity ActivityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ActivityDataType();
bool StartResultAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CSourceName
{
	CTelephone *m_pInstance;
public:
	explicit CSourceName( CTelephone *pInstance );
	~CSourceName(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x104 /* = 260 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool SourceNameValue( uint8_t * value, uint32_t length );
uint8_t * SourceNameValue() const;
::k2l::acs::protocols::most::CMOSTString& SourceNameDataType();
uint32_t SourceNameLength() const;
bool SourceNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SourceNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SourceNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool Get(  );

};


class CTelephone;

class CDialNumber
{
	CTelephone *m_pInstance;
public:
	explicit CDialNumber( CTelephone *pInstance );
	~CDialNumber(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x250 /* = 592 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool CallIdValue( uint8_t value );
uint8_t CallIdValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& CallIdDataType();
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool TelNumberValue( uint8_t * value, uint32_t length );
uint8_t * TelNumberValue() const;
::k2l::acs::protocols::most::CMOSTString& TelNumberDataType();
uint32_t TelNumberLength() const;
bool TelNumberAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TelNumberString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TelNumberString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool StartResultAck( );
bool StartAck( );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CHangupCall
{
	CTelephone *m_pInstance;
public:
	explicit CHangupCall( CTelephone *pInstance );
	~CHangupCall(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x251 /* = 593 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool CallIdValue( uint8_t value );
uint8_t CallIdValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& CallIdDataType();
bool StartResultAck( );
bool StartAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CCurrentNumber
{
	CTelephone *m_pInstance;
public:
	explicit CCurrentNumber( CTelephone *pInstance );
	~CCurrentNumber(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x252 /* = 594 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassText& FunctionInstance(void);
	bool Value( uint8_t * value, uint32_t length );
uint8_t * Value() const;
uint32_t Length() const;
bool AddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool String(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool String(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
::k2l::acs::protocols::most::CMOSTString& DataType();
bool Set( uint8_t * value, uint32_t length );
bool SetGet( uint8_t * value, uint32_t length );
bool Get();

};


class CTelephone;

class CCallState
{
	CTelephone *m_pInstance;
public:
	explicit CCallState( CTelephone *pInstance );
	~CCallState(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x253 /* = 595 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassArray& FunctionInstance(void);
	enum TDataCallState
{
	DataCallStateIdle = 0,
	DataCallStateRinging = 1,
	DataCallStateActive = 2,
	DataCallStateDialing = 3,
	DataCallStateDisconnecting = 4,
	TDataCallStateValue5 = 5,
	DataCallStateReestablish = 6,
	DataCallStateCallingRBT = 7,
	DataCallStateBusy = 8,
	DataCallStateMultipartyCallRinging = 9,
	DataCallStateMultipartyCallActive = 10,
	DataCallStateConferenceCall = 11,
	DataCallStateNotAcceptedCall = 12,
	DataCallStateInvalid = 255,
};
bool DataCallStateValue( uint8_t index, acs::generated::shadow::Telephone::CCallState::TDataCallState value );
acs::generated::shadow::Telephone::CCallState::TDataCallState DataCallStateValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTEnum& DataCallStateDataType( uint8_t index );
bool GetDataCallState( uint8_t index );
enum TDataCallType
{
	TDataCallTypeValue0 = 0,
	DataCallTypeEmergencyCall = 1,
	DataCallTypeInvalid = 255,
};
bool DataCallTypeValue( uint8_t index, acs::generated::shadow::Telephone::CCallState::TDataCallType value );
acs::generated::shadow::Telephone::CCallState::TDataCallType DataCallTypeValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTEnum& DataCallTypeDataType( uint8_t index );
bool GetDataCallType( uint8_t index );
::k2l::acs::protocols::most::CMOSTRecord& RecordDataType( uint8_t index );
uint32_t Size() const;
bool Size( uint32_t newSize ); 
::k2l::acs::protocols::most::CMOSTArray& DataType( uint8_t index );
bool Get();
            bool Get( uint8_t index );

};


class CTelephone;

class CCallDuration
{
	CTelephone *m_pInstance;
public:
	explicit CCallDuration( CTelephone *pInstance );
	~CCallDuration(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x254 /* = 596 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassArray& FunctionInstance(void);
	bool DataCallTimeValue( uint8_t index, uint16_t value );
uint16_t DataCallTimeValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DataCallTimeDataType( uint8_t index );
bool GetDataCallTime( uint8_t index );
::k2l::acs::protocols::most::CMOSTRecord& RecordDataType( uint8_t index );
uint32_t Size() const;
bool Size( uint32_t newSize ); 
::k2l::acs::protocols::most::CMOSTArray& DataType( uint8_t index );
bool Get();
            bool Get( uint8_t index );

};


class CTelephone;

class CAcceptCall
{
	CTelephone *m_pInstance;
public:
	explicit CAcceptCall( CTelephone *pInstance );
	~CAcceptCall(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x255 /* = 597 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool CallIdValue( uint8_t value );
uint8_t CallIdValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& CallIdDataType();
bool StartResultAck( );
bool StartAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CCallHold
{
	CTelephone *m_pInstance;
public:
	explicit CCallHold( CTelephone *pInstance );
	~CCallHold(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x260 /* = 608 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool StartResultAck( );
bool StartAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CResumeCall
{
	CTelephone *m_pInstance;
public:
	explicit CResumeCall( CTelephone *pInstance );
	~CResumeCall(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x261 /* = 609 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool StartResultAck( );
bool StartAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CRecipientInfo
{
	CTelephone *m_pInstance;
public:
	explicit CRecipientInfo( CTelephone *pInstance );
	~CRecipientInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC02 /* = 3074 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
enum TContact
{
	ContactUnknown = 0,
	ContactOffice = 1,
	ContactHome = 2,
	ContactMobile = 3,
	ContactNumber1 = 4,
	ContactNumber2 = 5,
	ContactNumber3 = 6,
	ContactInvalid = 255,
};
bool ContactValue( acs::generated::shadow::Telephone::CRecipientInfo::TContact value );
acs::generated::shadow::Telephone::CRecipientInfo::TContact ContactValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ContactDataType();
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );

};


class CTelephone;

class CPBookStatus
{
	CTelephone *m_pInstance;
public:
	explicit CPBookStatus( CTelephone *pInstance );
	~CPBookStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC07 /* = 3079 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
bool TotalPBEntryValue( uint16_t value );
uint16_t TotalPBEntryValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& TotalPBEntryDataType();

};


class CTelephone;

class CCollectPBook
{
	CTelephone *m_pInstance;
public:
	explicit CCollectPBook( CTelephone *pInstance );
	~CCollectPBook(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC09 /* = 3081 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool ArrayCountValue( uint32_t value );
uint32_t ArrayCountValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& ArrayCountDataType();
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TContact1
{
	Contact1Unknown = 0,
	Contact1Office = 1,
	Contact1Home = 2,
	Contact1Mobile = 3,
	Contact1Number1 = 4,
	Contact1Number2 = 5,
	Contact1Number3 = 6,
	Contact1Invalid = 255,
};
bool Contact1Value( acs::generated::shadow::Telephone::CCollectPBook::TContact1 value );
acs::generated::shadow::Telephone::CCollectPBook::TContact1 Contact1Value() const;
::k2l::acs::protocols::most::CMOSTEnum& Contact1DataType();
bool TelNumber1Value( uint8_t * value, uint32_t length );
uint8_t * TelNumber1Value() const;
::k2l::acs::protocols::most::CMOSTString& TelNumber1DataType();
uint32_t TelNumber1Length() const;
bool TelNumber1AddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TelNumber1String(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TelNumber1String(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TContact2
{
	Contact2Unknown = 0,
	Contact2Office = 1,
	Contact2Home = 2,
	Contact2Mobile = 3,
	Contact2Number1 = 4,
	Contact2Number2 = 5,
	Contact2Number3 = 6,
	Contact2Invalid = 255,
};
bool Contact2Value( acs::generated::shadow::Telephone::CCollectPBook::TContact2 value );
acs::generated::shadow::Telephone::CCollectPBook::TContact2 Contact2Value() const;
::k2l::acs::protocols::most::CMOSTEnum& Contact2DataType();
bool TelNumber2Value( uint8_t * value, uint32_t length );
uint8_t * TelNumber2Value() const;
::k2l::acs::protocols::most::CMOSTString& TelNumber2DataType();
uint32_t TelNumber2Length() const;
bool TelNumber2AddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TelNumber2String(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TelNumber2String(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TContact3
{
	Contact3Unknown = 0,
	Contact3Office = 1,
	Contact3Home = 2,
	Contact3Mobile = 3,
	Contact3Number1 = 4,
	Contact3Number2 = 5,
	Contact3Number3 = 6,
	Contact3Invalid = 255,
};
bool Contact3Value( acs::generated::shadow::Telephone::CCollectPBook::TContact3 value );
acs::generated::shadow::Telephone::CCollectPBook::TContact3 Contact3Value() const;
::k2l::acs::protocols::most::CMOSTEnum& Contact3DataType();
bool TelNumber3Value( uint8_t * value, uint32_t length );
uint8_t * TelNumber3Value() const;
::k2l::acs::protocols::most::CMOSTString& TelNumber3DataType();
uint32_t TelNumber3Length() const;
bool TelNumber3AddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TelNumber3String(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TelNumber3String(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TContact4
{
	Contact4Unknown = 0,
	Contact4Office = 1,
	Contact4Home = 2,
	Contact4Mobile = 3,
	Contact4Number1 = 4,
	Contact4Number2 = 5,
	Contact4Number3 = 6,
	Contact4Invalid = 255,
};
bool Contact4Value( acs::generated::shadow::Telephone::CCollectPBook::TContact4 value );
acs::generated::shadow::Telephone::CCollectPBook::TContact4 Contact4Value() const;
::k2l::acs::protocols::most::CMOSTEnum& Contact4DataType();
bool TelNumber4Value( uint8_t * value, uint32_t length );
uint8_t * TelNumber4Value() const;
::k2l::acs::protocols::most::CMOSTString& TelNumber4DataType();
uint32_t TelNumber4Length() const;
bool TelNumber4AddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TelNumber4String(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TelNumber4String(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TContact5
{
	Contact5Unknown = 0,
	Contact5Office = 1,
	Contact5Home = 2,
	Contact5Mobile = 3,
	Contact5Number1 = 4,
	Contact5Number2 = 5,
	Contact5Number3 = 6,
	Contact5Invalid = 255,
};
bool Contact5Value( acs::generated::shadow::Telephone::CCollectPBook::TContact5 value );
acs::generated::shadow::Telephone::CCollectPBook::TContact5 Contact5Value() const;
::k2l::acs::protocols::most::CMOSTEnum& Contact5DataType();
bool TelNumber5Value( uint8_t * value, uint32_t length );
uint8_t * TelNumber5Value() const;
::k2l::acs::protocols::most::CMOSTString& TelNumber5DataType();
uint32_t TelNumber5Length() const;
bool TelNumber5AddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TelNumber5String(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TelNumber5String(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool PBookDataValue( uint8_t * value, uint32_t length );
const uint8_t * PBookDataValue() const;
::k2l::acs::protocols::most::CMOSTList& PBookDataDataType();
uint32_t PBookDataStreamLength() const;
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TPBookType
{
	PBookTypeTotalPhonebook = 0,
	PBookTypeNewContacts = 1,
	PBookTypeInvalid = 255,
};
bool PBookTypeValue( acs::generated::shadow::Telephone::CCollectPBook::TPBookType value );
acs::generated::shadow::Telephone::CCollectPBook::TPBookType PBookTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& PBookTypeDataType();
bool StartResultAck( );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CTelephone;

class CModemDataStatus
{
	CTelephone *m_pInstance;
public:
	explicit CModemDataStatus( CTelephone *pInstance );
	~CModemDataStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC0A /* = 3082 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TModemStatus
{
	ModemStatusNoNetworkConnected = 0,
	ModemStatus3GNetworkConnected = 1,
	ModemStatusTransferringDataVia3GNetwork = 2,
	ModemStatusGPRSNetworkConnected = 3,
	ModemStatusTransferringDataViaGPRSNetwork = 4,
	ModemStatusHSUPA = 5,
	ModemStatusTransferringDataViaHSUPA = 6,
        ModemStatusTransferringDataViaLTENetwork = 7,
        ModemStatusLTENetworkConnected = 8,
	ModemStatusServiceNotActivated = 238,
	ModemStatusInvalid = 255,
};
bool ModemStatusValue( acs::generated::shadow::Telephone::CModemDataStatus::TModemStatus value );
acs::generated::shadow::Telephone::CModemDataStatus::TModemStatus ModemStatusValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ModemStatusDataType();

};


class CTelephone;

class CCallHistoryInfo
{
	CTelephone *m_pInstance;
public:
	explicit CCallHistoryInfo( CTelephone *pInstance );
	~CCallHistoryInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC0B /* = 3083 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassArray& FunctionInstance(void);
	enum TDataMode
{
	DataModeBTPhoneMain = 128,
	DataModeModemPhoneMain = 144,
	DataModeInvalid = 255,
};
bool DataModeValue( uint8_t index, acs::generated::shadow::Telephone::CCallHistoryInfo::TDataMode value );
acs::generated::shadow::Telephone::CCallHistoryInfo::TDataMode DataModeValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTEnum& DataModeDataType( uint8_t index );
bool GetDataMode( uint8_t index );
enum TDataCallDirection
{
	DataCallDirectionIncomingCall = 0,
	DataCallDirectionOutgoingCall = 1,
	DataCallDirectionMissedCall = 2,
	DataCallDirectionInvalid = 255,
};
bool DataCallDirectionValue( uint8_t index, acs::generated::shadow::Telephone::CCallHistoryInfo::TDataCallDirection value );
acs::generated::shadow::Telephone::CCallHistoryInfo::TDataCallDirection DataCallDirectionValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTEnum& DataCallDirectionDataType( uint8_t index );
bool GetDataCallDirection( uint8_t index );
bool DataNameValue( uint8_t index, uint8_t * value, uint32_t length );
uint8_t * DataNameValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTString& DataNameDataType( uint8_t index );
bool GetDataName( uint8_t index );
uint32_t DataNameLength( uint8_t index ) const;
bool DataNameAddEncoding( uint8_t index , uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DataNameString( uint8_t index , const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DataNameString( uint8_t index , const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DataTelNumberValue( uint8_t index, uint8_t * value, uint32_t length );
uint8_t * DataTelNumberValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTString& DataTelNumberDataType( uint8_t index );
bool GetDataTelNumber( uint8_t index );
uint32_t DataTelNumberLength( uint8_t index ) const;
bool DataTelNumberAddEncoding( uint8_t index , uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DataTelNumberString( uint8_t index , const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DataTelNumberString( uint8_t index , const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DataDateNTimeValue( uint8_t index, uint8_t * value, uint32_t length );
uint8_t * DataDateNTimeValue( uint8_t index ) const;
::k2l::acs::protocols::most::CMOSTString& DataDateNTimeDataType( uint8_t index );
bool GetDataDateNTime( uint8_t index );
uint32_t DataDateNTimeLength( uint8_t index ) const;
bool DataDateNTimeAddEncoding( uint8_t index , uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DataDateNTimeString( uint8_t index , const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DataDateNTimeString( uint8_t index , const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
::k2l::acs::protocols::most::CMOSTRecord& RecordDataType( uint8_t index );
uint32_t Size() const;
bool Size( uint32_t newSize ); 
::k2l::acs::protocols::most::CMOSTArray& DataType( uint8_t index );
bool Get();
            bool Get( uint8_t index );

};


class CTelephone;

class CTMService
{
	CTelephone *m_pInstance;
public:
	explicit CTMService( CTelephone *pInstance );
	~CTMService(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC0C /* = 3084 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool TMServiceValue( uint16_t value );
uint16_t TMServiceValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& TMServiceDataType();
enum TProvStatus
{
	TProvStatusValue0 = 0,
	ProvStatusFactory = 1,
	ProvStatusTemporaryPreactive = 2,
	ProvStatusPreactive = 3,
	ProvStatusActive = 4,
	ProvStatusInActive = 5,
	ProvStatusDeProvisioned = 6,
	ProvStatusDBError = 253,
	ProvStatusSoftwareIsNA = 254,
	ProvStatusInvalid = 255,
};
bool ProvStatusValue( acs::generated::shadow::Telephone::CTMService::TProvStatus value );
acs::generated::shadow::Telephone::CTMService::TProvStatus ProvStatusValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ProvStatusDataType();

};


class CTelephone;

class CCallHistoryStatus
{
	CTelephone *m_pInstance;
public:
	explicit CCallHistoryStatus( CTelephone *pInstance );
	~CCallHistoryStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC0D /* = 3085 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration& FunctionInstance(void);
	enum TCallHistoryStatus
{
	CallHistoryStatusNoChanged = 0,
	CallHistoryStatusAdded = 1,
	CallHistoryStatusDeleted = 2,
};
acs::generated::shadow::Telephone::CCallHistoryStatus::TCallHistoryStatus Value() const;
::k2l::acs::protocols::most::CMOSTEnum& DataType();
bool Get();

};


class CTelephone;

class CModemLevel
{
	CTelephone *m_pInstance;
public:
	explicit CModemLevel( CTelephone *pInstance );
	~CModemLevel(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC21 /* = 3105 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassNumber& FunctionInstance(void);
	uint8_t Value() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DataType();
bool Get();

};


class CTelephone;

class CUserMode
{
	CTelephone *m_pInstance;
public:
	explicit CUserMode( CTelephone *pInstance );
	~CUserMode(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC22 /* = 3106 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TUserMode
{
	UserModeNotUsed = 0,
	UserModeHandsFreeModeFront = 1,
	UserModeHandsFreeModeRear = 2,
	UserModePrivateMode = 3,
	UserModeMICOff = 4,
	UserModeInvalid = 255,
};
bool UserModeValue( acs::generated::shadow::Telephone::CUserMode::TUserMode value );
acs::generated::shadow::Telephone::CUserMode::TUserMode UserModeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& UserModeDataType();
bool MicOffValue( bool value );
bool MicOffValue() const;
::k2l::acs::protocols::most::CMOSTBoolean& MicOffDataType();
bool Set(  );
bool SetGet(  );

};


class CTelephone;

class CMissedCallStatus
{
	CTelephone *m_pInstance;
public:
	explicit CMissedCallStatus( CTelephone *pInstance );
	~CMissedCallStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC24 /* = 3108 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TMissedCallStatus
{
	MissedCallStatusNoMissedCall = 0,
	MissedCallStatusMissedCall = 1,
	MissedCallStatusInvalid = 255,
};
bool MissedCallStatusValue( acs::generated::shadow::Telephone::CMissedCallStatus::TMissedCallStatus value );
acs::generated::shadow::Telephone::CMissedCallStatus::TMissedCallStatus MissedCallStatusValue() const;
::k2l::acs::protocols::most::CMOSTEnum& MissedCallStatusDataType();
bool MissedCallCountValue( uint8_t value );
uint8_t MissedCallCountValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MissedCallCountDataType();

};

class CTelephone: public ::k2l::acs::protocols::most::CShadowBase
{
private:
	CTelephone();
	CTelephone(CTelephone& toCopy);
public:
	enum
	{
		FBlockID = 0x50 /* = 80 (decimal) */
	};

	CTelephone( ::k2l::acs::protocols::most::InstanceID_t instanceID );
	CTelephone( ::k2l::acs::protocols::most::FBlockID_t fblockID,
		k2l::acs::protocols::most::InstanceID_t instanceID );
	virtual ~CTelephone( void );

	virtual bool InitializeMOSTElement();
	inline ::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck& NotificationCheckFunctionInstance() { return m_notificationCheckFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionNotification& NotificationFunctionInstance() { return m_notificationFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionFktIDs& FktIDsFunctionInstance() { return m_fktIDsFunction; }

private:
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_versionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMajorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMinorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionBuildParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_fBlockInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_fBlockInfoIDParameter;
::k2l::acs::protocols::most::CMOSTEnum m_fBlockInfoFunctionMaturityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_fBlockInfoFunctionMaturityParameterSpec;
const static uint8_t m_fBlockInfoFunctionMaturityParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription0Parameter;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSupplierVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSupplierVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoMOSTVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoMOSTVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSystemIntegratorParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSystemIntegratorParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockTypeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61440Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61441Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61442Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61443Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61444Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61445Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61446Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_fBlockInfoDescriptionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_sourceInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_sourceInfoSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoBlockWidthParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoBlockWidthParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoConnectionLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoConnectionLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoTransmissionClassParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoTransmissionClassParameterSpec;
const static uint8_t m_sourceInfoTransmissionClassParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoContentProtectionParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoContentProtectionParameterSpec;
const static uint8_t m_sourceInfoContentProtectionParameterSpecValues[4];
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoContentTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoContentTypeParameterSpec;
const static uint8_t m_sourceInfoContentTypeParameterSpecValues[15];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoAudioChannelsParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoResolutionParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription0Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoSpeedFactorParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription2RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription2RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription2Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoDataConnectionLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoDataConnectionLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription8RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription8RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription8Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription15Parameter;
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoAudioChannelNameParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoAudioChannelNameParameterSpec;
const static uint8_t m_sourceInfoAudioChannelNameParameterSpecValues[21];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoBitsPerSampleParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoAudioChannelListRecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoAudioChannelListRecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoAudioChannelListParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription16RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription16RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription16Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription32Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription33Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription34Parameter;
::k2l::acs::protocols::most::CMOSTShortStream m_sourceInfoIP_AddressParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoPortParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription144RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription144RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription144Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription145Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_sourceInfoContentDescriptionParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter0Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoDataFrameBlockwidthParameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_sourceInfoDataSampleFrequencyParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoClkSrcLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoClkSrcLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter1RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter1RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter1Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_sourceInfoDataRateParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter2RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter2RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter2Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter3RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter3RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter3Parameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter4Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_sourceInfoTransmissionParameterParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_allocateFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_allocateSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_allocateSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_allocateSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_allocateBlockWidthParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_allocateBlockWidthParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_allocateConnectionLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_allocateConnectionLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_deAllocateFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_deAllocateSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_deAllocateSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_deAllocateSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_sourceActivityFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceActivitySenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceActivitySourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_sourceActivitySourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_sourceActivityActivityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceActivityActivityParameterSpec;
const static uint8_t m_sourceActivityActivityParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_sourceNameFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceNameSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_sourceNameSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_sourceNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_sourceNameParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_dialNumberFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_dialNumberSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_dialNumberCallIdParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_dialNumberCallIdParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_dialNumberTelNumberParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_dialNumberTelNumberParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_hangupCallFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_hangupCallSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_hangupCallCallIdParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_hangupCallCallIdParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassText m_currentNumberFunction;
::k2l::acs::protocols::most::CMOSTString m_currentNumberTelNumberParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentNumberTelNumberParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassArray m_callStateFunction;
::k2l::acs::protocols::most::CMOSTRecord m_callStateDataRecordParameter[255];
::k2l::acs::protocols::most::CMOSTEnum m_callStateDataCallStateParameter[255];
::k2l::acs::protocols::most::CMOSTEnumSpecification m_callStateDataCallStateParameterSpec;
const static uint8_t m_callStateDataCallStateParameterSpecValues[14];
::k2l::acs::protocols::most::CMOSTEnum m_callStateDataCallTypeParameter[255];
::k2l::acs::protocols::most::CMOSTEnumSpecification m_callStateDataCallTypeParameterSpec;
const static uint8_t m_callStateDataCallTypeParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassArray m_callDurationFunction;
::k2l::acs::protocols::most::CMOSTRecord m_callDurationDataRecordParameter[255];
::k2l::acs::protocols::most::CMOSTUnsignedWord m_callDurationDataCallTimeParameter[255];
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_callDurationDataCallTimeParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_acceptCallFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_acceptCallSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_acceptCallCallIdParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_acceptCallCallIdParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_callHoldFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_callHoldSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_resumeCallFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_resumeCallSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_recipientInfoFunction;
::k2l::acs::protocols::most::CMOSTEnum m_recipientInfoContactParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_recipientInfoContactParameterSpec;
const static uint8_t m_recipientInfoContactParameterSpecValues[8];
::k2l::acs::protocols::most::CMOSTString m_recipientInfoNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_recipientInfoNameParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_pBookStatusFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_pBookStatusTotalPBEntryParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_pBookStatusTotalPBEntryParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_collectPBookFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_collectPBookSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_collectPBookArrayCountParameter;
::k2l::acs::protocols::most::CMOSTString m_collectPBookNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_collectPBookNameParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_collectPBookContact1Parameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_collectPBookContact1ParameterSpec;
const static uint8_t m_collectPBookContact1ParameterSpecValues[8];
::k2l::acs::protocols::most::CMOSTString m_collectPBookTelNumber1Parameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_collectPBookTelNumber1ParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_collectPBookContact2Parameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_collectPBookContact2ParameterSpec;
const static uint8_t m_collectPBookContact2ParameterSpecValues[8];
::k2l::acs::protocols::most::CMOSTString m_collectPBookTelNumber2Parameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_collectPBookTelNumber2ParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_collectPBookContact3Parameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_collectPBookContact3ParameterSpec;
const static uint8_t m_collectPBookContact3ParameterSpecValues[8];
::k2l::acs::protocols::most::CMOSTString m_collectPBookTelNumber3Parameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_collectPBookTelNumber3ParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_collectPBookContact4Parameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_collectPBookContact4ParameterSpec;
const static uint8_t m_collectPBookContact4ParameterSpecValues[8];
::k2l::acs::protocols::most::CMOSTString m_collectPBookTelNumber4Parameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_collectPBookTelNumber4ParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_collectPBookContact5Parameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_collectPBookContact5ParameterSpec;
const static uint8_t m_collectPBookContact5ParameterSpecValues[8];
::k2l::acs::protocols::most::CMOSTString m_collectPBookTelNumber5Parameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_collectPBookTelNumber5ParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_collectPBookPBookDataRecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_collectPBookPBookDataRecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_collectPBookPBookDataParameter;
::k2l::acs::protocols::most::CMOSTEnum m_collectPBookPBookTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_collectPBookPBookTypeParameterSpec;
const static uint8_t m_collectPBookPBookTypeParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_modemDataStatusFunction;
::k2l::acs::protocols::most::CMOSTEnum m_modemDataStatusModemStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_modemDataStatusModemStatusParameterSpec;
const static uint8_t m_modemDataStatusModemStatusParameterSpecValues[11];
::k2l::acs::protocols::most::CMOSTFunctionClassArray m_callHistoryInfoFunction;
::k2l::acs::protocols::most::CMOSTRecord m_callHistoryInfoDataRecordParameter[255];
::k2l::acs::protocols::most::CMOSTEnum m_callHistoryInfoDataModeParameter[255];
::k2l::acs::protocols::most::CMOSTEnumSpecification m_callHistoryInfoDataModeParameterSpec;
const static uint8_t m_callHistoryInfoDataModeParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTEnum m_callHistoryInfoDataCallDirectionParameter[255];
::k2l::acs::protocols::most::CMOSTEnumSpecification m_callHistoryInfoDataCallDirectionParameterSpec;
const static uint8_t m_callHistoryInfoDataCallDirectionParameterSpecValues[4];
::k2l::acs::protocols::most::CMOSTString m_callHistoryInfoDataNameParameter[255];
::k2l::acs::protocols::most::CMOSTStringSpecification m_callHistoryInfoDataNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_callHistoryInfoDataTelNumberParameter[255];
::k2l::acs::protocols::most::CMOSTStringSpecification m_callHistoryInfoDataTelNumberParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_callHistoryInfoDataDateNTimeParameter[255];
::k2l::acs::protocols::most::CMOSTStringSpecification m_callHistoryInfoDataDateNTimeParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_tMServiceFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_tMServiceParameter;
::k2l::acs::protocols::most::CMOSTEnum m_tMServiceProvStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_tMServiceProvStatusParameterSpec;
const static uint8_t m_tMServiceProvStatusParameterSpecValues[10];
::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration m_callHistoryStatusFunction;
::k2l::acs::protocols::most::CMOSTEnum m_callHistoryStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_callHistoryStatusParameterSpec;
const static uint8_t m_callHistoryStatusParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassNumber m_modemLevelFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_modemLevelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_modemLevelParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_userModeFunction;
::k2l::acs::protocols::most::CMOSTEnum m_userModeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_userModeParameterSpec;
const static uint8_t m_userModeParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTBoolean m_userModeMicOffParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_missedCallStatusFunction;
::k2l::acs::protocols::most::CMOSTEnum m_missedCallStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_missedCallStatusParameterSpec;
const static uint8_t m_missedCallStatusParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_missedCallStatusMissedCallCountParameter;
::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck m_notificationCheckFunction;
::k2l::acs::protocols::most::CWellknownFunctionNotification m_notificationFunction;
::k2l::acs::protocols::most::CWellknownFunctionFktIDs m_fktIDsFunction;
friend class CVersion;
friend class CFBlockInfo;
friend class CSourceInfo;
friend class CAllocate;
friend class CDeAllocate;
friend class CSourceActivity;
friend class CSourceName;
friend class CDialNumber;
friend class CHangupCall;
friend class CCurrentNumber;
friend class CCallState;
friend class CCallDuration;
friend class CAcceptCall;
friend class CCallHold;
friend class CResumeCall;
friend class CRecipientInfo;
friend class CPBookStatus;
friend class CCollectPBook;
friend class CModemDataStatus;
friend class CCallHistoryInfo;
friend class CTMService;
friend class CCallHistoryStatus;
friend class CModemLevel;
friend class CUserMode;
friend class CMissedCallStatus;

};
}
        }
    }
}



#endif // __DHAVN_MOSTMANAGER_TELEPHONESHADOW_H_
/*=============================================================================
 * END OF FILE
 *=============================================================================*/
