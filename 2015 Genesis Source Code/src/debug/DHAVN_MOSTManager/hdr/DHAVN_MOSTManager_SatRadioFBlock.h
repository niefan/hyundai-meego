/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2013-04-22.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

#ifndef __DHAVN_MOSTMANAGER_SATRADIOFBLOCK_H_
#define __DHAVN_MOSTMANAGER_SATRADIOFBLOCK_H_

/**
 * HMC DH Fcat v1.23.1
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

namespace acs
{
    namespace generated
    {
        namespace fblock
        {
namespace SatRadio
{

class CSatRadio;

class CVersion
{
	CSatRadio *m_pInstance;
public:
	explicit CVersion( CSatRadio *pInstance );
	~CVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x10 /* = 16 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool MajorValue( uint8_t value );
uint8_t MajorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MajorDataType();
bool MinorValue( uint8_t value );
uint8_t MinorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MinorDataType();
bool BuildValue( uint8_t value );
uint8_t BuildValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BuildDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CSatRadio;

class CFBlockInfo
{
	CSatRadio *m_pInstance;
public:
	explicit CFBlockInfo( CSatRadio *pInstance );
	~CFBlockInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x11 /* = 17 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool IDValue( uint16_t value );
uint16_t IDValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& IDDataType();
enum TFunctionMaturity
{
	FunctionMaturityUnknown = 0,
	FunctionMaturityInterfaceOnly = 1,
	FunctionMaturityPartlyImplemented = 2,
	FunctionMaturityFullyImplemented = 3,
	FunctionMaturityPartlyImplementedAndVerified = 17,
	FunctionMaturityFullyImplementedAndVerified = 18,
};
bool FunctionMaturityValue( acs::generated::fblock::SatRadio::CFBlockInfo::TFunctionMaturity value );
acs::generated::fblock::SatRadio::CFBlockInfo::TFunctionMaturity FunctionMaturityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& FunctionMaturityDataType();
bool FBlockNameValue( uint8_t * value, uint32_t length );
uint8_t * FBlockNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockNameDataType();
uint32_t FBlockNameLength() const;
bool FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SupplierVersionValue( uint8_t * value, uint32_t length );
uint8_t * SupplierVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& SupplierVersionDataType();
uint32_t SupplierVersionLength() const;
bool SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockVersionValue( uint8_t * value, uint32_t length );
uint8_t * FBlockVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockVersionDataType();
uint32_t FBlockVersionLength() const;
bool FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool MOSTVersionValue( uint8_t * value, uint32_t length );
uint8_t * MOSTVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& MOSTVersionDataType();
uint32_t MOSTVersionLength() const;
bool MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SystemIntegratorValue( uint8_t * value, uint32_t length );
uint8_t * SystemIntegratorValue() const;
::k2l::acs::protocols::most::CMOSTString& SystemIntegratorDataType();
uint32_t SystemIntegratorLength() const;
bool SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockTypeValue( uint8_t * value, uint32_t length );
uint8_t * FBlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockTypeDataType();
uint32_t FBlockTypeLength() const;
bool FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * DescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& DescriptionDataType();
uint32_t DescriptionStreamLength() const;
bool DescriptionLoadNext();
bool DescriptionSaveNext();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CSatRadio;

class CStationSelect
{
	CSatRadio *m_pInstance;
public:
	explicit CStationSelect( CSatRadio *pInstance );
	~CStationSelect(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x210 /* = 528 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool StationValue( uint8_t value );
uint8_t StationValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& StationDataType();
bool PresetNoValue( uint8_t value );
uint8_t PresetNoValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& PresetNoDataType();
enum TType
{
	TypeStationNumber = 0,
	TypeSID = 1,
};
bool TypeValue( acs::generated::fblock::SatRadio::CStationSelect::TType value );
acs::generated::fblock::SatRadio::CStationSelect::TType TypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TypeDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CSatRadio;

class CServiceProvider
{
	CSatRadio *m_pInstance;
public:
	explicit CServiceProvider( CSatRadio *pInstance );
	~CServiceProvider(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x215 /* = 533 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration& FunctionInstance(void);
	enum TServiceProvider
{
	ServiceProviderXM = 0,
	ServiceProviderSirius = 1,
	ServiceProviderInvalid = 255,
};
bool UpdateShadows();
bool Value( acs::generated::fblock::SatRadio::CServiceProvider::TServiceProvider value );
acs::generated::fblock::SatRadio::CServiceProvider::TServiceProvider Value() const;
::k2l::acs::protocols::most::CMOSTEnum& DataType();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CSatRadio;

class CServiceStatus
{
	CSatRadio *m_pInstance;
public:
	explicit CServiceStatus( CSatRadio *pInstance );
	~CServiceStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x217 /* = 535 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassRecord& FunctionInstance(void);
	bool DataAudioStatusValue( bool value );
bool DataAudioStatusValue() const;
bool DataStationListStatusValue( bool value );
bool DataStationListStatusValue() const;
enum TDataSubscriptionStatus
{
	DataSubscriptionStatusNotActivated = 0,
	DataSubscriptionStatusActivated = 1,
};
bool DataSubscriptionStatusValue( acs::generated::fblock::SatRadio::CServiceStatus::TDataSubscriptionStatus value );
acs::generated::fblock::SatRadio::CServiceStatus::TDataSubscriptionStatus DataSubscriptionStatusValue() const;
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CSatRadio;

class CTMCStatus
{
	CSatRadio *m_pInstance;
public:
	explicit CTMCStatus( CSatRadio *pInstance );
	~CTMCStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC01 /* = 3073 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	enum TTMCStatus
{
	TMCStatusNotReceived = 0,
	TMCStatusReceiving = 1,
	TMCStatusNewData = 2,
};
bool TMCStatusValue( acs::generated::fblock::SatRadio::CTMCStatus::TTMCStatus value );
acs::generated::fblock::SatRadio::CTMCStatus::TTMCStatus TMCStatusValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TMCStatusDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CSatRadio;

class CTMCDataRequest
{
	CSatRadio *m_pInstance;
public:
	explicit CTMCDataRequest( CSatRadio *pInstance );
	~CTMCDataRequest(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC21 /* = 3105 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool BlockCounterValue( uint32_t value );
uint32_t BlockCounterValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& BlockCounterDataType();
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TBlockType
{
	BlockTypeStartOfFrame = 1,
	BlockTypeInlineFrame = 2,
	BlockTypeEndOfFrame = 3,
};
bool BlockTypeValue( acs::generated::fblock::SatRadio::CTMCDataRequest::TBlockType value );
acs::generated::fblock::SatRadio::CTMCDataRequest::TBlockType BlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& BlockTypeDataType();
bool BlockSizeValue( uint16_t value );
uint16_t BlockSizeValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& BlockSizeDataType();
bool TMCDataValue( uint8_t * value, uint32_t length );
uint8_t * TMCDataValue() const;
::k2l::acs::protocols::most::CMOSTStream& TMCDataDataType();
uint32_t TMCDataStreamLength() const;
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};

class CSatRadio: public ::k2l::acs::protocols::most::CFunctionBlockBase
{
private:
	CSatRadio();
	CSatRadio(CSatRadio& toCopy);
public:
	enum
	{
		FBlockID = 0x44 /* = 68 (decimal) */
	};

	CSatRadio( ::k2l::acs::protocols::most::InstanceID_t instanceID );
	CSatRadio( ::k2l::acs::protocols::most::FBlockID_t fblockID,
		k2l::acs::protocols::most::InstanceID_t instanceID );
	virtual ~CSatRadio( void );

	virtual bool InitializeMOSTElement();
	inline ::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck& NotificationCheckFunctionInstance() { return m_notificationCheckFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionNotification& NotificationFunctionInstance() { return m_notificationFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionFktIDs& FktIDsFunctionInstance() { return m_fktIDsFunction; }

private:
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_versionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMajorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMinorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionBuildParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_fBlockInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_fBlockInfoIDParameter;
::k2l::acs::protocols::most::CMOSTEnum m_fBlockInfoFunctionMaturityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_fBlockInfoFunctionMaturityParameterSpec;
const static uint8_t m_fBlockInfoFunctionMaturityParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription0Parameter;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSupplierVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSupplierVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoMOSTVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoMOSTVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSystemIntegratorParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSystemIntegratorParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockTypeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61440Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61441Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61442Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61443Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61444Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61445Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61446Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_fBlockInfoDescriptionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_stationSelectFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_stationSelectStationParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_stationSelectPresetNoParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_stationSelectPresetNoParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_stationSelectTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_stationSelectTypeParameterSpec;
const static uint8_t m_stationSelectTypeParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration m_serviceProviderFunction;
::k2l::acs::protocols::most::CMOSTEnum m_serviceProviderParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_serviceProviderParameterSpec;
const static uint8_t m_serviceProviderParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassRecord m_serviceStatusFunction;
::k2l::acs::protocols::most::CMOSTBoolean m_serviceStatusDataAudioStatusParameter;
::k2l::acs::protocols::most::CMOSTBoolean m_serviceStatusDataStationListStatusParameter;
::k2l::acs::protocols::most::CMOSTEnum m_serviceStatusDataSubscriptionStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_serviceStatusDataSubscriptionStatusParameterSpec;
const static uint8_t m_serviceStatusDataSubscriptionStatusParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_tMCStatusFunction;
::k2l::acs::protocols::most::CMOSTEnum m_tMCStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_tMCStatusParameterSpec;
const static uint8_t m_tMCStatusParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_tMCDataRequestFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_tMCDataRequestSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_tMCDataRequestBlockCounterParameter;
::k2l::acs::protocols::most::CMOSTEnum m_tMCDataRequestBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_tMCDataRequestBlockTypeParameterSpec;
const static uint8_t m_tMCDataRequestBlockTypeParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTUnsignedWord m_tMCDataRequestBlockSizeParameter;
::k2l::acs::protocols::most::CMOSTStream m_tMCDataRequestTMCDataParameter;
::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck m_notificationCheckFunction;
::k2l::acs::protocols::most::CWellknownFunctionNotification m_notificationFunction;
::k2l::acs::protocols::most::CWellknownFunctionFktIDs m_fktIDsFunction;
friend class CVersion;
friend class CFBlockInfo;
friend class CStationSelect;
friend class CServiceProvider;
friend class CServiceStatus;
friend class CTMCStatus;
friend class CTMCDataRequest;

};
}
        }
    }
}



#endif // __DHAVN_MOSTMANAGER_SATRADIOFBLOCK_H_
/*=============================================================================
 * END OF FILE
 *=============================================================================*/
