/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2012-07-09.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

#ifndef __DHAVN_MOSTMANAGER_DLNASHADOW_H_
#define __DHAVN_MOSTMANAGER_DLNASHADOW_H_

/**
 * HMC DH Fcat v1.18.2
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

namespace acs
{
    namespace generated
    {
        namespace shadow
        {
namespace DLNA
{

class CDLNA;

class CVersion
{
	CDLNA *m_pInstance;
public:
	explicit CVersion( CDLNA *pInstance );
	~CVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x10 /* = 16 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool MajorValue( uint8_t value );
uint8_t MajorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MajorDataType();
bool MinorValue( uint8_t value );
uint8_t MinorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MinorDataType();
bool BuildValue( uint8_t value );
uint8_t BuildValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BuildDataType();

};


class CDLNA;

class CFBlockInfo
{
	CDLNA *m_pInstance;
public:
	explicit CFBlockInfo( CDLNA *pInstance );
	~CFBlockInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x11 /* = 17 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool IDValue( uint16_t value );
uint16_t IDValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& IDDataType();
enum TFunctionMaturity
{
	FunctionMaturityUnknown = 0,
	FunctionMaturityInterfaceOnly = 1,
	FunctionMaturityPartlyImplemented = 2,
	FunctionMaturityFullyImplemented = 3,
	FunctionMaturityPartlyImplementedAndVerified = 17,
	FunctionMaturityFullyImplementedAndVerified = 18,
};
bool FunctionMaturityValue( acs::generated::shadow::DLNA::CFBlockInfo::TFunctionMaturity value );
acs::generated::shadow::DLNA::CFBlockInfo::TFunctionMaturity FunctionMaturityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& FunctionMaturityDataType();
bool FBlockNameValue( uint8_t * value, uint32_t length );
uint8_t * FBlockNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockNameDataType();
uint32_t FBlockNameLength() const;
bool FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SupplierVersionValue( uint8_t * value, uint32_t length );
uint8_t * SupplierVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& SupplierVersionDataType();
uint32_t SupplierVersionLength() const;
bool SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockVersionValue( uint8_t * value, uint32_t length );
uint8_t * FBlockVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockVersionDataType();
uint32_t FBlockVersionLength() const;
bool FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool MOSTVersionValue( uint8_t * value, uint32_t length );
uint8_t * MOSTVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& MOSTVersionDataType();
uint32_t MOSTVersionLength() const;
bool MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SystemIntegratorValue( uint8_t * value, uint32_t length );
uint8_t * SystemIntegratorValue() const;
::k2l::acs::protocols::most::CMOSTString& SystemIntegratorDataType();
uint32_t SystemIntegratorLength() const;
bool SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockTypeValue( uint8_t * value, uint32_t length );
uint8_t * FBlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockTypeDataType();
uint32_t FBlockTypeLength() const;
bool FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * DescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& DescriptionDataType();
uint32_t DescriptionStreamLength() const;
bool DescriptionLoadNext();
bool DescriptionSaveNext();
bool Get(  );

};


class CDLNA;

class CDeckStatus
{
	CDLNA *m_pInstance;
public:
	explicit CDeckStatus( CDLNA *pInstance );
	~CDeckStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x200 /* = 512 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TDeckStatus
{
	DeckStatusPlay = 0,
	DeckStatusStop = 1,
	DeckStatusPause = 2,
	DeckStatusLoad = 3,
	DeckStatusUnload = 4,
	DeckStatusSearchForward = 5,
	DeckStatusSearchBackward = 6,
	DeckStatusFastForward = 7,
	DeckStatusFastBackward = 8,
	DeckStatusEmpty = 9,
	DeckStatusRetract = 10,
	DeckStatusSlowMotionForward = 32,
	DeckStatusSlowMotionBackward = 33,
	DeckStatusStepbyStep = 34,
	DeckStatusPreStop = 35,
	DeckStatusRewindToBeginOfTape = 48,
	DeckStatusForwardToEndOfTape = 49,
	DeckStatusSearchStartpositionNextTitle = 50,
	DeckStatusSearchStartpositionLastTitle = 51,
	DeckStatusFileplay = 64,
	DeckStatusFiletransfer = 65,
	DeckStatusRecord = 80,
	DeckStatusTimeshiftPlay = 81,
	DeckStatusTimeshiftPause = 82,
	DeckStatusTimeshiftSearchForward = 83,
	DeckStatusTimeshiftSearchBackward = 84,
	DeckStatusTimeshiftFastForward = 85,
	DeckStatusTimeshiftFastBackward = 86,
	DeckStatusTimeshiftSlowMotionForward = 87,
	DeckStatusTimeshiftSlowMotionBackward = 88,
	DeckStatusTimeshiftStepbyStep = 89,
	DeckStatusInvalid = 255,
};
bool DeckStatusValue( acs::generated::shadow::DLNA::CDeckStatus::TDeckStatus value );
acs::generated::shadow::DLNA::CDeckStatus::TDeckStatus DeckStatusValue() const;
::k2l::acs::protocols::most::CMOSTEnum& DeckStatusDataType();
bool Set(  );
bool SetGet(  );

};


class CDLNA;

class CTimePosition
{
	CDLNA *m_pInstance;
public:
	explicit CTimePosition( CDLNA *pInstance );
	~CTimePosition(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x201 /* = 513 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassRecord& FunctionInstance(void);
	bool DataDiskTimeValue( int32_t value );
int32_t DataDiskTimeValue() const;
bool SetDataDiskTime( int32_t value );
bool SetGetDataDiskTime( int32_t value );
bool GetDataDiskTime();
bool DataTrackTimeValue( int32_t value );
int32_t DataTrackTimeValue() const;
bool SetDataTrackTime( int32_t value );
bool SetGetDataTrackTime( int32_t value );
bool GetDataTrackTime();
bool DataTitleTimeValue( int32_t value );
int32_t DataTitleTimeValue() const;
bool SetDataTitleTime( int32_t value );
bool SetGetDataTitleTime( int32_t value );
bool GetDataTitleTime();
bool Set();
bool SetGet();

};


class CDLNA;

class CTrackPosition
{
	CDLNA *m_pInstance;
public:
	explicit CTrackPosition( CDLNA *pInstance );
	~CTrackPosition(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x202 /* = 514 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassNumber& FunctionInstance(void);
	uint16_t Value() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DataType();
bool Set( uint16_t value );
bool SetGet( uint16_t value );
bool Increment( uint8_t nsteps );
bool Decrement( uint8_t nsteps );
bool Get();

};


class CDLNA;

class CTrackInformation
{
	CDLNA *m_pInstance;
public:
	explicit CTrackInformation( CDLNA *pInstance );
	~CTrackInformation(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x434 /* = 1076 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool CurrentNumberTracksValue( uint32_t value );
uint32_t CurrentNumberTracksValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& CurrentNumberTracksDataType();
bool CurrentRelativeTrackPositionValue( uint32_t value );
uint32_t CurrentRelativeTrackPositionValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& CurrentRelativeTrackPositionDataType();

};


class CDLNA;

class CCurrentSongInfo
{
	CDLNA *m_pInstance;
public:
	explicit CCurrentSongInfo( CDLNA *pInstance );
	~CCurrentSongInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC01 /* = 3073 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
bool TitleValue( uint8_t * value, uint32_t length );
uint8_t * TitleValue() const;
::k2l::acs::protocols::most::CMOSTString& TitleDataType();
uint32_t TitleLength() const;
bool TitleAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TitleString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TitleString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool PlayTimeValue( uint32_t value );
uint32_t PlayTimeValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& PlayTimeDataType();
bool TrackNoValue( uint16_t value );
uint16_t TrackNoValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& TrackNoDataType();
bool FileNameValue( uint8_t * value, uint32_t length );
uint8_t * FileNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FileNameDataType();
uint32_t FileNameLength() const;
bool FileNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FileNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FileNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ArtistValue( uint8_t * value, uint32_t length );
uint8_t * ArtistValue() const;
::k2l::acs::protocols::most::CMOSTString& ArtistDataType();
uint32_t ArtistLength() const;
bool ArtistAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool ArtistString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool ArtistString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool AlbumValue( uint8_t * value, uint32_t length );
uint8_t * AlbumValue() const;
::k2l::acs::protocols::most::CMOSTString& AlbumDataType();
uint32_t AlbumLength() const;
bool AlbumAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool AlbumString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool AlbumString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool GenreValue( uint8_t * value, uint32_t length );
uint8_t * GenreValue() const;
::k2l::acs::protocols::most::CMOSTString& GenreDataType();
uint32_t GenreLength() const;
bool GenreAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool GenreString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool GenreString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );

};


class CDLNA;

class CCurrentVideoInfo
{
	CDLNA *m_pInstance;
public:
	explicit CCurrentVideoInfo( CDLNA *pInstance );
	~CCurrentVideoInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC05 /* = 3077 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
bool VideoTitleValue( uint8_t * value, uint32_t length );
uint8_t * VideoTitleValue() const;
::k2l::acs::protocols::most::CMOSTString& VideoTitleDataType();
uint32_t VideoTitleLength() const;
bool VideoTitleAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool VideoTitleString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool VideoTitleString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool VideoTimeValue( uint32_t value );
uint32_t VideoTimeValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& VideoTimeDataType();
bool VideoTrackValue( uint16_t value );
uint16_t VideoTrackValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& VideoTrackDataType();
bool VideoFilenameValue( uint8_t * value, uint32_t length );
uint8_t * VideoFilenameValue() const;
::k2l::acs::protocols::most::CMOSTString& VideoFilenameDataType();
uint32_t VideoFilenameLength() const;
bool VideoFilenameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool VideoFilenameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool VideoFilenameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );

};


class CDLNA;

class CDLNAConnection
{
	CDLNA *m_pInstance;
public:
	explicit CDLNAConnection( CDLNA *pInstance );
	~CDLNAConnection(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC10 /* = 3088 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration& FunctionInstance(void);
	enum TDLNAStataus
{
	DLNAStatausNotConnection = 0,
	DLNAStatausConnection = 1,
	DLNAStatausInvalid = 255,
};
acs::generated::shadow::DLNA::CDLNAConnection::TDLNAStataus Value() const;
::k2l::acs::protocols::most::CMOSTEnum& DataType();
bool Get();

};

class CDLNA: public ::k2l::acs::protocols::most::CShadowBase
{
private:
	CDLNA();
	CDLNA(CDLNA& toCopy);
public:
	enum
	{
		FBlockID = 0xA5 /* = 165 (decimal) */
	};

	CDLNA( ::k2l::acs::protocols::most::InstanceID_t instanceID );
	CDLNA( ::k2l::acs::protocols::most::FBlockID_t fblockID,
		k2l::acs::protocols::most::InstanceID_t instanceID );
	virtual ~CDLNA( void );

	virtual bool InitializeMOSTElement();
	inline ::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck& NotificationCheckFunctionInstance() { return m_notificationCheckFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionNotification& NotificationFunctionInstance() { return m_notificationFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionFktIDs& FktIDsFunctionInstance() { return m_fktIDsFunction; }

private:
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_versionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMajorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMinorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionBuildParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_fBlockInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_fBlockInfoIDParameter;
::k2l::acs::protocols::most::CMOSTEnum m_fBlockInfoFunctionMaturityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_fBlockInfoFunctionMaturityParameterSpec;
const static uint8_t m_fBlockInfoFunctionMaturityParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription0Parameter;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSupplierVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSupplierVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoMOSTVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoMOSTVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSystemIntegratorParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSystemIntegratorParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockTypeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61440Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61441Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61442Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61443Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61444Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61445Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61446Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_fBlockInfoDescriptionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_deckStatusFunction;
::k2l::acs::protocols::most::CMOSTEnum m_deckStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_deckStatusParameterSpec;
const static uint8_t m_deckStatusParameterSpecValues[32];
::k2l::acs::protocols::most::CMOSTFunctionClassRecord m_timePositionFunction;
::k2l::acs::protocols::most::CMOSTSignedLong m_timePositionDataDiskTimeParameter;
::k2l::acs::protocols::most::CMOSTSignedLong m_timePositionDataTrackTimeParameter;
::k2l::acs::protocols::most::CMOSTSignedLong m_timePositionDataTitleTimeParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassNumber m_trackPositionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_trackPositionTrackParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_trackInformationFunction;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_trackInformationCurrentNumberTracksParameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_trackInformationCurrentRelativeTrackPositionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_currentSongInfoFunction;
::k2l::acs::protocols::most::CMOSTString m_currentSongInfoTitleParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentSongInfoTitleParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_currentSongInfoPlayTimeParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_currentSongInfoTrackNoParameter;
::k2l::acs::protocols::most::CMOSTString m_currentSongInfoFileNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentSongInfoFileNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_currentSongInfoArtistParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentSongInfoArtistParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_currentSongInfoAlbumParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentSongInfoAlbumParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_currentSongInfoGenreParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentSongInfoGenreParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_currentVideoInfoFunction;
::k2l::acs::protocols::most::CMOSTString m_currentVideoInfoVideoTitleParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentVideoInfoVideoTitleParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_currentVideoInfoVideoTimeParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_currentVideoInfoVideoTrackParameter;
::k2l::acs::protocols::most::CMOSTString m_currentVideoInfoVideoFilenameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_currentVideoInfoVideoFilenameParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassEnumeration m_dLNAConnectionFunction;
::k2l::acs::protocols::most::CMOSTEnum m_dLNAConnectionDLNAStatausParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_dLNAConnectionDLNAStatausParameterSpec;
const static uint8_t m_dLNAConnectionDLNAStatausParameterSpecValues[3];
::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck m_notificationCheckFunction;
::k2l::acs::protocols::most::CWellknownFunctionNotification m_notificationFunction;
::k2l::acs::protocols::most::CWellknownFunctionFktIDs m_fktIDsFunction;
friend class CVersion;
friend class CFBlockInfo;
friend class CDeckStatus;
friend class CTimePosition;
friend class CTrackPosition;
friend class CTrackInformation;
friend class CCurrentSongInfo;
friend class CCurrentVideoInfo;
friend class CDLNAConnection;

};
}
        }
    }
}



#endif // __DHAVN_MOSTMANAGER_DLNASHADOW_H_
/*=============================================================================
 * END OF FILE
 *=============================================================================*/
