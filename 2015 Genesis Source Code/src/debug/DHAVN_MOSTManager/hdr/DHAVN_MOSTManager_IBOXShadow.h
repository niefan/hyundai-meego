/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2013-10-11.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

#ifndef __DHAVN_MOSTMANAGER_IBOXSHADOW_H_
#define __DHAVN_MOSTMANAGER_IBOXSHADOW_H_

/**
 * HMC DH Fcat v14.05.29
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

namespace acs
{
    namespace generated
    {
        namespace shadow
        {
namespace IBox
{

class CIBox;

class CVersion
{
	CIBox *m_pInstance;
public:
	explicit CVersion( CIBox *pInstance );
	~CVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x10 /* = 16 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool MajorValue( uint8_t value );
uint8_t MajorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MajorDataType();
bool MinorValue( uint8_t value );
uint8_t MinorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MinorDataType();
bool BuildValue( uint8_t value );
uint8_t BuildValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BuildDataType();

};


class CIBox;

class CFBlockInfo
{
	CIBox *m_pInstance;
public:
	explicit CFBlockInfo( CIBox *pInstance );
	~CFBlockInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x11 /* = 17 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool IDValue( uint16_t value );
uint16_t IDValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& IDDataType();
enum TFunctionMaturity
{
	FunctionMaturityUnknown = 0,
	FunctionMaturityInterfaceOnly = 1,
	FunctionMaturityPartlyImplemented = 2,
	FunctionMaturityFullyImplemented = 3,
	FunctionMaturityPartlyImplementedAndVerified = 17,
	FunctionMaturityFullyImplementedAndVerified = 18,
};
bool FunctionMaturityValue( acs::generated::shadow::IBox::CFBlockInfo::TFunctionMaturity value );
acs::generated::shadow::IBox::CFBlockInfo::TFunctionMaturity FunctionMaturityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& FunctionMaturityDataType();
bool FBlockNameValue( uint8_t * value, uint32_t length );
uint8_t * FBlockNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockNameDataType();
uint32_t FBlockNameLength() const;
bool FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SupplierVersionValue( uint8_t * value, uint32_t length );
uint8_t * SupplierVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& SupplierVersionDataType();
uint32_t SupplierVersionLength() const;
bool SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockVersionValue( uint8_t * value, uint32_t length );
uint8_t * FBlockVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockVersionDataType();
uint32_t FBlockVersionLength() const;
bool FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool MOSTVersionValue( uint8_t * value, uint32_t length );
uint8_t * MOSTVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& MOSTVersionDataType();
uint32_t MOSTVersionLength() const;
bool MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SystemIntegratorValue( uint8_t * value, uint32_t length );
uint8_t * SystemIntegratorValue() const;
::k2l::acs::protocols::most::CMOSTString& SystemIntegratorDataType();
uint32_t SystemIntegratorLength() const;
bool SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockTypeValue( uint8_t * value, uint32_t length );
uint8_t * FBlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockTypeDataType();
uint32_t FBlockTypeLength() const;
bool FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * DescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& DescriptionDataType();
uint32_t DescriptionStreamLength() const;
bool DescriptionLoadNext();
bool DescriptionSaveNext();
bool Get(  );

};


class CIBox;

class CSourceInfo
{
	CIBox *m_pInstance;
public:
	explicit CSourceInfo( CIBox *pInstance );
	~CSourceInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x100 /* = 256 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool BlockWidthValue( uint16_t value );
uint16_t BlockWidthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& BlockWidthDataType();
bool ConnectionLabelValue( uint16_t value );
uint16_t ConnectionLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& ConnectionLabelDataType();
enum TTransmissionClass
{
	TransmissionClassSynchronous = 0,
	TransmissionClassDiscreteFrameIsochronous = 1,
	TransmissionClassPacketizedIsochronous = 2,
	TransmissionClassQoSIP = 3,
	TransmissionClassAsynchronous = 4,
};
bool TransmissionClassValue( acs::generated::shadow::IBox::CSourceInfo::TTransmissionClass value );
acs::generated::shadow::IBox::CSourceInfo::TTransmissionClass TransmissionClassValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TransmissionClassDataType();
enum TContentProtection
{
	ContentProtectionNone = 0,
	ContentProtectionSerialCopyManagement = 1,
	ContentProtectionMOSTDTCPSupplementB = 2,
	ContentProtectionDTCPIPSupplementE = 3,
};
bool ContentProtectionValue( acs::generated::shadow::IBox::CSourceInfo::TContentProtection value );
acs::generated::shadow::IBox::CSourceInfo::TContentProtection ContentProtectionValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ContentProtectionDataType();
enum TContentType
{
	ContentTypeAudio = 0,
	ContentTypeReserved = 1,
	ContentTypeSPDIF = 2,
	ContentTypeSAD = 8,
	ContentTypePhaseInformation = 15,
	ContentTypeGenericPCM = 16,
	ContentTypeReserved1 = 17,
	ContentTypeMPEG1_SystemStream = 32,
	ContentTypeMPEG2_ProgramStream = 33,
	ContentTypeMPEG2_TransportStream = 34,
	ContentTypeReserved2 = 64,
	ContentTypeReserved3 = 65,
	ContentTypeReserved4 = 66,
	ContentTypeIPStreamDeprecated = 144,
	ContentTypeEthernet = 145,
};
bool ContentTypeValue( acs::generated::shadow::IBox::CSourceInfo::TContentType value );
acs::generated::shadow::IBox::CSourceInfo::TContentType ContentTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ContentTypeDataType();
bool AudioChannelsValue( uint8_t value );
uint8_t AudioChannelsValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& AudioChannelsDataType();
bool ResolutionValue( uint8_t value );
uint8_t ResolutionValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& ResolutionDataType();
bool SpeedFactorValue( uint8_t value );
uint8_t SpeedFactorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SpeedFactorDataType();
bool DataConnectionLabelValue( uint16_t value );
uint16_t DataConnectionLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DataConnectionLabelDataType();
enum TAudioChannelName
{
	AudioChannelNameCurrentlyNotInUse = 0,
	AudioChannelNameFrontLeftFL = 1,
	AudioChannelNameFrontRightFR = 2,
	AudioChannelNameFrontCenterFC = 3,
	AudioChannelNameLowFrequencyLF = 4,
	AudioChannelNameBackLeftBL = 5,
	AudioChannelNameBackRightBR = 6,
	AudioChannelNameFrontLeftOfCenterFLC = 7,
	AudioChannelNameFrontRightOfCenterFRC = 8,
	AudioChannelNameBackCenterBC = 9,
	AudioChannelNameSideLeftSL = 10,
	AudioChannelNameSideRightSR = 11,
	AudioChannelNameTopCenterTC = 12,
	AudioChannelNameTopFrontLeftTFL = 13,
	AudioChannelNameTopFrontCenterTFC = 14,
	AudioChannelNameTopFrontRightTFR = 15,
	AudioChannelNameTopBackLeftTBL = 16,
	AudioChannelNameTopBackCenterTBC = 17,
	AudioChannelNameTopBackRightTBR = 18,
	AudioChannelNameBackLeftOfCenterBCL = 19,
	AudioChannelNameBackRightOfCenterBCR = 20,
};
bool AudioChannelNameValue( acs::generated::shadow::IBox::CSourceInfo::TAudioChannelName value );
acs::generated::shadow::IBox::CSourceInfo::TAudioChannelName AudioChannelNameValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AudioChannelNameDataType();
bool BitsPerSampleValue( uint8_t value );
uint8_t BitsPerSampleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BitsPerSampleDataType();
bool AudioChannelListValue( uint8_t * value, uint32_t length );
const uint8_t * AudioChannelListValue() const;
::k2l::acs::protocols::most::CMOSTList& AudioChannelListDataType();
uint32_t AudioChannelListStreamLength() const;
bool IP_AddressValue( uint8_t * value, uint8_t length );
const uint8_t * IP_AddressValue() const;
::k2l::acs::protocols::most::CMOSTShortStream& IP_AddressDataType();
uint8_t IP_AddressStreamLength() const;
bool PortValue( uint16_t value );
uint16_t PortValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& PortDataType();
bool ContentDescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * ContentDescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& ContentDescriptionDataType();
uint32_t ContentDescriptionStreamLength() const;
bool ContentDescriptionLoadNext();
bool ContentDescriptionSaveNext();
bool DataFrameBlockwidthValue( uint8_t value );
uint8_t DataFrameBlockwidthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DataFrameBlockwidthDataType();
bool DataSampleFrequencyValue( uint32_t value );
uint32_t DataSampleFrequencyValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& DataSampleFrequencyDataType();
bool ClkSrcLabelValue( uint16_t value );
uint16_t ClkSrcLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& ClkSrcLabelDataType();
bool DataRateValue( uint32_t value );
uint32_t DataRateValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& DataRateDataType();
bool TransmissionParameterValue( uint8_t * value, uint32_t length );
const uint8_t * TransmissionParameterValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& TransmissionParameterDataType();
uint32_t TransmissionParameterStreamLength() const;
bool TransmissionParameterLoadNext();
bool TransmissionParameterSaveNext();
bool Get(  );

};


class CIBox;

class CAllocate
{
	CIBox *m_pInstance;
public:
	explicit CAllocate( CIBox *pInstance );
	~CAllocate(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x101 /* = 257 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool BlockWidthValue( uint16_t value );
uint16_t BlockWidthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& BlockWidthDataType();
bool ConnectionLabelValue( uint16_t value );
uint16_t ConnectionLabelValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& ConnectionLabelDataType();
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool StartResultAck( );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CDeAllocate
{
	CIBox *m_pInstance;
public:
	explicit CDeAllocate( CIBox *pInstance );
	~CDeAllocate(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x102 /* = 258 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool StartResultAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CSourceActivity
{
	CIBox *m_pInstance;
public:
	explicit CSourceActivity( CIBox *pInstance );
	~CSourceActivity(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x103 /* = 259 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
enum TActivity
{
	ActivityOff = 0,
	ActivityPause = 1,
	ActivityOn = 2,
};
bool ActivityValue( acs::generated::shadow::IBox::CSourceActivity::TActivity value );
acs::generated::shadow::IBox::CSourceActivity::TActivity ActivityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& ActivityDataType();
bool StartResultAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CSourceName
{
	CIBox *m_pInstance;
public:
	explicit CSourceName( CIBox *pInstance );
	~CSourceName(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x104 /* = 260 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool SourceNrValue( uint8_t value );
uint8_t SourceNrValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& SourceNrDataType();
bool SourceNameValue( uint8_t * value, uint32_t length );
uint8_t * SourceNameValue() const;
::k2l::acs::protocols::most::CMOSTString& SourceNameDataType();
uint32_t SourceNameLength() const;
bool SourceNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SourceNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SourceNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool Get(  );

};


class CIBox;

class CWiFiMode
{
	CIBox *m_pInstance;
public:
	explicit CWiFiMode( CIBox *pInstance );
	~CWiFiMode(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC02 /* = 3074 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TWiFiMode
{
	WiFiModeNotActivated = 0,
	WiFiModeAPAccessPointMode = 1,
	WiFiModeClientMode = 2,
	WiFiModeDirectMode = 3,
	WiFiModeInvalid = 255,
};
bool WiFiModeValue( acs::generated::shadow::IBox::CWiFiMode::TWiFiMode value );
acs::generated::shadow::IBox::CWiFiMode::TWiFiMode WiFiModeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& WiFiModeDataType();
bool ClientStatusValue( uint8_t value );
uint8_t ClientStatusValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& ClientStatusDataType();

};


class CIBox;

class CAppInstallStatus
{
	CIBox *m_pInstance;
public:
	explicit CAppInstallStatus( CIBox *pInstance );
	~CAppInstallStatus(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC0C /* = 3084 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TAppStatus
{
	AppStatusInstallReady = 0,
	AppStatusInstalling = 1,
	AppStatusInstallComplete = 2,
	AppStatusImpossibleToInstall = 3,
	AppStatusDownloadReady = 16,
	AppStatusDownloading = 17,
	AppStatusDownloadComplete = 18,
	AppStatusImpossibleToDownload = 19,
	AppStatusInstallOrDownloadError = 240,
	AppStatusInvalid = 255,
};
bool AppStatusValue( acs::generated::shadow::IBox::CAppInstallStatus::TAppStatus value );
acs::generated::shadow::IBox::CAppInstallStatus::TAppStatus AppStatusValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AppStatusDataType();
bool AppProgressValue( uint8_t value );
uint8_t AppProgressValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& AppProgressDataType();

};


class CIBox;

class CVoiceSearchOnline
{
	CIBox *m_pInstance;
public:
	explicit CVoiceSearchOnline( CIBox *pInstance );
	~CVoiceSearchOnline(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC17 /* = 3095 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TBlockType
{
	BlockTypeStartOfFrame = 1,
	BlockTypeInlineFrame = 2,
	BlockTypeEndOfFrame = 3,
};
bool BlockTypeValue( acs::generated::shadow::IBox::CVoiceSearchOnline::TBlockType value );
acs::generated::shadow::IBox::CVoiceSearchOnline::TBlockType BlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& BlockTypeDataType();
bool BlockCounterValue( uint32_t value );
uint32_t BlockCounterValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& BlockCounterDataType();
bool BlockSizeValue( uint16_t value );
uint16_t BlockSizeValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& BlockSizeDataType();
bool VoiceDataValue( uint8_t * value, uint32_t length );
uint8_t * VoiceDataValue() const;
::k2l::acs::protocols::most::CMOSTStream& VoiceDataDataType();
uint32_t VoiceDataStreamLength() const;
bool StartResultAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CGISDataAvailable
{
	CIBox *m_pInstance;
public:
	explicit CGISDataAvailable( CIBox *pInstance );
	~CGISDataAvailable(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC20 /* = 3104 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TAvailable
{
	AvailableIdle = 0,
	AvailableReady = 1,
	AvailableInvalid = 255,
};
bool AvailableValue( acs::generated::shadow::IBox::CGISDataAvailable::TAvailable value );
acs::generated::shadow::IBox::CGISDataAvailable::TAvailable AvailableValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AvailableDataType();

};


class CIBox;

class CGISRequest
{
	CIBox *m_pInstance;
public:
	explicit CGISRequest( CIBox *pInstance );
	~CGISRequest(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC21 /* = 3105 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool TIDValue( uint8_t * value, uint32_t length );
uint8_t * TIDValue() const;
::k2l::acs::protocols::most::CMOSTString& TIDDataType();
uint32_t TIDLength() const;
bool TIDAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TIDString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TIDString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool GISDataValue( uint8_t * value, uint32_t length );
uint8_t * GISDataValue() const;
::k2l::acs::protocols::most::CMOSTStream& GISDataDataType();
uint32_t GISDataStreamLength() const;
bool StartResultAck( );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessFail = 1,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::shadow::IBox::CGISRequest::TSuccess value );
acs::generated::shadow::IBox::CGISRequest::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CGISDataRequest
{
	CIBox *m_pInstance;
public:
	explicit CGISDataRequest( CIBox *pInstance );
	~CGISDataRequest(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC22 /* = 3106 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool TIDValue( uint8_t * value, uint32_t length );
uint8_t * TIDValue() const;
::k2l::acs::protocols::most::CMOSTString& TIDDataType();
uint32_t TIDLength() const;
bool TIDAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TIDString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TIDString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool GISDataValue( uint8_t * value, uint32_t length );
uint8_t * GISDataValue() const;
::k2l::acs::protocols::most::CMOSTStream& GISDataDataType();
uint32_t GISDataStreamLength() const;
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool StartResultAck( );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CPOIDataAvailable
{
	CIBox *m_pInstance;
public:
	explicit CPOIDataAvailable( CIBox *pInstance );
	~CPOIDataAvailable(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC23 /* = 3107 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::shadow::IBox::CPOIDataAvailable::TTarget value );
acs::generated::shadow::IBox::CPOIDataAvailable::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
enum TAvailable
{
	AvailableIdle = 0,
	AvailableReady = 1,
	AvailableInvalid = 255,
};
bool AvailableValue( acs::generated::shadow::IBox::CPOIDataAvailable::TAvailable value );
acs::generated::shadow::IBox::CPOIDataAvailable::TAvailable AvailableValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AvailableDataType();
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );

};


class CIBox;

class CPOIDataRequest
{
	CIBox *m_pInstance;
public:
	explicit CPOIDataRequest( CIBox *pInstance );
	~CPOIDataRequest(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC25 /* = 3109 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ArrayCountValue( uint32_t value );
uint32_t ArrayCountValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& ArrayCountDataType();
bool AttributionsInfoValue( uint8_t * value, uint32_t length );
uint8_t * AttributionsInfoValue() const;
::k2l::acs::protocols::most::CMOSTString& AttributionsInfoDataType();
uint32_t AttributionsInfoLength() const;
bool AttributionsInfoAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool AttributionsInfoString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool AttributionsInfoString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TSrc
{
	SrcGoogle = 0,
	SrcNavInfo = 1,
};
bool SrcValue( acs::generated::shadow::IBox::CPOIDataRequest::TSrc value );
acs::generated::shadow::IBox::CPOIDataRequest::TSrc SrcValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SrcDataType();
enum TLang
{
	LangEnglish = 0,
	LangFrench = 1,
	LangSpanish = 2,
	LangKorean = 3,
	LangChinese = 4,
	LangPortuguese = 5,
};
bool LangValue( acs::generated::shadow::IBox::CPOIDataRequest::TLang value );
acs::generated::shadow::IBox::CPOIDataRequest::TLang LangValue() const;
::k2l::acs::protocols::most::CMOSTEnum& LangDataType();
enum TCate
{
	CatePOI = 0,
	CateRestaurant = 1,
	CateGasStation = 2,
	CateFriendFinder = 3,
};
bool CateValue( acs::generated::shadow::IBox::CPOIDataRequest::TCate value );
acs::generated::shadow::IBox::CPOIDataRequest::TCate CateValue() const;
::k2l::acs::protocols::most::CMOSTEnum& CateDataType();
bool RatingValue( uint8_t * value, uint32_t length );
uint8_t * RatingValue() const;
::k2l::acs::protocols::most::CMOSTString& RatingDataType();
uint32_t RatingLength() const;
bool RatingAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool RatingString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool RatingString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool PhoneValue( uint8_t * value, uint32_t length );
uint8_t * PhoneValue() const;
::k2l::acs::protocols::most::CMOSTString& PhoneDataType();
uint32_t PhoneLength() const;
bool PhoneAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool PhoneString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool PhoneString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool AddrValue( uint8_t * value, uint32_t length );
uint8_t * AddrValue() const;
::k2l::acs::protocols::most::CMOSTString& AddrDataType();
uint32_t AddrLength() const;
bool AddrAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool AddrString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool AddrString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ZipValue( uint8_t * value, uint32_t length );
uint8_t * ZipValue() const;
::k2l::acs::protocols::most::CMOSTString& ZipDataType();
uint32_t ZipLength() const;
bool ZipAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool ZipString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool ZipString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool NoteValue( uint8_t * value, uint32_t length );
uint8_t * NoteValue() const;
::k2l::acs::protocols::most::CMOSTString& NoteDataType();
uint32_t NoteLength() const;
bool NoteAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NoteString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NoteString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool UrlValue( uint8_t * value, uint32_t length );
uint8_t * UrlValue() const;
::k2l::acs::protocols::most::CMOSTString& UrlDataType();
uint32_t UrlLength() const;
bool UrlAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool UrlString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool UrlString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool AngleValue( uint16_t value );
uint16_t AngleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& AngleDataType();
bool DistanceValue( uint8_t * value, uint32_t length );
uint8_t * DistanceValue() const;
::k2l::acs::protocols::most::CMOSTString& DistanceDataType();
uint32_t DistanceLength() const;
bool DistanceAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DistanceString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DistanceString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DirectionValue( uint8_t * value, uint32_t length );
uint8_t * DirectionValue() const;
::k2l::acs::protocols::most::CMOSTString& DirectionDataType();
uint32_t DirectionLength() const;
bool DirectionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DirectionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DirectionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool LatValue( int32_t value );
int32_t LatValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LatDataType();
bool LonValue( int32_t value );
int32_t LonValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LonDataType();
enum TType
{
	TypeWGS84 = 0,
	TypeBessel = 1,
};
bool TypeValue( acs::generated::shadow::IBox::CPOIDataRequest::TType value );
acs::generated::shadow::IBox::CPOIDataRequest::TType TypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TypeDataType();
bool AltValue( uint32_t value );
uint32_t AltValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& AltDataType();
bool POIDataValue( uint8_t * value, uint32_t length );
const uint8_t * POIDataValue() const;
::k2l::acs::protocols::most::CMOSTList& POIDataDataType();
uint32_t POIDataStreamLength() const;
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool StartResultAck( );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CReceivedPOI
{
	CIBox *m_pInstance;
public:
	explicit CReceivedPOI( CIBox *pInstance );
	~CReceivedPOI(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC26 /* = 3110 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TAvailable
{
	AvailableIdle = 0,
	AvailableReady = 1,
	AvailableInvalid = 255,
};
bool AvailableValue( acs::generated::shadow::IBox::CReceivedPOI::TAvailable value );
acs::generated::shadow::IBox::CReceivedPOI::TAvailable AvailableValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AvailableDataType();
bool POICountValue( uint8_t value );
uint8_t POICountValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& POICountDataType();

};


class CIBox;

class COpenBrowser
{
	CIBox *m_pInstance;
public:
	explicit COpenBrowser( CIBox *pInstance );
	~COpenBrowser(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC2A /* = 3114 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::shadow::IBox::COpenBrowser::TTarget value );
acs::generated::shadow::IBox::COpenBrowser::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
enum TOpenType
{
	OpenTypeURL = 0,
	OpenTypeSearchWord = 1,
};
bool OpenTypeValue( acs::generated::shadow::IBox::COpenBrowser::TOpenType value );
acs::generated::shadow::IBox::COpenBrowser::TOpenType OpenTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& OpenTypeDataType();
bool TextValue( uint8_t * value, uint32_t length );
uint8_t * TextValue() const;
::k2l::acs::protocols::most::CMOSTString& TextDataType();
uint32_t TextLength() const;
bool TextAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TextString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TextString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool StartResultAck( );
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CReceivedPOF
{
	CIBox *m_pInstance;
public:
	explicit CReceivedPOF( CIBox *pInstance );
	~CReceivedPOF(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC2B /* = 3115 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TAvailable
{
	AvailableIdle = 0,
	AvailableReady = 1,
	AvailableInvalid = 255,
};
bool AvailableValue( acs::generated::shadow::IBox::CReceivedPOF::TAvailable value );
acs::generated::shadow::IBox::CReceivedPOF::TAvailable AvailableValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AvailableDataType();
bool POFCountValue( uint8_t value );
uint8_t POFCountValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& POFCountDataType();

};


class CIBox;

class CLSDataAvailable
{
	CIBox *m_pInstance;
public:
	explicit CLSDataAvailable( CIBox *pInstance );
	~CLSDataAvailable(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC30 /* = 3120 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
enum TAvailable
{
	AvailableIdle = 0,
	AvailableReady = 1,
	AvailableInvalid = 255,
};
bool AvailableValue( acs::generated::shadow::IBox::CLSDataAvailable::TAvailable value );
acs::generated::shadow::IBox::CLSDataAvailable::TAvailable AvailableValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AvailableDataType();

};


class CIBox;

class CLSRequest
{
	CIBox *m_pInstance;
public:
	explicit CLSRequest( CIBox *pInstance );
	~CLSRequest(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC31 /* = 3121 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool LSDataValue( uint8_t * value, uint32_t length );
uint8_t * LSDataValue() const;
::k2l::acs::protocols::most::CMOSTStream& LSDataDataType();
uint32_t LSDataStreamLength() const;
bool StartResultAck( );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessFail = 1,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::shadow::IBox::CLSRequest::TSuccess value );
acs::generated::shadow::IBox::CLSRequest::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};


class CIBox;

class CLSDataRequest
{
	CIBox *m_pInstance;
public:
	explicit CLSDataRequest( CIBox *pInstance );
	~CLSDataRequest(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC32 /* = 3122 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::shadow::IBox::CLSDataRequest::TTarget value );
acs::generated::shadow::IBox::CLSDataRequest::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
bool URIValue( uint8_t * value, uint32_t length );
uint8_t * URIValue() const;
::k2l::acs::protocols::most::CMOSTString& URIDataType();
uint32_t URILength() const;
bool URIAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool URIString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool LSDataValue( uint8_t * value, uint32_t length );
uint8_t * LSDataValue() const;
::k2l::acs::protocols::most::CMOSTStream& LSDataDataType();
uint32_t LSDataStreamLength() const;
bool ParseResultAck( uint32_t payloadLength, const uint8_t * payload );
bool StartResultAck( );
bool AbortAck( uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IShadowMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            

};

class CIBox;

class CACNActivated
{
        CIBox *m_pInstance;
public:
        explicit CACNActivated( CIBox *pInstance );
        ~CACNActivated(void);

        void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
        bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

        enum
        {
                FunctionID = 0xC33 /* = 3123 (decimal) */
        };

        ::k2l::acs::protocols::most::CMOSTFunctionClassSwitch& FunctionInstance(void);
        bool Value() const;
::k2l::acs::protocols::most::CMOSTBoolean& DataType();
bool Get();

};

class CIBox: public ::k2l::acs::protocols::most::CShadowBase
{
private:
	CIBox();
	CIBox(CIBox& toCopy);
public:
	enum
	{
		FBlockID = 0xA3 /* = 163 (decimal) */
	};

	CIBox( ::k2l::acs::protocols::most::InstanceID_t instanceID );
	CIBox( ::k2l::acs::protocols::most::FBlockID_t fblockID,
		k2l::acs::protocols::most::InstanceID_t instanceID );
	virtual ~CIBox( void );

	virtual bool InitializeMOSTElement();
	inline ::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck& NotificationCheckFunctionInstance() { return m_notificationCheckFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionNotification& NotificationFunctionInstance() { return m_notificationFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionFktIDs& FktIDsFunctionInstance() { return m_fktIDsFunction; }

private:
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_versionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMajorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMinorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionBuildParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_fBlockInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_fBlockInfoIDParameter;
::k2l::acs::protocols::most::CMOSTEnum m_fBlockInfoFunctionMaturityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_fBlockInfoFunctionMaturityParameterSpec;
const static uint8_t m_fBlockInfoFunctionMaturityParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription0Parameter;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSupplierVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSupplierVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoMOSTVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoMOSTVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSystemIntegratorParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSystemIntegratorParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockTypeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61440Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61441Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61442Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61443Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61444Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61445Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61446Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_fBlockInfoDescriptionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_sourceInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_sourceInfoSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoBlockWidthParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoBlockWidthParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoConnectionLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoConnectionLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoTransmissionClassParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoTransmissionClassParameterSpec;
const static uint8_t m_sourceInfoTransmissionClassParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoContentProtectionParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoContentProtectionParameterSpec;
const static uint8_t m_sourceInfoContentProtectionParameterSpecValues[4];
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoContentTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoContentTypeParameterSpec;
const static uint8_t m_sourceInfoContentTypeParameterSpecValues[15];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoAudioChannelsParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoResolutionParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription0Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoSpeedFactorParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription2RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription2RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription2Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoDataConnectionLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoDataConnectionLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription8RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription8RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription8Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription15Parameter;
::k2l::acs::protocols::most::CMOSTEnum m_sourceInfoAudioChannelNameParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceInfoAudioChannelNameParameterSpec;
const static uint8_t m_sourceInfoAudioChannelNameParameterSpecValues[21];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoBitsPerSampleParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoAudioChannelListRecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoAudioChannelListRecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoAudioChannelListParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription16RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription16RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription16Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription32Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription33Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription34Parameter;
::k2l::acs::protocols::most::CMOSTShortStream m_sourceInfoIP_AddressParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoPortParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription144RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoContentDescription144RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription144Parameter;
::k2l::acs::protocols::most::CMOSTShortList m_sourceInfoContentDescription145Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_sourceInfoContentDescriptionParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter0Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceInfoDataFrameBlockwidthParameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_sourceInfoDataSampleFrequencyParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceInfoClkSrcLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_sourceInfoClkSrcLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter1RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter1RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter1Parameter;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_sourceInfoDataRateParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter2RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter2RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter2Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter3RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_sourceInfoTransmissionParameter3RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter3Parameter;
::k2l::acs::protocols::most::CMOSTList m_sourceInfoTransmissionParameter4Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_sourceInfoTransmissionParameterParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_allocateFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_allocateSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_allocateSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_allocateSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_allocateBlockWidthParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_allocateBlockWidthParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_allocateConnectionLabelParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_allocateConnectionLabelParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_deAllocateFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_deAllocateSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_deAllocateSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_deAllocateSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceMethod m_sourceActivityFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_sourceActivitySenderHandleParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceActivitySourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_sourceActivitySourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_sourceActivityActivityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_sourceActivityActivityParameterSpec;
const static uint8_t m_sourceActivityActivityParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_sourceNameFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_sourceNameSourceNrParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_sourceNameSourceNrParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_sourceNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_sourceNameParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_wiFiModeFunction;
::k2l::acs::protocols::most::CMOSTEnum m_wiFiModeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_wiFiModeParameterSpec;
const static uint8_t m_wiFiModeParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_wiFiModeClientStatusParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_wiFiModeClientStatusParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_appInstallStatusFunction;
::k2l::acs::protocols::most::CMOSTEnum m_appInstallStatusAppStatusParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_appInstallStatusAppStatusParameterSpec;
const static uint8_t m_appInstallStatusAppStatusParameterSpecValues[10];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_appInstallStatusAppProgressParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_appInstallStatusAppProgressParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_voiceSearchOnlineFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_voiceSearchOnlineSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_voiceSearchOnlineBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_voiceSearchOnlineBlockTypeParameterSpec;
const static uint8_t m_voiceSearchOnlineBlockTypeParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTUnsignedLong m_voiceSearchOnlineBlockCounterParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_voiceSearchOnlineBlockSizeParameter;
::k2l::acs::protocols::most::CMOSTStream m_voiceSearchOnlineVoiceDataParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_gISDataAvailableFunction;
::k2l::acs::protocols::most::CMOSTString m_gISDataAvailableURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_gISDataAvailableURIParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_gISDataAvailableAvailableParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_gISDataAvailableAvailableParameterSpec;
const static uint8_t m_gISDataAvailableAvailableParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_gISRequestFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gISRequestSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTString m_gISRequestURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_gISRequestURIParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_gISRequestTIDParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_gISRequestTIDParameterSpec;
::k2l::acs::protocols::most::CMOSTStream m_gISRequestGISDataParameter;
::k2l::acs::protocols::most::CMOSTEnum m_gISRequestSuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_gISRequestSuccessParameterSpec;
const static uint8_t m_gISRequestSuccessParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_gISDataRequestFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gISDataRequestSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTString m_gISDataRequestURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_gISDataRequestURIParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_gISDataRequestTIDParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_gISDataRequestTIDParameterSpec;
::k2l::acs::protocols::most::CMOSTStream m_gISDataRequestGISDataParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_pOIDataAvailableFunction;
::k2l::acs::protocols::most::CMOSTEnum m_pOIDataAvailableTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_pOIDataAvailableTargetParameterSpec;
const static uint8_t m_pOIDataAvailableTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTEnum m_pOIDataAvailableAvailableParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_pOIDataAvailableAvailableParameterSpec;
const static uint8_t m_pOIDataAvailableAvailableParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTString m_pOIDataAvailableURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataAvailableURIParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_pOIDataRequestFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_pOIDataRequestSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestURIParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedLong m_pOIDataRequestArrayCountParameter;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestAttributionsInfoParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestAttributionsInfoParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_pOIDataRequestSrcParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_pOIDataRequestSrcParameterSpec;
const static uint8_t m_pOIDataRequestSrcParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTEnum m_pOIDataRequestLangParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_pOIDataRequestLangParameterSpec;
const static uint8_t m_pOIDataRequestLangParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTEnum m_pOIDataRequestCateParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_pOIDataRequestCateParameterSpec;
const static uint8_t m_pOIDataRequestCateParameterSpecValues[4];
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestRatingParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestRatingParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestPhoneParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestPhoneParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestAddrParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestAddrParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestZipParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestZipParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestNoteParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestNoteParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestUrlParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestUrlParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_pOIDataRequestAngleParameter;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestDistanceParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestDistanceParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_pOIDataRequestDirectionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_pOIDataRequestDirectionParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_pOIDataRequestLatParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_pOIDataRequestLatParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_pOIDataRequestLonParameter;
::k2l::acs::protocols::most::CMOSTEnum m_pOIDataRequestTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_pOIDataRequestTypeParameterSpec;
const static uint8_t m_pOIDataRequestTypeParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTUnsignedLong m_pOIDataRequestAltParameter;
::k2l::acs::protocols::most::CMOSTRecord m_pOIDataRequestPOIDataRecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_pOIDataRequestPOIDataRecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_pOIDataRequestPOIDataParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_receivedPOIFunction;
::k2l::acs::protocols::most::CMOSTEnum m_receivedPOIAvailableParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_receivedPOIAvailableParameterSpec;
const static uint8_t m_receivedPOIAvailableParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_receivedPOIPOICountParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_openBrowserFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_openBrowserSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_openBrowserTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_openBrowserTargetParameterSpec;
const static uint8_t m_openBrowserTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTEnum m_openBrowserOpenTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_openBrowserOpenTypeParameterSpec;
const static uint8_t m_openBrowserOpenTypeParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTString m_openBrowserTextParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_openBrowserTextParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_receivedPOFFunction;
::k2l::acs::protocols::most::CMOSTEnum m_receivedPOFAvailableParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_receivedPOFAvailableParameterSpec;
const static uint8_t m_receivedPOFAvailableParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTUnsignedByte m_receivedPOFPOFCountParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_lSDataAvailableFunction;
::k2l::acs::protocols::most::CMOSTString m_lSDataAvailableURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_lSDataAvailableURIParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_lSDataAvailableAvailableParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_lSDataAvailableAvailableParameterSpec;
const static uint8_t m_lSDataAvailableAvailableParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_lSRequestFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_lSRequestSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTString m_lSRequestURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_lSRequestURIParameterSpec;
::k2l::acs::protocols::most::CMOSTStream m_lSRequestLSDataParameter;
::k2l::acs::protocols::most::CMOSTEnum m_lSRequestSuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_lSRequestSuccessParameterSpec;
const static uint8_t m_lSRequestSuccessParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_lSDataRequestFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_lSDataRequestSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_lSDataRequestTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_lSDataRequestTargetParameterSpec;
const static uint8_t m_lSDataRequestTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTString m_lSDataRequestURIParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_lSDataRequestURIParameterSpec;
::k2l::acs::protocols::most::CMOSTStream m_lSDataRequestLSDataParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassSwitch m_aCNActivatedFunction;
::k2l::acs::protocols::most::CMOSTBoolean m_aCNActivatedParameter;
::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck m_notificationCheckFunction;
::k2l::acs::protocols::most::CWellknownFunctionNotification m_notificationFunction;
::k2l::acs::protocols::most::CWellknownFunctionFktIDs m_fktIDsFunction;
friend class CVersion;
friend class CFBlockInfo;
friend class CSourceInfo;
friend class CAllocate;
friend class CDeAllocate;
friend class CSourceActivity;
friend class CSourceName;
friend class CWiFiMode;
friend class CAppInstallStatus;
friend class CVoiceSearchOnline;
friend class CGISDataAvailable;
friend class CGISRequest;
friend class CGISDataRequest;
friend class CPOIDataAvailable;
friend class CPOIDataRequest;
friend class CReceivedPOI;
friend class COpenBrowser;
friend class CReceivedPOF;
friend class CLSDataAvailable;
friend class CLSRequest;
friend class CLSDataRequest;
friend class CACNActivated;

};
}
        }
    }
}



#endif // __DHAVN_MOSTMANAGER_IBOXSHADOW_H_
/*=============================================================================
 * END OF FILE
 *=============================================================================*/
