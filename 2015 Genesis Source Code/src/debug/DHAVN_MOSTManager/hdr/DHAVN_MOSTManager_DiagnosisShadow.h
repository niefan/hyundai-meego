/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2013-09-21.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

#ifndef __DHAVN_MOSTMANAGER_DIAGNOSISSHADOW_H_
#define __DHAVN_MOSTMANAGER_DIAGNOSISSHADOW_H_

/**
 * HMC DH Fcat v13.09.2
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

namespace acs
{
    namespace generated
    {
        namespace shadow
        {
namespace Diagnosis
{

class CDiagnosis;

class CVersion
{
	CDiagnosis *m_pInstance;
public:
	explicit CVersion( CDiagnosis *pInstance );
	~CVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x10 /* = 16 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool MajorValue( uint8_t value );
uint8_t MajorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MajorDataType();
bool MinorValue( uint8_t value );
uint8_t MinorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MinorDataType();
bool BuildValue( uint8_t value );
uint8_t BuildValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BuildDataType();

};


class CDiagnosis;

class CFBlockInfo
{
	CDiagnosis *m_pInstance;
public:
	explicit CFBlockInfo( CDiagnosis *pInstance );
	~CFBlockInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x11 /* = 17 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool IDValue( uint16_t value );
uint16_t IDValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& IDDataType();
enum TFunctionMaturity
{
	FunctionMaturityUnknown = 0,
	FunctionMaturityInterfaceOnly = 1,
	FunctionMaturityPartlyImplemented = 2,
	FunctionMaturityFullyImplemented = 3,
	FunctionMaturityPartlyImplementedAndVerified = 17,
	FunctionMaturityFullyImplementedAndVerified = 18,
};
bool FunctionMaturityValue( acs::generated::shadow::Diagnosis::CFBlockInfo::TFunctionMaturity value );
acs::generated::shadow::Diagnosis::CFBlockInfo::TFunctionMaturity FunctionMaturityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& FunctionMaturityDataType();
bool FBlockNameValue( uint8_t * value, uint32_t length );
uint8_t * FBlockNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockNameDataType();
uint32_t FBlockNameLength() const;
bool FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SupplierVersionValue( uint8_t * value, uint32_t length );
uint8_t * SupplierVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& SupplierVersionDataType();
uint32_t SupplierVersionLength() const;
bool SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockVersionValue( uint8_t * value, uint32_t length );
uint8_t * FBlockVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockVersionDataType();
uint32_t FBlockVersionLength() const;
bool FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool MOSTVersionValue( uint8_t * value, uint32_t length );
uint8_t * MOSTVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& MOSTVersionDataType();
uint32_t MOSTVersionLength() const;
bool MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SystemIntegratorValue( uint8_t * value, uint32_t length );
uint8_t * SystemIntegratorValue() const;
::k2l::acs::protocols::most::CMOSTString& SystemIntegratorDataType();
uint32_t SystemIntegratorLength() const;
bool SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockTypeValue( uint8_t * value, uint32_t length );
uint8_t * FBlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockTypeDataType();
uint32_t FBlockTypeLength() const;
bool FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * DescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& DescriptionDataType();
uint32_t DescriptionStreamLength() const;
bool DescriptionLoadNext();
bool DescriptionSaveNext();
bool Get(  );

};


class CDiagnosis;

class CSWVersion
{
	CDiagnosis *m_pInstance;
public:
	explicit CSWVersion( CDiagnosis *pInstance );
	~CSWVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC02 /* = 3074 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool Get(  );
bool MainSWValue( uint8_t * value, uint32_t length );
uint8_t * MainSWValue() const;
::k2l::acs::protocols::most::CMOSTString& MainSWDataType();
uint32_t MainSWLength() const;
bool MainSWAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MainSWString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MainSWString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FCatValue( uint8_t * value, uint32_t length );
uint8_t * FCatValue() const;
::k2l::acs::protocols::most::CMOSTString& FCatDataType();
uint32_t FCatLength() const;
bool FCatAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FCatString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FCatString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool CANDBValue( uint8_t * value, uint32_t length );
uint8_t * CANDBValue() const;
::k2l::acs::protocols::most::CMOSTString& CANDBDataType();
uint32_t CANDBLength() const;
bool CANDBAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool CANDBString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool CANDBString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );

};


class CDiagnosis;

class CVariantCode
{
	CDiagnosis *m_pInstance;
public:
	explicit CVariantCode( CDiagnosis *pInstance );
	~CVariantCode(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC03 /* = 3075 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty& FunctionInstance(void);
	bool Get(  );
enum TVehicleVariant
{
	VehicleVariantDH = 0,
	VehicleVariantKH = 1,
	VehicleVariantVI = 2,
	VehicleVariantHI = 3,
	VehicleVariantInvalid = 255,
};
bool VehicleVariantValue( acs::generated::shadow::Diagnosis::CVariantCode::TVehicleVariant value );
acs::generated::shadow::Diagnosis::CVariantCode::TVehicleVariant VehicleVariantValue() const;
::k2l::acs::protocols::most::CMOSTEnum& VehicleVariantDataType();
enum TCountryVariant
{
	CountryVariantKoreaDomestic = 0,
	CountryVariantU = 1,
	CountryVariantChina = 2,
	CountryVariantGeneral = 3,
	CountryVariantM = 4,
	CountryVariantEurope = 5,
	CountryVariantCanada = 6,
	CountryVariantRussia = 7,
	CountryVariantTurkey = 8,
	CountryVariantInvalid = 255,
};
bool CountryVariantValue( acs::generated::shadow::Diagnosis::CVariantCode::TCountryVariant value );
acs::generated::shadow::Diagnosis::CVariantCode::TCountryVariant CountryVariantValue() const;
::k2l::acs::protocols::most::CMOSTEnum& CountryVariantDataType();
bool SystemVariantValue( uint32_t value );
uint32_t SystemVariantValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& SystemVariantDataType();
enum TDVDRegion
{
	DVDRegion = 0,
	DVDRegionBermuda = 1,
	DVDRegionTheMiddleEast = 2,
	DVDRegionSoutheastAsia = 3,
	DVDRegionAustralia = 4,
	DVDRegionTheRestOfAfrica = 5,
	DVDRegionMainlandChina = 6,
	DVDRegionReservedForFutureUseFoundInUseOnProtectedScreenerCopiesOfMPAArelatedDVDs = 7,
	DVDRegionInternationalVenuesSuchAsAircraft = 8,
};
bool DVDRegionValue( acs::generated::shadow::Diagnosis::CVariantCode::TDVDRegion value );
acs::generated::shadow::Diagnosis::CVariantCode::TDVDRegion DVDRegionValue() const;
::k2l::acs::protocols::most::CMOSTEnum& DVDRegionDataType();
bool DVDMenuLanguageValue( uint16_t value );
uint16_t DVDMenuLanguageValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DVDMenuLanguageDataType();

};

class CDiagnosis: public ::k2l::acs::protocols::most::CShadowBase
{
private:
	CDiagnosis();
	CDiagnosis(CDiagnosis& toCopy);
public:
	enum
	{
		FBlockID = 0x6 /* = 6 (decimal) */
	};

	CDiagnosis( ::k2l::acs::protocols::most::InstanceID_t instanceID );
	CDiagnosis( ::k2l::acs::protocols::most::FBlockID_t fblockID,
		k2l::acs::protocols::most::InstanceID_t instanceID );
	virtual ~CDiagnosis( void );

	virtual bool InitializeMOSTElement();
	inline ::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck& NotificationCheckFunctionInstance() { return m_notificationCheckFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionNotification& NotificationFunctionInstance() { return m_notificationFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionFktIDs& FktIDsFunctionInstance() { return m_fktIDsFunction; }

private:
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_versionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMajorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMinorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionBuildParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_fBlockInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_fBlockInfoIDParameter;
::k2l::acs::protocols::most::CMOSTEnum m_fBlockInfoFunctionMaturityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_fBlockInfoFunctionMaturityParameterSpec;
const static uint8_t m_fBlockInfoFunctionMaturityParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription0Parameter;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSupplierVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSupplierVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoMOSTVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoMOSTVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSystemIntegratorParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSystemIntegratorParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockTypeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61440Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61441Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61442Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61443Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61444Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61445Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61446Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_fBlockInfoDescriptionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_sWVersionFunction;
::k2l::acs::protocols::most::CMOSTString m_sWVersionMainSWParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_sWVersionMainSWParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_sWVersionFCatParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_sWVersionFCatParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_sWVersionCANDBParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_sWVersionCANDBParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassSequenceProperty m_variantCodeFunction;
::k2l::acs::protocols::most::CMOSTEnum m_variantCodeVehicleVariantParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_variantCodeVehicleVariantParameterSpec;
const static uint8_t m_variantCodeVehicleVariantParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTEnum m_variantCodeCountryVariantParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_variantCodeCountryVariantParameterSpec;
const static uint8_t m_variantCodeCountryVariantParameterSpecValues[10];
::k2l::acs::protocols::most::CMOSTUnsignedLong m_variantCodeSystemVariantParameter;
::k2l::acs::protocols::most::CMOSTEnum m_variantCodeDVDRegionParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_variantCodeDVDRegionParameterSpec;
const static uint8_t m_variantCodeDVDRegionParameterSpecValues[9];
::k2l::acs::protocols::most::CMOSTUnsignedWord m_variantCodeDVDMenuLanguageParameter;
::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck m_notificationCheckFunction;
::k2l::acs::protocols::most::CWellknownFunctionNotification m_notificationFunction;
::k2l::acs::protocols::most::CWellknownFunctionFktIDs m_fktIDsFunction;
friend class CVersion;
friend class CFBlockInfo;
friend class CSWVersion;
friend class CVariantCode;

};
}
        }
    }
}



#endif // __DHAVN_MOSTMANAGER_DIAGNOSISSHADOW_H_
/*=============================================================================
 * END OF FILE
 *=============================================================================*/
