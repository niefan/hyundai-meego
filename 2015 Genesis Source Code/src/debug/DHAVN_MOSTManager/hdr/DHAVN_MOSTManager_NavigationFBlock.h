/*=!AUTO-GENERATED!============================================================
*
*     This code was generated by K2L MAG V2.3.4 at 2015-03-05.
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*     
*==!AUTO-GENERATED!============================================================*/

#ifndef __DHAVN_MOSTMANAGER_NAVIGATIONFBLOCK_H_
#define __DHAVN_MOSTMANAGER_NAVIGATIONFBLOCK_H_

/**
 * HMC DH Fcat v15.03.4
 **/

#include <stdint.h>
#include <K2LSystem.h>
#include <ACSStreams.h>
#include <K2LACSClient.h>
#include <K2LACSMOST.h>
#include <MOSTProtocolDefinitions.h>

namespace acs
{
    namespace generated
    {
        namespace fblock
        {
namespace Navigation
{

class CNavigation;

class CVersion
{
	CNavigation *m_pInstance;
public:
	explicit CVersion( CNavigation *pInstance );
	~CVersion(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x10 /* = 16 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool MajorValue( uint8_t value );
uint8_t MajorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MajorDataType();
bool MinorValue( uint8_t value );
uint8_t MinorValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& MinorDataType();
bool BuildValue( uint8_t value );
uint8_t BuildValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& BuildDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CFBlockInfo
{
	CNavigation *m_pInstance;
public:
	explicit CFBlockInfo( CNavigation *pInstance );
	~CFBlockInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x11 /* = 17 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool IDValue( uint16_t value );
uint16_t IDValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& IDDataType();
enum TFunctionMaturity
{
	FunctionMaturityUnknown = 0,
	FunctionMaturityInterfaceOnly = 1,
	FunctionMaturityPartlyImplemented = 2,
	FunctionMaturityFullyImplemented = 3,
	FunctionMaturityPartlyImplementedAndVerified = 17,
	FunctionMaturityFullyImplementedAndVerified = 18,
};
bool FunctionMaturityValue( acs::generated::fblock::Navigation::CFBlockInfo::TFunctionMaturity value );
acs::generated::fblock::Navigation::CFBlockInfo::TFunctionMaturity FunctionMaturityValue() const;
::k2l::acs::protocols::most::CMOSTEnum& FunctionMaturityDataType();
bool FBlockNameValue( uint8_t * value, uint32_t length );
uint8_t * FBlockNameValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockNameDataType();
uint32_t FBlockNameLength() const;
bool FBlockNameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockNameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SupplierVersionValue( uint8_t * value, uint32_t length );
uint8_t * SupplierVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& SupplierVersionDataType();
uint32_t SupplierVersionLength() const;
bool SupplierVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SupplierVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockVersionValue( uint8_t * value, uint32_t length );
uint8_t * FBlockVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockVersionDataType();
uint32_t FBlockVersionLength() const;
bool FBlockVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool MOSTVersionValue( uint8_t * value, uint32_t length );
uint8_t * MOSTVersionValue() const;
::k2l::acs::protocols::most::CMOSTString& MOSTVersionDataType();
uint32_t MOSTVersionLength() const;
bool MOSTVersionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool MOSTVersionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool SystemIntegratorValue( uint8_t * value, uint32_t length );
uint8_t * SystemIntegratorValue() const;
::k2l::acs::protocols::most::CMOSTString& SystemIntegratorDataType();
uint32_t SystemIntegratorLength() const;
bool SystemIntegratorAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool SystemIntegratorString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool FBlockTypeValue( uint8_t * value, uint32_t length );
uint8_t * FBlockTypeValue() const;
::k2l::acs::protocols::most::CMOSTString& FBlockTypeDataType();
uint32_t FBlockTypeLength() const;
bool FBlockTypeAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool FBlockTypeString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DescriptionValue( uint8_t * value, uint32_t length );
const uint8_t * DescriptionValue() const;
::k2l::acs::protocols::most::CMOSTCaseStream& DescriptionDataType();
uint32_t DescriptionStreamLength() const;
bool DescriptionLoadNext();
bool DescriptionSaveNext();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CGPSRawData
{
	CNavigation *m_pInstance;
public:
	explicit CGPSRawData( CNavigation *pInstance );
	~CGPSRawData(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0x440 /* = 1088 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool PositionWGS84LongitudeValue( int32_t value );
int32_t PositionWGS84LongitudeValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& PositionWGS84LongitudeDataType();
bool PositionWGS84LatitudeValue( int32_t value );
int32_t PositionWGS84LatitudeValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& PositionWGS84LatitudeDataType();
enum TAdditionalInformationFix
{
	AdditionalInformationFixReserved = 0,
	AdditionalInformationFixNotAvailable = 1,
	AdditionalInformationFixNoFix = 2,
	AdditionalInformationFix2DFix = 3,
	AdditionalInformationFix3DFix = 4,
	AdditionalInformationFixAntennaNotProperlyConnected = 5,
	AdditionalInformationFixInvalid = 255,
};
bool AdditionalInformationFixValue( acs::generated::fblock::Navigation::CGPSRawData::TAdditionalInformationFix value );
acs::generated::fblock::Navigation::CGPSRawData::TAdditionalInformationFix AdditionalInformationFixValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AdditionalInformationFixDataType();
bool AdditionalInformationHDOPValue( uint16_t value );
uint16_t AdditionalInformationHDOPValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& AdditionalInformationHDOPDataType();
bool AdditionalInformationVDOPValue( uint16_t value );
uint16_t AdditionalInformationVDOPValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& AdditionalInformationVDOPDataType();
bool AdditionalInformationSpeedValue( int16_t value );
int16_t AdditionalInformationSpeedValue() const;
::k2l::acs::protocols::most::CMOSTSignedWord& AdditionalInformationSpeedDataType();
bool AdditionalInformationHeadingValue( uint8_t value );
uint8_t AdditionalInformationHeadingValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& AdditionalInformationHeadingDataType();
bool AdditionalInformationHeightValue( int16_t value );
int16_t AdditionalInformationHeightValue() const;
::k2l::acs::protocols::most::CMOSTSignedWord& AdditionalInformationHeightDataType();
bool DateYearValue( uint16_t value );
uint16_t DateYearValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DateYearDataType();
bool DateMonthValue( uint8_t value );
uint8_t DateMonthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DateMonthDataType();
bool DateDayValue( uint8_t value );
uint8_t DateDayValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DateDayDataType();
bool TimeHourValue( uint8_t value );
uint8_t TimeHourValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& TimeHourDataType();
bool TimeMinuteValue( uint8_t value );
uint8_t TimeMinuteValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& TimeMinuteDataType();
bool TimeSecondValue( uint8_t value );
uint8_t TimeSecondValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& TimeSecondDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CMapData
{
	CNavigation *m_pInstance;
public:
	explicit CMapData( CNavigation *pInstance );
	~CMapData(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC03 /* = 3075 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	enum TDataAvailabe
{
	DataAvailabeDataNotAvailable = 0,
	DataAvailabeDataAvailable = 1,
	DataAvailabeInvalid = 255,
};
bool DataAvailabeValue( acs::generated::fblock::Navigation::CMapData::TDataAvailabe value );
acs::generated::fblock::Navigation::CMapData::TDataAvailabe DataAvailabeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& DataAvailabeDataType();
enum TMapDataType
{
	MapDataTypeNone = 0,
	MapDataTypeSDCard = 1,
	MapDataTypeSSDHDD = 2,
	MapDataTypeDISC = 3,
	MapDataTypeInvalid = 255,
};
bool MapDataTypeValue( acs::generated::fblock::Navigation::CMapData::TMapDataType value );
acs::generated::fblock::Navigation::CMapData::TMapDataType MapDataTypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& MapDataTypeDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CRequestLocalSearch
{
	CNavigation *m_pInstance;
public:
	explicit CRequestLocalSearch( CNavigation *pInstance );
	~CRequestLocalSearch(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC11 /* = 3089 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
bool InputKeywordValue( uint8_t * value, uint32_t length );
uint8_t * InputKeywordValue() const;
::k2l::acs::protocols::most::CMOSTString& InputKeywordDataType();
uint32_t InputKeywordLength() const;
bool InputKeywordAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool InputKeywordString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool InputKeywordString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class COpenLocalSearch
{
	CNavigation *m_pInstance;
public:
	explicit COpenLocalSearch( CNavigation *pInstance );
	~COpenLocalSearch(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC12 /* = 3090 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::fblock::Navigation::COpenLocalSearch::TTarget value );
acs::generated::fblock::Navigation::COpenLocalSearch::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
bool TextValue( uint8_t * value, uint32_t length );
uint8_t * TextValue() const;
::k2l::acs::protocols::most::CMOSTString& TextDataType();
uint32_t TextLength() const;
bool TextAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool TextString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool TextString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
bool ParseAbortAck( uint32_t payloadLength, const uint8_t * payload );
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CSearchPOI
{
	CNavigation *m_pInstance;
public:
	explicit CSearchPOI( CNavigation *pInstance );
	~CSearchPOI(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC21 /* = 3105 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::fblock::Navigation::CSearchPOI::TTarget value );
acs::generated::fblock::Navigation::CSearchPOI::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
bool InputKeywordValue( uint8_t * value, uint32_t length );
uint8_t * InputKeywordValue() const;
::k2l::acs::protocols::most::CMOSTString& InputKeywordDataType();
uint32_t InputKeywordLength() const;
bool InputKeywordAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool InputKeywordString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool InputKeywordString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessBadRequest = 1,
	SuccessDuplicated = 2,
	SuccessListFull = 3,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::fblock::Navigation::CSearchPOI::TSuccess value );
acs::generated::fblock::Navigation::CSearchPOI::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CSearchRoute
{
	CNavigation *m_pInstance;
public:
	explicit CSearchRoute( CNavigation *pInstance );
	~CSearchRoute(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC22 /* = 3106 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::fblock::Navigation::CSearchRoute::TTarget value );
acs::generated::fblock::Navigation::CSearchRoute::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
bool LatValue( int32_t value );
int32_t LatValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LatDataType();
bool LonValue( int32_t value );
int32_t LonValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LonDataType();
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessBadRequest = 1,
	SuccessDuplicated = 2,
	SuccessListFull = 3,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::fblock::Navigation::CSearchRoute::TSuccess value );
acs::generated::fblock::Navigation::CSearchRoute::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CShowMap
{
	CNavigation *m_pInstance;
public:
	explicit CShowMap( CNavigation *pInstance );
	~CShowMap(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC23 /* = 3107 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::fblock::Navigation::CShowMap::TTarget value );
acs::generated::fblock::Navigation::CShowMap::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
bool LatValue( int32_t value );
int32_t LatValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LatDataType();
bool LonValue( int32_t value );
int32_t LonValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LonDataType();
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessBadRequest = 1,
	SuccessDuplicated = 2,
	SuccessListFull = 3,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::fblock::Navigation::CShowMap::TSuccess value );
acs::generated::fblock::Navigation::CShowMap::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CRegisterMyLocation
{
	CNavigation *m_pInstance;
public:
	explicit CRegisterMyLocation( CNavigation *pInstance );
	~CRegisterMyLocation(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC24 /* = 3108 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::fblock::Navigation::CRegisterMyLocation::TTarget value );
acs::generated::fblock::Navigation::CRegisterMyLocation::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
bool LatValue( int32_t value );
int32_t LatValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LatDataType();
bool LonValue( int32_t value );
int32_t LonValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LonDataType();
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessBadRequest = 1,
	SuccessDuplicated = 2,
	SuccessListFull = 3,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::fblock::Navigation::CRegisterMyLocation::TSuccess value );
acs::generated::fblock::Navigation::CRegisterMyLocation::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CDestinationInfo
{
	CNavigation *m_pInstance;
public:
	explicit CDestinationInfo( CNavigation *pInstance );
	~CDestinationInfo(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC25 /* = 3109 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	enum TRouteSet
{
	RouteSetNoRoute = 0,
	RouteSetRouteSet = 1,
	RouteSetInvalid = 255,
};
bool RouteSetValue( acs::generated::fblock::Navigation::CDestinationInfo::TRouteSet value );
acs::generated::fblock::Navigation::CDestinationInfo::TRouteSet RouteSetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& RouteSetDataType();
enum TSrc
{
	SrcGoogle = 0,
	SrcNavInfo = 1,
};
bool SrcValue( acs::generated::fblock::Navigation::CDestinationInfo::TSrc value );
acs::generated::fblock::Navigation::CDestinationInfo::TSrc SrcValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SrcDataType();
enum TLang
{
	LangEnglish = 0,
	LangFrench = 1,
	LangSpanish = 2,
	LangKorean = 3,
	LangChinese = 4,
	LangPortuguese = 5,
};
bool LangValue( acs::generated::fblock::Navigation::CDestinationInfo::TLang value );
acs::generated::fblock::Navigation::CDestinationInfo::TLang LangValue() const;
::k2l::acs::protocols::most::CMOSTEnum& LangDataType();
enum TCate
{
	CatePOI = 0,
	CateRestaurant = 1,
	CateGasStation = 2,
	CateFriendFinder = 3,
};
bool CateValue( acs::generated::fblock::Navigation::CDestinationInfo::TCate value );
acs::generated::fblock::Navigation::CDestinationInfo::TCate CateValue() const;
::k2l::acs::protocols::most::CMOSTEnum& CateDataType();
bool RatingValue( uint8_t * value, uint32_t length );
uint8_t * RatingValue() const;
::k2l::acs::protocols::most::CMOSTString& RatingDataType();
uint32_t RatingLength() const;
bool RatingAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool RatingString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool RatingString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool PhoneValue( uint8_t * value, uint32_t length );
uint8_t * PhoneValue() const;
::k2l::acs::protocols::most::CMOSTString& PhoneDataType();
uint32_t PhoneLength() const;
bool PhoneAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool PhoneString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool PhoneString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool AddrValue( uint8_t * value, uint32_t length );
uint8_t * AddrValue() const;
::k2l::acs::protocols::most::CMOSTString& AddrDataType();
uint32_t AddrLength() const;
bool AddrAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool AddrString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool AddrString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool ZipValue( uint8_t * value, uint32_t length );
uint8_t * ZipValue() const;
::k2l::acs::protocols::most::CMOSTString& ZipDataType();
uint32_t ZipLength() const;
bool ZipAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool ZipString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool ZipString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool NameValue( uint8_t * value, uint32_t length );
uint8_t * NameValue() const;
::k2l::acs::protocols::most::CMOSTString& NameDataType();
uint32_t NameLength() const;
bool NameAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NameString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool NoteValue( uint8_t * value, uint32_t length );
uint8_t * NoteValue() const;
::k2l::acs::protocols::most::CMOSTString& NoteDataType();
uint32_t NoteLength() const;
bool NoteAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool NoteString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool NoteString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool UrlValue( uint8_t * value, uint32_t length );
uint8_t * UrlValue() const;
::k2l::acs::protocols::most::CMOSTString& UrlDataType();
uint32_t UrlLength() const;
bool UrlAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool UrlString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool UrlString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool AngleValue( uint16_t value );
uint16_t AngleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& AngleDataType();
bool DistanceValue( uint8_t * value, uint32_t length );
uint8_t * DistanceValue() const;
::k2l::acs::protocols::most::CMOSTString& DistanceDataType();
uint32_t DistanceLength() const;
bool DistanceAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DistanceString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DistanceString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool DirectionValue( uint8_t * value, uint32_t length );
uint8_t * DirectionValue() const;
::k2l::acs::protocols::most::CMOSTString& DirectionDataType();
uint32_t DirectionLength() const;
bool DirectionAddEncoding(uint8_t mostStringIdentifier, const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding );
bool DirectionString(const k2l::acs::protocols::most::string::IStringEncoding* pStringEncoding, const uint8_t* pStringContent, uint32_t stringLengthBytes );
bool DirectionString(const k2l::acs::protocols::most::string::IStringEncoding** ppStringEncoding, uint8_t** ppString, uint32_t* pStringLength );
bool LatValue( int32_t value );
int32_t LatValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LatDataType();
bool LonValue( int32_t value );
int32_t LonValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LonDataType();
enum TType
{
	TypeWGS84 = 0,
	TypeBessel = 1,
};
bool TypeValue( acs::generated::fblock::Navigation::CDestinationInfo::TType value );
acs::generated::fblock::Navigation::CDestinationInfo::TType TypeValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TypeDataType();
bool AltValue( uint32_t value );
uint32_t AltValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedLong& AltDataType();
bool POIDataValue( uint8_t * value, uint32_t length );
const uint8_t * POIDataValue() const;
::k2l::acs::protocols::most::CMOSTList& POIDataDataType();
uint32_t POIDataStreamLength() const;
bool POIDataLoadNext();
bool POIDataSaveNext();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CFindNearBy
{
	CNavigation *m_pInstance;
public:
	explicit CFindNearBy( CNavigation *pInstance );
	~CFindNearBy(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC26 /* = 3110 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TTarget
{
	TargetALL = 0,
	TargetFRONT = 1,
	TargetREAR1 = 2,
	TargetREAR2 = 3,
	TargetInvalid = 255,
};
bool TargetValue( acs::generated::fblock::Navigation::CFindNearBy::TTarget value );
acs::generated::fblock::Navigation::CFindNearBy::TTarget TargetValue() const;
::k2l::acs::protocols::most::CMOSTEnum& TargetDataType();
enum TPOIKind
{
	POIKindNone = 0,
	POIKindServiceCenter = 1,
	POIKindParkingLot = 2,
	POIKindGasStation = 3,
	POIKindReserved = 4,
	POIKindReserved1 = 5,
	POIKindReserved2 = 6,
	POIKindReserved3 = 7,
	POIKindReserved4 = 8,
	POIKindReserved5 = 9,
	POIKindReserved6 = 10,
	POIKindReserved7 = 11,
	POIKindReserved8 = 12,
	POIKindReserved9 = 13,
	POIKindReserved10 = 14,
	POIKindReserved11 = 15,
	POIKindInvalid = 255,
};
bool POIKindValue( acs::generated::fblock::Navigation::CFindNearBy::TPOIKind value );
acs::generated::fblock::Navigation::CFindNearBy::TPOIKind POIKindValue() const;
::k2l::acs::protocols::most::CMOSTEnum& POIKindDataType();
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
enum TSuccess
{
	SuccessSuccess = 0,
	SuccessBadRequest = 1,
	SuccessDuplicated = 2,
	SuccessListFull = 3,
	SuccessInvalid = 255,
};
bool SuccessValue( acs::generated::fblock::Navigation::CFindNearBy::TSuccess value );
acs::generated::fblock::Navigation::CFindNearBy::TSuccess SuccessValue() const;
::k2l::acs::protocols::most::CMOSTEnum& SuccessDataType();
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CCheckGPSBoundary
{
	CNavigation *m_pInstance;
public:
	explicit CCheckGPSBoundary( CNavigation *pInstance );
	~CCheckGPSBoundary(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xC27 /* = 3111 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod& FunctionInstance(void);
	bool SenderHandleValue( uint16_t value );
uint16_t SenderHandleValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& SenderHandleDataType();
enum TGPSState
{
	TGPSStateValue0 = 0,
	GPSStateNotOK = 1,
};
bool GPSStateValue( acs::generated::fblock::Navigation::CCheckGPSBoundary::TGPSState value );
acs::generated::fblock::Navigation::CCheckGPSBoundary::TGPSState GPSStateValue() const;
::k2l::acs::protocols::most::CMOSTEnum& GPSStateDataType();
bool ResultAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice );
bool LatValue( int32_t value );
int32_t LatValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LatDataType();
bool LonValue( int32_t value );
int32_t LonValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& LonDataType();
bool ParseStartResultAck( uint32_t payloadLength, const uint8_t * payload );
bool ProcessingAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle );
void SetHandler( ::k2l::acs::protocols::most::IFunctionBlockMethodHandler *pHandler );
bool ParseSenderHandle( uint32_t payloadLength, const uint8_t *payload, uint16_t *pSenderHandle );            
bool ErrorAck( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint16_t senderHandle, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};


class CNavigation;

class CGPSRawDataBessel
{
	CNavigation *m_pInstance;
public:
	explicit CGPSRawDataBessel( CNavigation *pInstance );
	~CGPSRawDataBessel(void);

	void SetListener(::k2l::acs::protocols::most::IACSMOSTEventListener * pListener);
	bool RemoveListener(::k2l::acs::protocols::most::IACSMOSTEventListener *pListener);

	enum
	{
		FunctionID = 0xD00 /* = 3328 (decimal) */
	};

	::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty& FunctionInstance(void);
	bool BesselEllipsoidBesselLongitudeValue( int32_t value );
int32_t BesselEllipsoidBesselLongitudeValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& BesselEllipsoidBesselLongitudeDataType();
bool BesselEllipsoidBesselLatitudeValue( int32_t value );
int32_t BesselEllipsoidBesselLatitudeValue() const;
::k2l::acs::protocols::most::CMOSTSignedLong& BesselEllipsoidBesselLatitudeDataType();
enum TAdditionalInformationFix
{
	AdditionalInformationFixReserved = 0,
	AdditionalInformationFixNotAvailable = 1,
	AdditionalInformationFixNoFix = 2,
	AdditionalInformationFix2DFix = 3,
	AdditionalInformationFix3DFix = 4,
	AdditionalInformationFixAntennaNotProperlyConnected = 5,
	AdditionalInformationFixInvalid = 255,
};
bool AdditionalInformationFixValue( acs::generated::fblock::Navigation::CGPSRawDataBessel::TAdditionalInformationFix value );
acs::generated::fblock::Navigation::CGPSRawDataBessel::TAdditionalInformationFix AdditionalInformationFixValue() const;
::k2l::acs::protocols::most::CMOSTEnum& AdditionalInformationFixDataType();
bool AdditionalInformationHDOPValue( uint16_t value );
uint16_t AdditionalInformationHDOPValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& AdditionalInformationHDOPDataType();
bool AdditionalInformationVDOPValue( uint16_t value );
uint16_t AdditionalInformationVDOPValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& AdditionalInformationVDOPDataType();
bool AdditionalInformationSpeedValue( int16_t value );
int16_t AdditionalInformationSpeedValue() const;
::k2l::acs::protocols::most::CMOSTSignedWord& AdditionalInformationSpeedDataType();
bool AdditionalInformationHeadingValue( uint8_t value );
uint8_t AdditionalInformationHeadingValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& AdditionalInformationHeadingDataType();
bool AdditionalInformationHeightValue( int16_t value );
int16_t AdditionalInformationHeightValue() const;
::k2l::acs::protocols::most::CMOSTSignedWord& AdditionalInformationHeightDataType();
bool DateYearValue( uint16_t value );
uint16_t DateYearValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedWord& DateYearDataType();
bool DateMonthValue( uint8_t value );
uint8_t DateMonthValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DateMonthDataType();
bool DateDayValue( uint8_t value );
uint8_t DateDayValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& DateDayDataType();
bool TimeHourValue( uint8_t value );
uint8_t TimeHourValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& TimeHourDataType();
bool TimeMinuteValue( uint8_t value );
uint8_t TimeMinuteValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& TimeMinuteDataType();
bool TimeSecondValue( uint8_t value );
uint8_t TimeSecondValue() const;
::k2l::acs::protocols::most::CMOSTUnsignedByte& TimeSecondDataType();
bool UpdateShadows();
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint32_t payloadLength, const uint8_t *payload );
bool Error( ::k2l::acs::protocols::most::DeviceID_t targetDevice, uint8_t errorCode, uint32_t errorInfoLength, const uint8_t *pErrorInfo );            

};

class CNavigation: public ::k2l::acs::protocols::most::CFunctionBlockBase
{
private:
	CNavigation();
	CNavigation(CNavigation& toCopy);
public:
	enum
	{
		FBlockID = 0x52 /* = 82 (decimal) */
	};

	CNavigation( ::k2l::acs::protocols::most::InstanceID_t instanceID );
	CNavigation( ::k2l::acs::protocols::most::FBlockID_t fblockID,
		k2l::acs::protocols::most::InstanceID_t instanceID );
	virtual ~CNavigation( void );

	virtual bool InitializeMOSTElement();
	inline ::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck& NotificationCheckFunctionInstance() { return m_notificationCheckFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionNotification& NotificationFunctionInstance() { return m_notificationFunction; }
inline ::k2l::acs::protocols::most::CWellknownFunctionFktIDs& FktIDsFunctionInstance() { return m_fktIDsFunction; }

private:
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_versionFunction;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMajorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionMinorParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_versionBuildParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_fBlockInfoFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_fBlockInfoIDParameter;
::k2l::acs::protocols::most::CMOSTEnum m_fBlockInfoFunctionMaturityParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_fBlockInfoFunctionMaturityParameterSpec;
const static uint8_t m_fBlockInfoFunctionMaturityParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription0RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription0Parameter;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSupplierVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSupplierVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoMOSTVersionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoMOSTVersionParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoSystemIntegratorParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoSystemIntegratorParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_fBlockInfoFBlockTypeParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_fBlockInfoFBlockTypeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61440RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61440Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61441RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61441Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61442RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61442Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61443RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61443Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61444RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61444Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61445RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61445Parameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_fBlockInfoDescription61446RecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_fBlockInfoDescription61446Parameter;
::k2l::acs::protocols::most::CMOSTCaseStream m_fBlockInfoDescriptionParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_gPSRawDataFunction;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataPositionWGS84RecordParameter;
::k2l::acs::protocols::most::CMOSTSignedLong m_gPSRawDataPositionWGS84LongitudeParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_gPSRawDataPositionWGS84LongitudeParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_gPSRawDataPositionWGS84LatitudeParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_gPSRawDataPositionWGS84LatitudeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataAdditionalInformationRecordParameter;
::k2l::acs::protocols::most::CMOSTEnum m_gPSRawDataAdditionalInformationFixParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_gPSRawDataAdditionalInformationFixParameterSpec;
const static uint8_t m_gPSRawDataAdditionalInformationFixParameterSpecValues[7];
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gPSRawDataAdditionalInformationHDOPParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_gPSRawDataAdditionalInformationHDOPParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gPSRawDataAdditionalInformationVDOPParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_gPSRawDataAdditionalInformationVDOPParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedWord m_gPSRawDataAdditionalInformationSpeedParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataAdditionalInformationHeadingParameter;
::k2l::acs::protocols::most::CMOSTSignedWord m_gPSRawDataAdditionalInformationHeightParameter;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataDateRecordParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gPSRawDataDateYearParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataDateMonthParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataDateMonthParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataDateDayParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataDateDayParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataTimeRecordParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataTimeHourParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataTimeHourParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataTimeMinuteParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataTimeMinuteParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataTimeSecondParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataTimeSecondParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_mapDataFunction;
::k2l::acs::protocols::most::CMOSTEnum m_mapDataDataAvailabeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_mapDataDataAvailabeParameterSpec;
const static uint8_t m_mapDataDataAvailabeParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTEnum m_mapDataMapDataTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_mapDataMapDataTypeParameterSpec;
const static uint8_t m_mapDataMapDataTypeParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_requestLocalSearchFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_requestLocalSearchSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTString m_requestLocalSearchInputKeywordParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_requestLocalSearchInputKeywordParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_openLocalSearchFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_openLocalSearchSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_openLocalSearchTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_openLocalSearchTargetParameterSpec;
const static uint8_t m_openLocalSearchTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTString m_openLocalSearchTextParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_openLocalSearchTextParameterSpec;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_searchPOIFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_searchPOISenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_searchPOITargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_searchPOITargetParameterSpec;
const static uint8_t m_searchPOITargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTString m_searchPOIInputKeywordParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_searchPOIInputKeywordParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_searchPOISuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_searchPOISuccessParameterSpec;
const static uint8_t m_searchPOISuccessParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_searchRouteFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_searchRouteSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_searchRouteTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_searchRouteTargetParameterSpec;
const static uint8_t m_searchRouteTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTSignedLong m_searchRouteLatParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_searchRouteLatParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_searchRouteLonParameter;
::k2l::acs::protocols::most::CMOSTString m_searchRouteNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_searchRouteNameParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_searchRouteSuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_searchRouteSuccessParameterSpec;
const static uint8_t m_searchRouteSuccessParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_showMapFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_showMapSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_showMapTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_showMapTargetParameterSpec;
const static uint8_t m_showMapTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTSignedLong m_showMapLatParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_showMapLatParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_showMapLonParameter;
::k2l::acs::protocols::most::CMOSTString m_showMapNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_showMapNameParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_showMapSuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_showMapSuccessParameterSpec;
const static uint8_t m_showMapSuccessParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_registerMyLocationFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_registerMyLocationSenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_registerMyLocationTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_registerMyLocationTargetParameterSpec;
const static uint8_t m_registerMyLocationTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTSignedLong m_registerMyLocationLatParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_registerMyLocationLatParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_registerMyLocationLonParameter;
::k2l::acs::protocols::most::CMOSTString m_registerMyLocationNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_registerMyLocationNameParameterSpec;
::k2l::acs::protocols::most::CMOSTEnum m_registerMyLocationSuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_registerMyLocationSuccessParameterSpec;
const static uint8_t m_registerMyLocationSuccessParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_destinationInfoFunction;
::k2l::acs::protocols::most::CMOSTEnum m_destinationInfoRouteSetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_destinationInfoRouteSetParameterSpec;
const static uint8_t m_destinationInfoRouteSetParameterSpecValues[3];
::k2l::acs::protocols::most::CMOSTEnum m_destinationInfoSrcParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_destinationInfoSrcParameterSpec;
const static uint8_t m_destinationInfoSrcParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTEnum m_destinationInfoLangParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_destinationInfoLangParameterSpec;
const static uint8_t m_destinationInfoLangParameterSpecValues[6];
::k2l::acs::protocols::most::CMOSTEnum m_destinationInfoCateParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_destinationInfoCateParameterSpec;
const static uint8_t m_destinationInfoCateParameterSpecValues[4];
::k2l::acs::protocols::most::CMOSTString m_destinationInfoRatingParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoRatingParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoPhoneParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoPhoneParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoAddrParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoAddrParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoZipParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoZipParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoNameParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoNameParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoNoteParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoNoteParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoUrlParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoUrlParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_destinationInfoAngleParameter;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoDistanceParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoDistanceParameterSpec;
::k2l::acs::protocols::most::CMOSTString m_destinationInfoDirectionParameter;
::k2l::acs::protocols::most::CMOSTStringSpecification m_destinationInfoDirectionParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_destinationInfoLatParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_destinationInfoLatParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_destinationInfoLonParameter;
::k2l::acs::protocols::most::CMOSTEnum m_destinationInfoTypeParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_destinationInfoTypeParameterSpec;
const static uint8_t m_destinationInfoTypeParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTUnsignedLong m_destinationInfoAltParameter;
::k2l::acs::protocols::most::CMOSTRecord m_destinationInfoPOIDataRecordFixParameter;
::k2l::acs::protocols::most::CMOSTRecord m_destinationInfoPOIDataRecordIteratorParameter;
::k2l::acs::protocols::most::CMOSTList m_destinationInfoPOIDataParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_findNearByFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_findNearBySenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_findNearByTargetParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_findNearByTargetParameterSpec;
const static uint8_t m_findNearByTargetParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTEnum m_findNearByPOIKindParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_findNearByPOIKindParameterSpec;
const static uint8_t m_findNearByPOIKindParameterSpecValues[17];
::k2l::acs::protocols::most::CMOSTEnum m_findNearBySuccessParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_findNearBySuccessParameterSpec;
const static uint8_t m_findNearBySuccessParameterSpecValues[5];
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedMethod m_checkGPSBoundaryFunction;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_checkGPSBoundarySenderHandleParameter;
::k2l::acs::protocols::most::CMOSTEnum m_checkGPSBoundaryGPSStateParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_checkGPSBoundaryGPSStateParameterSpec;
const static uint8_t m_checkGPSBoundaryGPSStateParameterSpecValues[2];
::k2l::acs::protocols::most::CMOSTSignedLong m_checkGPSBoundaryLatParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_checkGPSBoundaryLatParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_checkGPSBoundaryLonParameter;
::k2l::acs::protocols::most::CMOSTFunctionClassUnclassifiedProperty m_gPSRawDataBesselFunction;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataBesselBesselEllipsoidRecordParameter;
::k2l::acs::protocols::most::CMOSTSignedLong m_gPSRawDataBesselBesselEllipsoidBesselLongitudeParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_gPSRawDataBesselBesselEllipsoidBesselLongitudeParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedLong m_gPSRawDataBesselBesselEllipsoidBesselLatitudeParameter;
::k2l::acs::protocols::most::CNumberSpecificationSignedLong m_gPSRawDataBesselBesselEllipsoidBesselLatitudeParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataBesselAdditionalInformationRecordParameter;
::k2l::acs::protocols::most::CMOSTEnum m_gPSRawDataBesselAdditionalInformationFixParameter;
::k2l::acs::protocols::most::CMOSTEnumSpecification m_gPSRawDataBesselAdditionalInformationFixParameterSpec;
const static uint8_t m_gPSRawDataBesselAdditionalInformationFixParameterSpecValues[7];
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gPSRawDataBesselAdditionalInformationHDOPParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_gPSRawDataBesselAdditionalInformationHDOPParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gPSRawDataBesselAdditionalInformationVDOPParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedWord m_gPSRawDataBesselAdditionalInformationVDOPParameterSpec;
::k2l::acs::protocols::most::CMOSTSignedWord m_gPSRawDataBesselAdditionalInformationSpeedParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataBesselAdditionalInformationHeadingParameter;
::k2l::acs::protocols::most::CMOSTSignedWord m_gPSRawDataBesselAdditionalInformationHeightParameter;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataBesselDateRecordParameter;
::k2l::acs::protocols::most::CMOSTUnsignedWord m_gPSRawDataBesselDateYearParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataBesselDateMonthParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataBesselDateMonthParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataBesselDateDayParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataBesselDateDayParameterSpec;
::k2l::acs::protocols::most::CMOSTRecord m_gPSRawDataBesselTimeRecordParameter;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataBesselTimeHourParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataBesselTimeHourParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataBesselTimeMinuteParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataBesselTimeMinuteParameterSpec;
::k2l::acs::protocols::most::CMOSTUnsignedByte m_gPSRawDataBesselTimeSecondParameter;
::k2l::acs::protocols::most::CNumberSpecificationUnsignedByte m_gPSRawDataBesselTimeSecondParameterSpec;
::k2l::acs::protocols::most::CWellknownFunctionNotificationCheck m_notificationCheckFunction;
::k2l::acs::protocols::most::CWellknownFunctionNotification m_notificationFunction;
::k2l::acs::protocols::most::CWellknownFunctionFktIDs m_fktIDsFunction;
friend class CVersion;
friend class CFBlockInfo;
friend class CGPSRawData;
friend class CMapData;
friend class CRequestLocalSearch;
friend class COpenLocalSearch;
friend class CSearchPOI;
friend class CSearchRoute;
friend class CShowMap;
friend class CRegisterMyLocation;
friend class CDestinationInfo;
friend class CFindNearBy;
friend class CCheckGPSBoundary;
friend class CGPSRawDataBessel;

};
}
        }
    }
}



#endif // __DHAVN_MOSTMANAGER_NAVIGATIONFBLOCK_H_
/*=============================================================================
 * END OF FILE
 *=============================================================================*/
