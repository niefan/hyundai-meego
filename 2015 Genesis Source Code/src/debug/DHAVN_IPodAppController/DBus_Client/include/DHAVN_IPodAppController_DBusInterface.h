#ifndef DHAVN_IPODAPPCONTROLLER_DBUSINTERFACE_H
#define DHAVN_IPODAPPCONTROLLER_DBUSINTERFACE_H

/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp dbusText.xml -i dbusTestInterface.h -p CDbusTestInterface
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */


#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include <DHAVN_LogUtil.h>

/*
 * Proxy class for interface org.lge.dbusTest
 */
class OrgLgeDbusTestInterface: public QDBusAbstractInterface
{
    USE_LOG_UTIL
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.lge.dbusTest"; }

public:
    OrgLgeDbusTestInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgLgeDbusTestInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<qint16> GetApplicationSessionID(const QString &AppId)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(AppId);
        return asyncCallWithArgumentList(QLatin1String("GetApplicationSessionID"), argumentList);
    }

    inline QDBusPendingReply<QString> GetHidPath(const QString &ipodNumber)
    {
        //LOG_TRACE << "QDBusPendingReply<QString> GetHidPath: ipodnumber : " << ipodNumber.toAscii().data() <<LOG_ENDL;
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(ipodNumber);
        return asyncCallWithArgumentList(QLatin1String("GetHidPath"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void IPodDisconnected(const QString& ipodNumber);
    void IpodAppSessionClosed(const QString& ipodNumber, const QString& appId);
};

namespace org {
  namespace lge {
    typedef ::OrgLgeDbusTestInterface dbusTest;
  }
}
#endif // DHAVN_IPODAPPCONTROLLER_DBUSINTERFACE_H
